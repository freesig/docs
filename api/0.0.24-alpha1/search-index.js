var N=null,E="",T="t",U="u",searchIndex={};
var R=["string","varerror","holochain_common","projectdirs","pathbuf","holochain_common::env_vars","result","EnvVar","returns a dummy header for use in tests","chainheader","provenance","entrytype","address","option","holochain_core_types","entityattributevalueindex","persistenceresult","CrudStatus","attribute","holochain_core_types::eav","EntityAttributeValueStorage","holochainerror","btreeset","crud_status","LinkRemove","ChainHeader","jsonstring","CapTokenClaim","CapTokenGrant","captokenvalue","capabilitytype","capfunctions","holochain_core_types::entry","entry_type","Deletion","LinkList","ChainMigrate","appentrytype","zomeapiinternalresult","AgentId","agentid","hcresult","holochain_core_types::dna::bridges","holochain_core_types::dna::bridges::BridgeReference","Required or optional","holochain_core_types::dna","The target_type of this links_to entry","link_type","properties","zomeentrytypes","functions","\"functions\" array","modulearc","description","entry_types","fn_declarations","btreemap","fnparameter","fndeclaration","dnaerror","traitfns","dnawasm","entrytypedef","get_required_bridges","action_kind","linkactionkind","holochain_core_types::link","signature","iso8601","chain_header","holochain_core_types::validation","holochain_core_types::validation::EntryValidationData","validation_data","old_entry","old_entry_header","LinkAdd","holochain_core_types::validation::LinkValidationData","holochain_core_types::chain_header","try_from","try_into","borrow_mut","holochain_core_types::crud_status","to_owned","clone_into","type_id","clone_box","holochain_core_types::eav::eavi","equivalent","holochain_core_types::eav::storage","borrow","typeid","holochain_core_types::entry::cap_entries","holochain_core_types::entry::deletion_entry","holochain_core_types::entry::entry_type","to_string","holochain_core_types::error","holochain_core_types::agent","holochain_core_types::chain_migrate","holochain_core_types::dna::capabilities","holochain_core_types::dna::entry_types","holochain_core_types::dna::fn_declarations","holochain_core_types::dna::traits","holochain_core_types::dna::wasm","holochain_core_types::dna::zome","holochain_core_types::link::link_data","holochain_core_types::link::link_list","holochain_core_types::signature","holochain_core_types::time","fetch_eavi","eaviquery","ribosomeencodingbits","ribosomeencodedvalue","ribosomeerrorcode","fixedoffset","crudstatus","captokenclaim","captokengrant","deletionentry","entrywithmeta","entrywithmetaandheader","ribosomeencodedallocation","coreerror","bridgereference","capabilityrequest","linkedfrom","validationpackage","validationpackagedefinition","exampleentityattributevaluestorage","bridgepresence","linkdata","linklist","default","Provide defaults for a \"links_to\" object.","partial_cmp","ordering","formatter","from_str","entryvalidationdata","serialize","deserialize","content","try_from_content","jsonresult","Attribute","ExampleEntityAttributeValueStorage","EntryWithMeta","EntryWithMetaAndHeader","CapabilityType","ReservedCapabilityId","DeletionEntry","EntryType","CoreError","ZomeApiInternalResult","RibosomeEncodedValue","RibosomeErrorCode","HolochainError","BridgeReference","BridgePresence","CapabilityRequest","LinkedFrom","EntryTypeDef","FnParameter","FnDeclaration","ReservedTraitNames","ModuleArc","LinkActionKind","LinkMatch","Provenance","Signature","ValidationPackage","ValidationData","ValidationPackageDefinition","EntryValidationData","LinkValidationData","EntryLifecycle","EntryAction","LinkAction","AppEntryType","RibosomeEncodedAllocation","RibosomeEncodingBits","RibosomeRuntimeBits","CStringVec","cap_token","Struct for input data received when Zome API function…","new_entry","dna_address","capabilities","assignees","holochain_wasm_utils::api_serialization","commitentryoptions","timeout","statusrequestkind","entry_address","status_request","linksresult","headers","options","validation","direction","payload","holochain_wasm_utils","holochain_wasm_utils::memory","holochain_wasm_utils::memory::allocation","allocationresult","as_ribosome_encoding","memorybits","allocationerror","wasmallocation","holochain_wasm_utils::memory::stack","Macro for creating a RibosomeErrorCode as a RuntimeValue…","holochain_wasm_utils::api_serialization::capabilities","holochain_wasm_utils::api_serialization::commit_entry","holochain_wasm_utils::api_serialization::crypto","holochain_wasm_utils::api_serialization::emit_signal","holochain_wasm_utils::api_serialization::get_entry","holochain_wasm_utils::api_serialization::get_links","holochain_wasm_utils::api_serialization::keystore","holochain_wasm_utils::api_serialization::link_entries","holochain_wasm_utils::api_serialization::query","holochain_wasm_utils::api_serialization::receive","holochain_wasm_utils::api_serialization::send","holochain_wasm_utils::api_serialization::sign","holochain_wasm_utils::api_serialization::validation","holochain_wasm_utils::api_serialization::verify_signature","queryargsnames","memoryint","zomefncallargs","cryptoargs","emitsignalargs","getentryoptions","getlinksargs","getlinksoptions","keystorelistresult","keystorenewrandomargs","keystorederiveseedargs","keystorederivekeyargs","keystoresignargs","keystoregetpublickeyargs","queryresult","sendoptions","onetimesignargs","signonetimeresult","updateentryargs","verifysignatureargs","wasmstack","cryptomethod","linksstatusrequestkind","sendargs","signargs","linkdirection","entryhistory","try_from_ribosome_encoding","ZomeFnCallArgs","UpdateEntryArgs","ZomeApiGlobals","CommitCapabilityGrantArgs","CommitCapabilityClaimArgs","CommitEntryOptions","CommitEntryArgs","CommitEntryResult","CryptoArgs","CryptoMethod","EmitSignalArgs","GetEntryOptions","GetEntryArgs","EntryResultMeta","GetEntryResultItem","EntryHistory","GetEntryResult","StatusRequestKind","GetEntryResultType","GetLinksArgs","GetLinksOptions","LinksResult","LinksStatusRequestKind","GetLinksResult","KeystoreListResult","KeystoreNewRandomArgs","KeystoreDeriveSeedArgs","KeystoreDeriveKeyArgs","KeystoreSignArgs","KeystoreGetPublicKeyArgs","LinkEntriesArgs","QueryArgs","QueryArgsOptions","QueryArgsNames","QueryResult","ReceiveParams","SendOptions","OneTimeSignArgs","SignOneTimeResult","EntryValidationArgs","LinkValidationPackageArgs","LinkValidationArgs","LinkDirection","VerifySignatureArgs","AllocationError","WasmAllocation","WasmStack","MemoryInt","MemoryBits","hdk::EntryValidationData","hdk::LinkValidationData","NOT YET AVAILABLE","zomeapiresult","commitentryresult","getentryresult","getlinksresult","linkmatch","zomeapierror","getentrymask","appentryvalue","package_creator","Callback that returns a validation package definition that…","validator","This is the validation callback that is used to determine…","hdk::global_fns","hdk::entry_definition","hdk::error","hdk::meta","entryaction","validationdata","entrylifecycle","linkaction","linkvalidationdata","linkvalidationargs","linkvalidationpackageargs","entryvalidationargs","hdk::api","hashstring","intoiterator","initialize","BundleOnClose","GetEntryMask","ValidatingEntryType","ValidatingLinkDefinition","ZomeApiError","ZomeDefinition","DNA_ADDRESS","AGENT_ID_STR","AGENT_ADDRESS","AGENT_INITIAL_HASH","PUBLIC_TOKEN","CAPABILITY_REQ","PROPERTIES","ValidationFailed","remove_entry","source_chain_entries","source_chain_headers","This structs carries information contextual for the…","The validation package is data from the entry's/link's…","lifecycle","In which lifecycle of the entry creation are we running…","send the header for the entry, along with the entry","ChainEntries","sending all public source chain entries","ChainHeaders","sending all source chain headers","ChainFull","sending the whole chain: public entries and all headers","sending something custom","This struct carries information needed for Validating…","The create variant contains an entry T and the validation…","The Modify variant contains the new entry T, old entry of…","The delete contains an old entry which is the entry being…","This struct carries information needed for Validating Link…","The LinkAdd variant contains a linkData and a validation…","The LinkRemove variant contains a linkData and a…","only_header","The list of authors that have signed this entry.","persistenceerror","jsonerror","duration","commit_entry","emit_signal","get_entry","get_links","link_entries","verify_signature","THIS_INSTANCE","write_json","queryargsoptions","blob_type","pwhashconfig","holochain_dpki","KeyBundle","signingkeypair","encryptingkeypair","new_from_seed","Decode the public key from Base32 into a [u8]","new_with_raw_key","sign some arbitrary data with the signing private key…","verify data that was signed with our private signing key…","Standard Constructor","DevicePin","seedtype","typedseed","deviceseed","Construct from a 32 bytes seed buffer","devicepinseed","keybundle","seedcontext","holochain_dpki::key_blob","holochain_dpki::key_bundle","holochain_dpki::keypair","holochain_dpki::password_encryption","holochain_dpki::seed","holochain_dpki::utils","blob_size","from_blob","keyblob","blobtype","Generate an encrypted blob for persistence @param {SecBuf}…","Construct the pairs from an encrypted blob @param {object}…","hcidencoding","new_from_self","seed_mut","Blobbable","SigningKeyPair","EncryptingKeyPair","PwHashConfig","SeedInitializer","TypedSeed","SeedTrait","DeviceSeed","DevicePinSeed","SeedContext","CODEC_HCS0","CODEC_HCK0","loglevel","holochain_net","request_id","to_agent_id","requester_agent_id","query_result","provider_agent_id","The p2p module requests from Core the list of entries it…","entryaspectdata","holochain_net::connection","netresult","protocol","nethandler","networkerfactory","netshutdown","send/recv binary data / i.e. encryption, signature messages","send/recv a Ping message (ipc protocol spec)","send/recv a Pong message (ipc protocol spec)","holochain_net::in_memory","TransportError","GenericError","holochain_net::ipc::errors","holochain_net::ipc","spawnresult","transportresult","endpoint","holochain_net::tweetlog","holochain_net::connection::json_protocol","holochain_net::connection::net_connection","holochain_net::connection::net_connection_thread","holochain_net::connection::net_relay","holochain_net::connection::protocol","holochain_net::error","holochain_net::in_memory::memory_worker","holochain_net::ipc::spawn","holochain_net::ipc_net_worker","holochain_net::lib3h_worker","holochain_net::p2p_config","holochain_net::p2p_network","stop the net worker","close_all","transport_id_list","get a list of all open transport ids","jsonprotocol","namedbinarydata","lib3hclientprotocol","lib3hserverprotocol","transporterror","handshakeerror","clienthandshake","p2pbackendkind","genericresultdata","statedata","configdata","connectdata","messagedata","trackdnadata","entrydata","queryentrydata","queryentryresultdata","providedentrydata","storeentryaspectdata","fetchentrydata","fetchentryresultdata","getlistdata","entrylistdata","pingdata","pongdata","transportevent","backendconfig","p2pconfig","peerdata","backtrace","TweetProxy","GenericResultData","StateData","ConfigData","ConnectData","MessageData","TrackDnaData","EntryAspectData","EntryData","QueryEntryData","QueryEntryResultData","ProvidedEntryData","StoreEntryAspectData","FetchEntryData","FetchEntryResultData","GetListData","EntryListData","JsonProtocol","NetWorker","NetHandler","NetConnectionThread","NetConnectionRelay","NamedBinaryData","NetworkError","InMemoryWorker","TransportEvent","TransportWss","SpawnResult","Transport","IpcNetWorker","Lib3hWorker","P2pConfig","P2pBackendKind","BackendConfig","P2pNetwork","Do normal setup: 'TrackDna' & 'Connect', and check that we…","testnode","Sending a Message before doing a 'TrackDna' should fail","holochain_test_bin","send_test","Return Err if Entry is already known","Return Err if Aspect is already known","hashmap","holochain_test_bin::p2p_node","get_aspect","Get all values for a meta_key as a vec","agent_id","author_entry","hold_entry","Node sends Message on the network.","Constructor for an IPC node that uses an existing n3h…","See if there is a message to receive, and log it return a…","wait to receive a HandleFetchEntry request and…","Wait for receiving a message corresponding to predicate…","Getter of the endpoint of its connection","Return some data in publish_list request","holochain_test_bin::constants","holochain_test_bin::p2p_node::chain_store","holochain_test_bin::p2p_node::entry_store","holochain_test_bin::p2p_node::test_node","send a Protocol message to the p2p network instance","ChainStore","EntryStore","TWO_NODES_BASIC_TEST_FNS","TWO_NODES_LIST_TEST_FNS","THREE_NODES_TEST_FNS","MULTI_NODES_TEST_FNS","TWO_NODES_LIB3H_TEST_FNS","ALEX_AGENT_ID","BILLY_AGENT_ID","CAMILLE_AGENT_ID","DNA_ADDRESS_A","DNA_ADDRESS_B","DNA_ADDRESS_C","ENTRY_ADDRESS_1","ENTRY_ADDRESS_2","ENTRY_ADDRESS_3","ASPECT_CONTENT_1","ASPECT_CONTENT_2","ASPECT_CONTENT_3","ASPECT_ADDRESS_1","ASPECT_ADDRESS_2","ASPECT_ADDRESS_3","A unique ID that is used to pair the eventual result to…","RemoveLink","UpdateEntry","RemoveEntry","Updates the state to hold the response that we got for our…","Sends the given data as…","holochain_core","holochain_core::agent","contentaddressablestorage","chainstorequeryresult","chainstoreiterator","chainstoretypeiterator","GetLinks","LinkEntries","statewrapper","agentstate","chainstore","actionwrapper","actionresponse","chain_store","top_chain_header","AddPendingValidation","SignalZomeFunctionCall","RemovePendingValidation","ReturnZomeFunctionResult","consistencyevent","consistencysignal","p2p_config","persister","signalsender","entityattributevaluestorage","rwlockreadguard","action_channel","observer_channel","holochain_core::dht::actions","context","remove_link","update_entry","RemoveEntryFuture resolves to ActionResponse Tracks the…","holochain_core::dht","dhtstore","receiver","observer","ActionResponse","RespondGet","RespondFetch","RespondGetLinks","custom_send","holochain_core::network::actions","get_validation_package","initialize_network","holochain_core::network","entrywithheader","holochain_core::network::handler","GetEntry","networkstate","holochain_core::network::reducers","shutdown","actions","zome_name","parameters","add_pending_validation","holochain_core::nucleus::actions","build_validation_package","call_zome_function","zomefncall","remove_pending_validation","validatingworkflow","run_validation_callback","holochain_core::nucleus","nucleusstate","holochain_core::nucleus::reducers","InitGlobals","EntryAddress","SignOneTime","VerifySignature","KeystoreList","KeystoreNewRandom","KeystoreDeriveSeed","KeystoreDeriveKey","KeystoreSign","KeystoreGetPublicKey","CommitCapabilityGrant","CommitCapabilityClaim","Commit a capability grant to the source chain","EmitSignal","holochain_core::nucleus::ribosome::api","runtimeargs","runtime","init_globals","ZomeApiFunction::GetLinks function code args: [0] encoded…","sign_one_time","ZomeApiResult","holochain_core::nucleus::ribosome","MissingNo","Error index for unimplemented functions","callbackparams","callbackresult","holochain_core::nucleus::ribosome::callback","linkdefinitionpath","moduleref","Context of Holochain. Required for operating.","callbackfncall","zomecalldata","callbackcalldata","pending_validations","initialization","NotImplemented","processuniqueid","entry_with_header","conductor_api","agentstatesnapshot","get_headers","Get all headers for an entry by first looking in the DHT…","new_with_agent","new_with_agent_and_nucleus","holochain_core::workflows","get_entry_result","handle_custom_direct_message","customdirectmessage","respond_validation_package_request","holochain_core::action","holochain_core::agent::actions::commit","holochain_core::agent::chain_store","into_iter","par_bridge","iterbridge","holochain_core::agent::state","holochain_core::consistency","holochain_core::context","holochain_core::dht::actions::add_link","holochain_core::dht::actions::hold","try_poll","holochain_core::dht::actions::remove_entry","holochain_core::dht::actions::remove_link","holochain_core::dht::actions::update_entry","holochain_core::dht::dht_store","holochain_core::instance","holochain_core::logger","holochain_core::network::actions::custom_send","holochain_core::network::actions::get_entry","holochain_core::network::actions::get_links","holochain_core::network::actions::get_validation_package","holochain_core::network::actions::initialize_network","holochain_core::network::actions::publish","holochain_core::network::actions::shutdown","holochain_core::network::direct_message","holochain_core::network::entry_aspect","holochain_core::network::entry_with_header","holochain_core::network::query","holochain_core::network::state","holochain_core::nucleus::actions::build_validation_package","holochain_core::nucleus::actions::call_zome_function","holochain_core::nucleus::actions::initialize","holochain_core::nucleus::actions::run_validation_callback","holochain_core::nucleus::ribosome::callback::links_utils","holochain_core::nucleus::ribosome::memory","holochain_core::nucleus::ribosome::runtime","holochain_core::nucleus::state","holochain_core::nucleus::validation","holochain_core::persister","holochain_core::scheduled_jobs::pending_validations","holochain_core::signal","holochain_core::state","str_to_index","from_index","nucleusstatesnapshot","getlinkskey","getentrykey","directmessagedata","networksettings","directmessage","entryaspect","networkquery","networkqueryresult","executezomefnresponse","callback","nucleusstatus","pendingvalidationkey","validationerror","pendingvalidationstruct","usersignal","May panic if there is an underlying error in the table","chainstorequeryoptions","consistencygroup","dhtstoresnapshot","instance","testlogger","channellogger","wasmcalldata","calldata","simplepersister","GetLinksKey","GetEntryKey","DirectMessageData","NetworkSettings","ActionWrapper","ChainStoreQueryOptions","ChainStoreQueryResult","ChainStoreIterator","ChainStoreTypeIterator","AgentState","AgentStateSnapshot","ConsistencyEvent","ConsistencyGroup","ConsistencyModel","ConsistencySignal","DhtStoreSnapshot","CanPublish","TestLogger","ChannelLogger","CustomDirectMessage","DirectMessage","EntryAspect","EntryWithHeader","NetworkQuery","NetworkQueryResult","NetworkState","ZomeFnCall","CallbackFnCall","ExecuteZomeFnResponse","Initialization","ZomeApiFunction","CallbackParams","CallbackResult","LinkDefinitionPath","WasmPageManager","ZomeCallData","CallbackCallData","WasmCallData","NucleusState","NucleusStateSnapshot","NucleusStatus","PendingValidationKey","ValidationError","Persister","SimplePersister","PendingValidationStruct","ValidatingWorkflow","UserSignal","StateWrapper","CommitFuture","AddLinkFuture","HoldEntryFuture","RemoveEntryFuture","RemoveLinkFuture","UpdateEntryFuture","SimpleLogger","SendResponseFuture","GetEntryFuture","GetLinksFuture","GetValidationPackageFuture","InitNetworkFuture","PublishFuture","ShutdownFuture","ValidationPackageFuture","CallResultFuture","InitializationFuture","ValidationCallbackFuture","InitializationFailed","can_publish","type_hint","entry_aspect","receive","send_direct_message","public_token","arguments","Addresses","holochain_conductor_api::conductor","configuration","holochaininstanceerror","holochain","iohandler","passphrase_manager","holochain_conductor_api","instances","Optional URI for a websocket connection to an outsourced…","holochain_conductor_api::config","holochain_conductor_api::config::StorageConfiguration","holochain_conductor_api::config::InterfaceDriver","agentconfiguration","dnaconfiguration","instanceconfiguration","interfaceconfiguration","uibundleconfiguration","Sets all three storages, chain, DHT and EAV storage, to…","holochainresult","Interface","instancemap","holochain_conductor_api::interface_impls","keystore","passphrasemanager","adds a keybundle into the keystore based on a seed already…","logmessage","instance_id","uiinterfaceconfiguration","holochain_conductor_api::conductor::base","holochain_conductor_api::conductor::broadcaster","holochain_conductor_api::conductor::passphrase_manager","holochain_conductor_api::context_builder","holochain_conductor_api::error","holochain_conductor_api::holochain","holochain_conductor_api::interface","holochain_conductor_api::interface_impls::http","holochain_conductor_api::interface_impls::websocket","holochain_conductor_api::keystore","holochain_conductor_api::logger","holochain_conductor_api::signal_wrapper","holochain_conductor_api::static_file_server","install_dna_from_file","uninstall_dna","add_instance","remove_instance","add_interface","remove_interface","add_instance_to_interface","remove_instance_from_interface","add_agent","remove_agent","add_bridge","remove_bridge","request_passphrase","add_test_agent","install_ui_bundle_from_file","uninstall_ui_bundle","add_ui_interface","remove_ui_interface","start_ui_interface","stop_ui_interface","dpki_create_agent_key","dpki_init","dpki_is_initialized","storageconfiguration","interfacedriver","instancereferenceconfiguration","networkconfig","n3hconfig","dpkiconfiguration","signalconfig","publicinstanceidentifier","logrules","loggerconfiguration","ConductorAdmin","Conductor","Broadcaster","PassphraseServiceMock","PassphraseService","PassphraseManager","ConductorTestAdmin","ConductorUiAdmin","Configuration","LoggerConfiguration","AgentConfiguration","DnaConfiguration","InstanceConfiguration","InterfaceConfiguration","InstanceReferenceConfiguration","UiBundleConfiguration","UiInterfaceConfiguration","N3hConfig","DpkiConfiguration","SignalConfig","StorageConfiguration","InterfaceDriver","NetworkConfig","ContextBuilder","DpkiInstance","HolochainInstanceError","Holochain","DispatchRpc","ConductorApiBuilder","HttpInterface","WebsocketInterface","DebugLogger","SignalWrapper","StaticServer","CONDUCTOR","PassphraseServiceCmd","PublicInstanceIdentifier","LogMessage","consistency","noneerror","SigningKey","EncryptingKey","p2p_bindings","Encrypting"];
searchIndex["hc"]={"doc":E,"i":[],"p":[]};
searchIndex["hdk"]={"doc":"Holochain Development Kit (HDK)","i":[[3,R[291],"hdk",E,N,N],[12,R[72],E,E,0,N],[4,R[294],E,E,N,N],[13,"To",E,E,1,N],[13,"From",E,E,1,N],[3,R[292],E,E,N,N],[12,R[33],E,E,2,N],[12,R[47],E,E,2,N],[12,R[198],E,E,2,N],[3,R[293],E,E,N,N],[12,R[33],E,E,3,N],[12,"link",E,E,3,N],[12,R[198],E,E,3,N],[12,R[72],E,E,3,N],[17,R[379],E,E,N,N],[3,R[169],E,E,N,N],[12,R[69],E,E,4,N],[12,R[347],E,E,4,N],[12,R[348],E,E,4,N],[12,"custom",E,E,4,N],[4,R[171],E,E,N,N],[13,"Entry",E,R[353],5,N],[13,R[354],E,R[355],5,N],[13,R[356],E,R[357],5,N],[13,R[358],E,R[359],5,N],[13,"Custom",E,R[360],5,N],[4,R[172],E,R[361],N,N],[13,"Create",E,R[362],6,N],[12,"entry",R[301],E,6,N],[12,R[72],E,E,6,N],[13,"Modify","hdk",R[363],6,N],[12,R[184],R[301],E,6,N],[12,R[73],E,E,6,N],[12,R[74],E,E,6,N],[12,R[72],E,E,6,N],[13,"Delete","hdk",R[364],6,N],[12,R[73],R[301],E,6,N],[12,R[74],E,E,6,N],[12,R[72],E,E,6,N],[4,R[173],"hdk",R[365],N,N],[13,R[75],E,R[366],7,N],[12,"link",R[302],E,7,N],[12,R[72],E,E,7,N],[13,R[24],"hdk",R[367],7,N],[12,"link",R[302],E,7,N],[12,R[72],E,E,7,N],[3,R[170],"hdk",R[349],N,N],[12,"package",E,R[350],8,N],[12,R[351],E,R[352],8,N],[4,R[174],E,E,N,N],[13,"Chain",E,E,9,N],[13,"Dht",E,E,9,N],[13,"Meta",E,E,9,N],[4,R[175],E,E,N,N],[13,"Create",E,E,10,N],[13,"Modify",E,E,10,N],[13,"Delete",E,E,10,N],[4,R[176],E,E,N,N],[13,"Create",E,E,11,N],[13,"Delete",E,E,11,N],[0,"api",E,"developers! Detailed references and examples can be found…",N,N],[3,R[291],R[328],E,N,N],[12,R[72],E,E,0,N],[4,R[294],E,E,N,N],[13,"To",E,E,1,N],[13,"From",E,E,1,N],[3,R[292],E,E,N,N],[12,R[33],E,E,2,N],[12,R[47],E,E,2,N],[12,R[198],E,E,2,N],[3,R[293],E,E,N,N],[12,R[33],E,E,3,N],[12,"link",E,E,3,N],[12,R[198],E,E,3,N],[12,R[72],E,E,3,N],[3,"DNA_NAME",E,"The `name` property as taken from the DNA.",N,N],[3,R[338],E,"The address of the DNA the Zome is embedded within. This…",N,N],[3,R[339],E,"The identity string used when the chain was first…",N,N],[3,R[340],E,"The hash of your public key. This is your node address on…",N,N],[3,R[341],E,"The hash of the first identity entry on your chain (The…",N,N],[3,R[342],E,"The Address of the public token (if any)",N,N],[3,R[343],E,"The CapabilityRequest under which this wasm function is…",N,N],[3,R[344],E,"The json string from the DNA top level properties field.…",N,N],[3,R[333],E,E,N,N],[4,"Dispatch",E,E,N,N],[13,R[657],E,E,12,N],[13,"CommitEntry",E,E,12,N],[13,R[639],E,E,12,N],[13,R[658],E,E,12,N],[13,"Query",E,E,12,N],[13,R[587],E,E,12,N],[13,R[588],E,E,12,N],[13,"Send",E,E,12,N],[13,"Debug",E,E,12,N],[13,"Call",E,E,12,N],[13,"Crypto",E,E,12,N],[13,R[659],E,E,12,N],[13,R[660],E,E,12,N],[13,R[598],E,E,12,N],[13,R[586],E,E,12,N],[13,R[597],E,E,12,N],[13,"Sleep",E,E,12,N],[13,R[661],E,E,12,N],[13,R[662],E,E,12,N],[13,R[663],E,E,12,N],[13,R[664],E,E,12,N],[13,R[665],E,E,12,N],[13,R[666],E,E,12,N],[13,R[667],E,E,12,N],[13,R[668],E,E,12,N],[13,R[670],E,E,12,N],[4,R[332],E,"Allowed input for close_bundle()",N,N],[13,"Commit",E,E,13,N],[13,"Discard",E,E,13,N],[5,"close_bundle",E,R[303],N,[[["bundleonclose"]],[R[304]]]],[5,"start_bundle",E,R[303],N,[[["value"],["usize"]],[R[304]]]],[5,"call",E,"Call an exposed function from another zome or another…",N,[[[R[12]],[R[26]],["into",[R[0]]],[R[0]]],[[R[304],[R[26]]],[R[26]]]]],[5,"commit_capability_claim",E,"Adds a capability claim to the local chain",N,[[[R[12]],["into",[R[0]]],[R[0]]],[[R[12]],[R[304],[R[12]]]]]],[5,"commit_capability_grant",E,"Adds a capability grant to the local chain",N,[[["vec",[R[12]]],[R[30]],[R[13],["vec"]],["into",[R[0]]],[R[31]],[R[0]]],[[R[12]],[R[304],[R[12]]]]]],[5,R[373],E,"Attempts to commit an entry to the local source chain. The…",N,[[["entry"]],[[R[12]],[R[304],[R[12]]]]]],[5,"commit_entry_result",E,"Attempts to commit an entry to your local source chain.…",N,[[["entry"],[R[189]]],[[R[304],[R[305]]],[R[305]]]]],[5,"debug",E,"Prints a string through the stdout of the running…",N,[[["into",[R[0]]],[R[0]]],[R[304]]]],[5,"decrypt",E,"decrypts a string payload using the agent's private key.…",N,[[["into",[R[0]]],[R[0]]],[[R[304],[R[0]]],[R[0]]]]],[5,R[374],E,"Emits a signal that listeners can receive. (Status: MVP)",N,[[[R[26]],["into",[R[0]]],["into",[R[26]]],[R[0]]],[R[304]]]],[5,"encrypt",E,"encrypts a string payload using the agent's private key.…",N,[[["into",[R[0]]],[R[0]]],[[R[304],[R[0]]],[R[0]]]]],[5,R[192],E,"Reconstructs an address of the given entry data. This is…",N,[[["entry"]],[[R[12]],[R[304],[R[12]]]]]],[5,"entry_type_properties",E,E,N,[[[R[11]]],[[R[304],[R[26]]],[R[26]]]]],[5,R[375],E,"Retrieves latest version of an entry from the local chain…",N,[[[R[12]]],[[R[13],["entry"]],[R[304],[R[13]]]]]],[5,"get_entry_history",E,"Return an EntryHistory filled with all the versions of the…",N,[[[R[12]]],[[R[304],[R[13]]],[R[13],[R[250]]]]]],[5,"get_entry_initial",E,"Returns the Entry at the exact address specified, whatever…",N,[[[R[12]]],[[R[13],["entry"]],[R[304],[R[13]]]]]],[5,R[702],E,"Retrieves an entry and its metadata from the local chain…",N,[[[R[229]],[R[12]]],[[R[306]],[R[304],[R[306]]]]]],[5,R[376],E,"Helper function for get_links. Returns a vector with the…",N,[[[R[12]],[R[308],["str"]],["str"]],[[R[307]],[R[304],[R[307]]]]]],[5,"get_links_and_load",E,"Helper function for get_links. Returns a vector of the…",N,[[[R[329]],[R[308],["str"]],["str"]],[[R[304],["vec"]],["vec",[R[304]]]]]],[5,"get_links_result",E,"Retrieves data about entries linked to a base address with…",N,[[[R[12]],[R[308],["str"]],[R[231]],["str"],[R[229]]],[["vec",[R[304]]],[R[304],["vec"]]]]],[5,"get_links_with_options",E,"Consumes four values; the address of an entry get get…",N,[[[R[12]],[R[308],["str"]],[R[231]],["str"]],[[R[307]],[R[304],[R[307]]]]]],[5,"keystore_derive_key",E,"Creates a new derived key secret in the keystore derived…",N,[[["into",[R[0]]],["keytype"],[R[0]]],[[R[304],[R[0]]],[R[0]]]]],[5,"keystore_derive_seed",E,"Creates a new derived seed secret in the keystore, derived…",N,[[["into",[R[0]]],["u64"],[R[0]]],[R[304]]]],[5,"keystore_get_public_key",E,"Returns the public key of a key secret Accepts one…",N,[[["into",[R[0]]],[R[0]]],[[R[304],[R[0]]],[R[0]]]]],[5,"keystore_list",E,E,N,[[],[[R[232]],[R[304],[R[232]]]]]],[5,"keystore_new_random",E,"Creates a new random \"root\" Seed secret in the keystore",N,[[["into",[R[0]]],["usize"],[R[0]]],[R[304]]]],[5,"keystore_sign",E,"Signs a payload using a private key from the keystore.…",N,[[["into",[R[0]]],[R[0]]],[[R[304],[R[0]]],[R[0]]]]],[5,R[377],E,"Adds a named, tagged, directed link between two entries on…",N,[[[R[12]],["into",[R[0]]],[R[0]]],[[R[6],[R[12],R[309]]],[R[12]],[R[309]]]]],[5,"property",E,E,N,[[["into",[R[0]]],[R[0]]],[[R[304],[R[26]]],[R[26]]]]],[5,"query",E,"Returns a list of entries from your local source chain…",N,[[[R[224]],["usize"]],[["vec",[R[12]]],[R[304],["vec"]]]]],[5,R[434],E,E,N,[[[R[381]],[R[224]]],[[R[304],[R[238]]],[R[238]]]]],[5,R[621],E,"Commits a LinkRemove entry to your local source chain that…",N,[[[R[12]],["into",[R[0]]],[R[0]]],[[R[6],[R[309]]],[R[309]]]]],[5,"send",E,"Sends a node-to-node message to the given agent, specified…",N,[[[R[12]],[R[190]],[R[0]]],[[R[304],[R[0]]],[R[0]]]]],[5,"sign",E,"Signs a string payload using the agent's private key.…",N,[[["into",[R[0]]],[R[0]]],[[R[304],[R[0]]],[R[0]]]]],[5,R[676],E,"Signs a vector of payloads with a private key that is…",N,[[["into",[R[0]]],["vec"],[R[0]]],[[R[304],[R[241]]],[R[241]]]]],[5,R[378],E,"Verifies a provenance (public key, signature) against a…",N,[[["into",[R[0]]],[R[10]],[R[0]]],[[R[304],["bool"]],["bool"]]]],[5,"sleep",E,"Lets the DNA runtime sleep for the given duration. #…",N,[[[R[372]]],[R[304]]]],[5,R[346],E,"Commit a DeletionEntry to your local source chain that…",N,[[[R[12]]],[[R[12]],[R[304],[R[12]]]]]],[5,"update_agent",E,R[303],N,[[],[[R[12]],[R[304],[R[12]]]]]],[5,R[622],E,"Commit an entry to your local source chain that \"updates\"…",N,[[[R[12]],["entry"]],[[R[12]],[R[304],[R[12]]]]]],[7,"G_MEM_STACK",E,"Internal global for memory usage",N,N],[11,"without_input",E,E,12,[[["self"]],[["tryfrom",[R[26]]],[R[26]],[R[304]],["into",[R[26]]]]]],[11,"with_input",E,E,12,[[["self"],[R[26]],["tryinto",[R[26]]]],[[R[304]],["tryfrom",[R[26]]],[R[26]]]]],[18,"ENTRY",E,E,14,N],[18,"ENTRY_TYPE",E,E,14,N],[18,"SOURCES",E,E,14,N],[11,"empty",E,"Returns an empty set of flags.",14,[[],[R[310]]]],[11,"all",E,"Returns the set containing all flags.",14,[[],[R[310]]]],[11,"bits",E,"Returns the raw value of the flags currently stored.",14,[[["self"]],["u8"]]],[11,"from_bits",E,"Convert from underlying bit representation, unless that…",14,[[["u8"]],[[R[310]],[R[13],[R[310]]]]]],[11,"from_bits_truncate",E,"Convert from underlying bit representation, dropping any…",14,[[["u8"]],[R[310]]]],[11,"is_empty",E,"Returns `true` if no flags are currently stored.",14,[[["self"]],["bool"]]],[11,"is_all",E,"Returns `true` if all flags are currently set.",14,[[["self"]],["bool"]]],[11,"intersects",E,"Returns `true` if there are flags common to both `self`…",14,[[["self"],[R[310]]],["bool"]]],[11,"contains",E,"Returns `true` all of the flags in `other` are contained…",14,[[["self"],[R[310]]],["bool"]]],[11,"insert",E,"Inserts the specified flags in-place.",14,[[["self"],[R[310]]]]],[11,"remove",E,"Removes the specified flags in-place.",14,[[["self"],[R[310]]]]],[11,"toggle",E,"Toggles the specified flags in-place.",14,[[["self"],[R[310]]]]],[11,"set",E,"Inserts or removes the specified flags depending on the…",14,[[["self"],["bool"],[R[310]]]]],[0,"utils","hdk",E,N,N],[5,"get_links_and_load_type","hdk::utils","Helper function that perfoms a try_from for every entry of…",N,[[[R[12]],[R[308],["str"]],["str"]],[[R[304],["vec"]],["vec"]]]],[5,"get_as_type",E,"Helper function for loading an entry and converting to a…",N,[[[R[12]]],[[R[304]],[R[311]],["tryfrom",[R[311]]]]]],[5,"link_entries_bidir",E,"Creates two links: From A to B, and from B to A, with…",N,[[[R[12]],["into",[R[0]]],[R[0]]],[R[304]]]],[5,"commit_and_link",E,"Commits the given entry and links it from the base with…",N,[[[R[12]],["into",[R[0]]],["entry"],[R[0]]],[[R[12]],[R[304],[R[12]]]]]],[0,"entry_definition","hdk","This file contains the macros used for creating validating…",N,N],[3,R[334],R[317],"This struct represents a complete entry type definition.…",N,N],[12,"name",E,"Name of the entry type",15,N],[12,"entry_type_definition",E,"All the static aspects of the entry type as",15,N],[12,R[312],E,R[313],15,N],[12,R[314],E,R[315],15,N],[12,"links",E,E,15,N],[3,R[335],E,"Similar to ValidatingEntryType, this provides the dynamic…",N,N],[12,R[198],E,"Is this link defined as pointing from this entry type to…",16,N],[12,"other_entry_type",E,"The other entry type the link connects this entry type to",16,N],[12,R[47],E,"Tag (i.e. name) of this type of links",16,N],[12,R[312],E,R[313],16,N],[12,R[314],E,R[315],16,N],[5,"entry_to_native_type",E,E,N,[[[R[137],["entry"]],["entry"]],[[R[137]],[R[304],[R[137]]]]]],[6,"PackageCreator",E,E,N,N],[6,"Validator",E,E,N,N],[6,"LinkValidator",E,E,N,N],[0,"error","hdk","This file contains defitions for Zome errors and also Zome…",N,N],[4,R[336],R[318],"Error for DNA developers to use in their Zome code. This…",N,N],[13,"Internal",E,E,17,N],[13,"FunctionNotImplemented",E,E,17,N],[13,"HashNotFound",E,E,17,N],[13,R[345],E,E,17,N],[13,"Timeout",E,E,17,N],[6,R[677],E,E,N,N],[0,"global_fns","hdk","This file contains small helper functions relating to WASM…",N,N],[3,R[291],R[316],E,N,N],[12,R[72],E,E,0,N],[4,R[294],E,E,N,N],[13,"To",E,E,1,N],[13,"From",E,E,1,N],[3,R[292],E,E,N,N],[12,R[33],E,E,2,N],[12,R[47],E,E,2,N],[12,R[198],E,E,2,N],[3,R[293],E,E,N,N],[12,R[33],E,E,3,N],[12,"link",E,E,3,N],[12,R[198],E,E,3,N],[12,R[72],E,E,3,N],[5,"init_global_memory",E,"Init global memory stack",N,[[[R[207]]],[R[203]]]],[5,"init_global_memory_from_ribosome_encoding",E,"sugar",N,[[[R[110]]],[R[203]]]],[5,R[380],E,"Serialize output as json in WASM memory",N,[[[R[26]],["tryinto",[R[26]]]],[R[203]]]],[0,R[674],"hdk","Holds the internal/private zome API function…",N,N],[5,"hc_init_globals","hdk::init_globals",E,N,N],[0,"macros","hdk","This file contains the define_zome! macro, and smaller…",N,N],[0,"meta",E,"This file contains the \"secret\" functions that get added…",N,N],[3,R[337],R[319],E,N,N],[12,R[54],E,E,18,N],[5,"__hdk_get_validation_package_for_entry_type",E,E,N,[[[R[110]]],[R[110]]]],[5,"__hdk_validate_app_entry",E,E,N,[[[R[110]]],[R[110]]]],[5,"__hdk_get_validation_package_for_link",E,E,N,[[[R[110]]],[R[110]]]],[5,"__hdk_validate_link",E,E,N,[[[R[110]]],[R[110]]]],[5,"__hdk_git_hash",E,E,N,[[[R[110]]],[R[110]]]],[5,"__hdk_get_json_definition",E,E,N,[[[R[110]]],[R[110]]]],[11,"new",E,E,18,[[],["zomedefinition"]]],[11,"define",E,E,18,[[["self"],["validatingentrytype"]]]],[14,"entry","hdk","The `entry` macro is a helper for creating…",N,N],[14,"link",E,"The `link` macro is a helper for creating…",N,N],[14,"to",E,"The `to` macro is a helper for creating…",N,N],[14,"from",E,"The `from` macro is a helper for creating…",N,N],[14,"define_zome",E,"Every Zome must utilize the `define_zome` macro in the…",N,N],[11,"from",R[316],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[82],E,E,0,[[["self"]],[T]]],[11,R[83],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[[U]],[R[6]]]],[11,R[79],E,E,0,[[],[R[6]]]],[11,R[89],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"]],[R[90]]]],[11,R[85],E,E,0,[[["self"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[82],E,E,1,[[["self"]],[T]]],[11,R[83],E,E,1,[[["self"],[T]]]],[11,R[78],E,E,1,[[[U]],[R[6]]]],[11,R[79],E,E,1,[[],[R[6]]]],[11,R[89],E,E,1,[[["self"]],[T]]],[11,R[80],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"]],[R[90]]]],[11,R[85],E,E,1,[[["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[82],E,E,2,[[["self"]],[T]]],[11,R[83],E,E,2,[[["self"],[T]]]],[11,R[78],E,E,2,[[[U]],[R[6]]]],[11,R[79],E,E,2,[[],[R[6]]]],[11,R[89],E,E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"]],[R[90]]]],[11,R[85],E,E,2,[[["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[82],E,E,3,[[["self"]],[T]]],[11,R[83],E,E,3,[[["self"],[T]]]],[11,R[78],E,E,3,[[[U]],[R[6]]]],[11,R[79],E,E,3,[[],[R[6]]]],[11,R[89],E,E,3,[[["self"]],[T]]],[11,R[80],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"]],[R[90]]]],[11,R[85],E,E,3,[[["self"]]]],[11,"from","hdk",E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[82],E,E,4,[[["self"]],[T]]],[11,R[83],E,E,4,[[["self"],[T]]]],[11,R[78],E,E,4,[[[U]],[R[6]]]],[11,R[79],E,E,4,[[],[R[6]]]],[11,R[89],E,E,4,[[["self"]],[T]]],[11,R[80],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"]],[R[90]]]],[11,R[85],E,E,4,[[["self"]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[82],E,E,5,[[["self"]],[T]]],[11,R[83],E,E,5,[[["self"],[T]]]],[11,R[78],E,E,5,[[[U]],[R[6]]]],[11,R[79],E,E,5,[[],[R[6]]]],[11,R[89],E,E,5,[[["self"]],[T]]],[11,R[80],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"]],[R[90]]]],[11,R[85],E,E,5,[[["self"]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[82],E,E,6,[[["self"]],[T]]],[11,R[83],E,E,6,[[["self"],[T]]]],[11,R[78],E,E,6,[[[U]],[R[6]]]],[11,R[79],E,E,6,[[],[R[6]]]],[11,R[89],E,E,6,[[["self"]],[T]]],[11,R[80],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"]],[R[90]]]],[11,R[85],E,E,6,[[["self"]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[82],E,E,7,[[["self"]],[T]]],[11,R[83],E,E,7,[[["self"],[T]]]],[11,R[78],E,E,7,[[[U]],[R[6]]]],[11,R[79],E,E,7,[[],[R[6]]]],[11,R[89],E,E,7,[[["self"]],[T]]],[11,R[80],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"]],[R[90]]]],[11,R[85],E,E,7,[[["self"]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[82],E,E,8,[[["self"]],[T]]],[11,R[83],E,E,8,[[["self"],[T]]]],[11,R[78],E,E,8,[[[U]],[R[6]]]],[11,R[79],E,E,8,[[],[R[6]]]],[11,R[89],E,E,8,[[["self"]],[T]]],[11,R[80],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"]],[R[90]]]],[11,R[85],E,E,8,[[["self"]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[82],E,E,9,[[["self"]],[T]]],[11,R[83],E,E,9,[[["self"],[T]]]],[11,R[78],E,E,9,[[[U]],[R[6]]]],[11,R[79],E,E,9,[[],[R[6]]]],[11,R[89],E,E,9,[[["self"]],[T]]],[11,R[80],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"]],[R[90]]]],[11,R[85],E,E,9,[[["self"]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[82],E,E,10,[[["self"]],[T]]],[11,R[83],E,E,10,[[["self"],[T]]]],[11,R[78],E,E,10,[[[U]],[R[6]]]],[11,R[79],E,E,10,[[],[R[6]]]],[11,R[89],E,E,10,[[["self"]],[T]]],[11,R[80],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"]],[R[90]]]],[11,R[85],E,E,10,[[["self"]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[82],E,E,11,[[["self"]],[T]]],[11,R[83],E,E,11,[[["self"],[T]]]],[11,R[78],E,E,11,[[[U]],[R[6]]]],[11,R[79],E,E,11,[[],[R[6]]]],[11,R[89],E,E,11,[[["self"]],[T]]],[11,R[80],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"]],[R[90]]]],[11,R[85],E,E,11,[[["self"]]]],[11,"from",R[328],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[78],E,E,19,[[[U]],[R[6]]]],[11,R[79],E,E,19,[[],[R[6]]]],[11,R[89],E,E,19,[[["self"]],[T]]],[11,R[80],E,E,19,[[["self"]],[T]]],[11,R[84],E,E,19,[[["self"]],[R[90]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[78],E,E,20,[[[U]],[R[6]]]],[11,R[79],E,E,20,[[],[R[6]]]],[11,R[89],E,E,20,[[["self"]],[T]]],[11,R[80],E,E,20,[[["self"]],[T]]],[11,R[84],E,E,20,[[["self"]],[R[90]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[78],E,E,21,[[[U]],[R[6]]]],[11,R[79],E,E,21,[[],[R[6]]]],[11,R[89],E,E,21,[[["self"]],[T]]],[11,R[80],E,E,21,[[["self"]],[T]]],[11,R[84],E,E,21,[[["self"]],[R[90]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[78],E,E,22,[[[U]],[R[6]]]],[11,R[79],E,E,22,[[],[R[6]]]],[11,R[89],E,E,22,[[["self"]],[T]]],[11,R[80],E,E,22,[[["self"]],[T]]],[11,R[84],E,E,22,[[["self"]],[R[90]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[78],E,E,23,[[[U]],[R[6]]]],[11,R[79],E,E,23,[[],[R[6]]]],[11,R[89],E,E,23,[[["self"]],[T]]],[11,R[80],E,E,23,[[["self"]],[T]]],[11,R[84],E,E,23,[[["self"]],[R[90]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[78],E,E,24,[[[U]],[R[6]]]],[11,R[79],E,E,24,[[],[R[6]]]],[11,R[89],E,E,24,[[["self"]],[T]]],[11,R[80],E,E,24,[[["self"]],[T]]],[11,R[84],E,E,24,[[["self"]],[R[90]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[78],E,E,25,[[[U]],[R[6]]]],[11,R[79],E,E,25,[[],[R[6]]]],[11,R[89],E,E,25,[[["self"]],[T]]],[11,R[80],E,E,25,[[["self"]],[T]]],[11,R[84],E,E,25,[[["self"]],[R[90]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[78],E,E,26,[[[U]],[R[6]]]],[11,R[79],E,E,26,[[],[R[6]]]],[11,R[89],E,E,26,[[["self"]],[T]]],[11,R[80],E,E,26,[[["self"]],[T]]],[11,R[84],E,E,26,[[["self"]],[R[90]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[82],E,E,14,[[["self"]],[T]]],[11,R[83],E,E,14,[[["self"],[T]]]],[11,R[78],E,E,14,[[[U]],[R[6]]]],[11,R[79],E,E,14,[[],[R[6]]]],[11,R[89],E,E,14,[[["self"]],[T]]],[11,R[80],E,E,14,[[["self"]],[T]]],[11,R[84],E,E,14,[[["self"]],[R[90]]]],[11,R[87],E,E,14,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,14,[[["self"]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[78],E,E,12,[[[U]],[R[6]]]],[11,R[79],E,E,12,[[],[R[6]]]],[11,R[89],E,E,12,[[["self"]],[T]]],[11,R[80],E,E,12,[[["self"]],[T]]],[11,R[84],E,E,12,[[["self"]],[R[90]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[78],E,E,13,[[[U]],[R[6]]]],[11,R[79],E,E,13,[[],[R[6]]]],[11,R[89],E,E,13,[[["self"]],[T]]],[11,R[80],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"]],[R[90]]]],[11,"from",R[317],E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[78],E,E,15,[[[U]],[R[6]]]],[11,R[79],E,E,15,[[],[R[6]]]],[11,R[89],E,E,15,[[["self"]],[T]]],[11,R[80],E,E,15,[[["self"]],[T]]],[11,R[84],E,E,15,[[["self"]],[R[90]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[78],E,E,16,[[[U]],[R[6]]]],[11,R[79],E,E,16,[[],[R[6]]]],[11,R[89],E,E,16,[[["self"]],[T]]],[11,R[80],E,E,16,[[["self"]],[T]]],[11,R[84],E,E,16,[[["self"]],[R[90]]]],[11,"from",R[318],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[94],E,E,17,[[["self"]],[R[0]]]],[11,R[82],E,E,17,[[["self"]],[T]]],[11,R[83],E,E,17,[[["self"],[T]]]],[11,R[78],E,E,17,[[[U]],[R[6]]]],[11,R[79],E,E,17,[[],[R[6]]]],[11,R[89],E,E,17,[[["self"]],[T]]],[11,R[80],E,E,17,[[["self"]],[T]]],[11,R[84],E,E,17,[[["self"]],[R[90]]]],[11,R[85],E,E,17,[[["self"]]]],[11,"from",R[319],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[78],E,E,18,[[[U]],[R[6]]]],[11,R[79],E,E,18,[[],[R[6]]]],[11,R[89],E,E,18,[[["self"]],[T]]],[11,R[80],E,E,18,[[["self"]],[T]]],[11,R[84],E,E,18,[[["self"]],[R[90]]]],[11,R[138],"hdk",E,4,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,10,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,5,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,7,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,8,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,6,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,11,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,9,[[["self"],["__s"]],[R[6]]]],[11,R[131],E,E,8,[[],[R[321]]]],[11,R[131],E,E,9,[[],[R[322]]]],[11,R[131],E,E,10,[[],[R[320]]]],[11,R[78],E,E,4,[[[R[26]]],[[R[125]],[R[6],[R[125]]]]]],[11,R[78],E,E,5,[[[R[26]]],[[R[6],[R[126]]],[R[126]]]]],[11,R[78],E,E,4,[[[R[26]]],[[R[6],[R[125]]],[R[125]]]]],[11,R[78],E,E,5,[[[R[26]]],[[R[126]],[R[6],[R[126]]]]]],[11,"clone",E,E,10,[[["self"]],[R[320]]]],[11,"clone",E,E,5,[[["self"]],[R[126]]]],[11,"clone",E,E,4,[[["self"]],[R[125]]]],[11,"clone",E,E,11,[[["self"]],[R[323]]]],[11,"clone",E,E,7,[[["self"]],[R[324]]]],[11,"clone",E,E,6,[[["self"]],[R[137]]]],[11,"clone",E,E,8,[[["self"]],[R[321]]]],[11,"clone",E,E,9,[[["self"]],[R[322]]]],[11,"fmt",E,E,6,[[["self"],[R[135]]],[[R[6],["error"]],["error"]]]],[11,"fmt",E,E,7,[[["self"],[R[135]]],[[R[6],["error"]],["error"]]]],[11,"fmt",E,E,10,[[["self"],[R[135]]],[[R[6],["error"]],["error"]]]],[11,"fmt",E,E,11,[[["self"],[R[135]]],[[R[6],["error"]],["error"]]]],[11,"fmt",E,E,8,[[["self"],[R[135]]],[[R[6],["error"]],["error"]]]],[11,"fmt",E,E,4,[[["self"],[R[135]]],[[R[6],["error"]],["error"]]]],[11,"fmt",E,E,5,[[["self"],[R[135]]],[[R[6],["error"]],["error"]]]],[11,"fmt",E,E,9,[[["self"],[R[135]]],[[R[6],["error"]],["error"]]]],[11,"eq",E,E,5,[[["self"],[R[126]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[126]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[125]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[125]]],["bool"]]],[11,R[139],E,E,11,[[["__d"]],[[R[6],[R[323]]],[R[323]]]]],[11,R[139],E,E,4,[[["__d"]],[[R[125]],[R[6],[R[125]]]]]],[11,R[139],E,E,7,[[["__d"]],[[R[6],[R[324]]],[R[324]]]]],[11,R[139],E,E,6,[[["__d"]],[[R[137]],[R[6],[R[137]]]]]],[11,R[139],E,E,8,[[["__d"]],[[R[6],[R[321]]],[R[321]]]]],[11,R[139],E,E,9,[[["__d"]],[[R[6],[R[322]]],[R[322]]]]],[11,R[139],E,E,10,[[["__d"]],[[R[320]],[R[6],[R[320]]]]]],[11,R[139],E,E,5,[[["__d"]],[[R[6],[R[126]]],[R[126]]]]],[11,"fmt",R[316],E,2,[[["self"],[R[135]]],[[R[6],["error"]],["error"]]]],[11,"fmt",E,E,1,[[["self"],[R[135]]],[[R[6],["error"]],["error"]]]],[11,"fmt",E,E,0,[[["self"],[R[135]]],[[R[6],["error"]],["error"]]]],[11,"fmt",E,E,3,[[["self"],[R[135]]],[[R[6],["error"]],["error"]]]],[11,"eq",E,E,1,[[["self"],[R[249]]],["bool"]]],[11,R[138],E,E,3,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,2,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,1,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,0,[[["self"],["__s"]],[R[6]]]],[11,R[139],E,E,3,[[["__d"]],[[R[6],[R[325]]],[R[325]]]]],[11,R[139],E,E,1,[[["__d"]],[[R[249]],[R[6],[R[249]]]]]],[11,R[139],E,E,2,[[["__d"]],[[R[6],[R[326]]],[R[326]]]]],[11,R[139],E,E,0,[[["__d"]],[[R[327]],[R[6],[R[327]]]]]],[11,R[78],E,E,1,[[[R[26]]],[[R[249]],[R[6],[R[249]]]]]],[11,R[78],E,E,2,[[[R[26]]],[[R[6],[R[326]]],[R[326]]]]],[11,R[78],E,E,3,[[[R[26]]],[[R[325]],[R[6],[R[325]]]]]],[11,R[78],E,E,3,[[[R[26]]],[[R[6],[R[325]]],[R[325]]]]],[11,R[78],E,E,0,[[[R[26]]],[[R[6],[R[327]]],[R[327]]]]],[11,R[78],E,E,1,[[[R[26]]],[[R[249]],[R[6],[R[249]]]]]],[11,R[78],E,E,2,[[[R[26]]],[[R[326]],[R[6],[R[326]]]]]],[11,R[78],E,E,0,[[[R[26]]],[[R[6],[R[327]]],[R[327]]]]],[11,"clone",E,E,2,[[["self"]],[R[326]]]],[11,"clone",E,E,1,[[["self"]],[R[249]]]],[11,"clone",E,E,3,[[["self"]],[R[325]]]],[11,"clone",E,E,0,[[["self"]],[R[327]]]],[11,"from",R[318],E,17,[[[R[21]]],["self"]]],[11,"from",E,E,17,[[[R[370]]],["self"]]],[11,"from",E,E,17,[[[R[371]]],["self"]]],[11,"from",E,E,17,[[],["self"]]],[11,"from",E,E,17,[[[R[0]]],[R[309]]]],[11,"from",E,E,17,[[[R[112]]],[R[309]]]],[11,"from",E,E,17,[[[R[206]]],[R[309]]]],[11,"eq",R[328],E,14,[[["self"],[R[310]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[310]]],["bool"]]],[11,"eq",R[318],E,17,[[["self"],[R[309]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[309]]],["bool"]]],[11,"clone",R[328],E,14,[[["self"]],[R[310]]]],[11,"clone",R[318],E,17,[[["self"]],[R[309]]]],[11,R[131],R[328],E,14,[[],[R[310]]]],[11,R[133],E,E,14,[[["self"],[R[310]]],[[R[134]],[R[13],[R[134]]]]]],[11,"lt",E,E,14,[[["self"],[R[310]]],["bool"]]],[11,"le",E,E,14,[[["self"],[R[310]]],["bool"]]],[11,"gt",E,E,14,[[["self"],[R[310]]],["bool"]]],[11,"ge",E,E,14,[[["self"],[R[310]]],["bool"]]],[11,"extend",E,E,14,[[["self"],[R[330]]]]],[11,"cmp",E,E,14,[[["self"],[R[310]]],[R[134]]]],[11,"deref",E,E,19,[[["self"]],["str"]]],[11,"deref",E,E,20,[[["self"]],[R[12]]]],[11,"deref",E,E,21,[[["self"]],["str"]]],[11,"deref",E,E,22,[[["self"]],[R[12]]]],[11,"deref",E,E,23,[[["self"]],[R[329]]]],[11,"deref",E,E,24,[[["self"]],[R[12]]]],[11,"deref",E,E,25,[[["self"]],[R[13]]]],[11,"deref",E,E,26,[[["self"]],[R[26]]]],[11,"fmt",R[318],E,17,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[328],E,14,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[318],E,17,[[["self"],[R[135]]],[R[6]]]],[11,"sub",R[328],"Returns the set difference of the two sets of flags.",14,[[[R[310]]],[R[310]]]],[11,R[78],R[318],E,17,[[[R[26]]],[R[6]]]],[11,R[78],E,E,17,[[[R[26]]],[R[6]]]],[11,"sub_assign",R[328],"Disables all flags enabled in the set.",14,[[["self"],[R[310]]]]],[11,"not",E,"Returns the complement of this set of flags.",14,[[],[R[310]]]],[11,"bitand",E,"Returns the intersection between the two sets of flags.",14,[[[R[310]]],[R[310]]]],[11,"bitor",E,"Returns the union of the two sets of flags.",14,[[[R[310]]],[R[310]]]],[11,"bitxor",E,"Returns the left flags, but with all the right flags…",14,[[[R[310]]],[R[310]]]],[11,"bitand_assign",E,"Disables all flags disabled in the set.",14,[[["self"],[R[310]]]]],[11,"bitor_assign",E,"Adds the set of flags.",14,[[["self"],[R[310]]]]],[11,"bitxor_assign",E,"Toggles the set of flags.",14,[[["self"],[R[310]]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"from_iter",E,E,14,[[[R[330]]],[R[310]]]],[11,"fmt",E,E,14,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,14,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,14,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,14,[[["self"],[R[135]]],[R[6]]]],[11,R[138],R[318],E,17,[[["self"],["__s"]],[R[6]]]],[11,R[139],E,E,17,[[["__d"]],[R[6]]]],[11,R[331],R[328],E,19,[[["self"]]]],[11,R[331],E,E,20,[[["self"]]]],[11,R[331],E,E,21,[[["self"]]]],[11,R[331],E,E,22,[[["self"]]]],[11,R[331],E,E,23,[[["self"]]]],[11,R[331],E,E,24,[[["self"]]]],[11,R[331],E,E,25,[[["self"]]]],[11,R[331],E,E,26,[[["self"]]]],[11,R[368],"hdk",E,4,[[[R[9]]],[R[125]]]],[11,"sources",E,R[369],8,[[["self"]],[["vec",[R[329]]],[R[329]]]]]],"p":[[3,R[291]],[4,R[294]],[3,R[292]],[3,R[293]],[3,R[169]],[4,R[171]],[4,R[172]],[4,R[173]],[3,R[170]],[4,R[174]],[4,R[175]],[4,R[176]],[4,"Dispatch"],[4,R[332]],[3,R[333]],[3,R[334]],[3,R[335]],[4,R[336]],[3,R[337]],[3,"DNA_NAME"],[3,R[338]],[3,R[339]],[3,R[340]],[3,R[341]],[3,R[342]],[3,R[343]],[3,R[344]]]};
searchIndex["hdk_proc_macros"]={"doc":E,"i":[[23,"zome","hdk_proc_macros","@brief Defines the #[zome] macro to be used on a Rust…",N,N]],"p":[]};
searchIndex["holochain"]={"doc":E,"i":[],"p":[]};
searchIndex["holochain_common"]={"doc":E,"i":[[0,"env_vars",R[2],"Holochain uses a number of environment variables that can…",N,N],[4,R[7],R[5],E,N,N],[13,"Agent",E,E,0,N],[13,R[872],E,E,0,N],[13,"N3hMode",E,E,0,N],[13,"N3hWorkDir",E,E,0,N],[13,"N3hBootstrapNode",E,E,0,N],[13,"N3hLogLevel",E,E,0,N],[13,"NetworkingConfigFile",E,E,0,N],[13,"SimpleLoggerMute",E,E,0,N],[13,"ScaffoldVersion",E,E,0,N],[11,"as_str",E,E,0,[[["self"]],["str"]]],[11,"value",E,E,0,[[["self"]],[[R[0]],[R[1]],[R[6],[R[0],R[1]]]]]],[0,"paths",R[2],E,N,N],[5,"project_root","holochain_common::paths","Returns the project root builder for holochain directories.",N,[[],[[R[3]],[R[13],[R[3]]]]]],[5,"config_root",E,"Returns the path to the root config directory for all of…",N,[[],[R[4]]]],[5,"data_root",E,"Returns the path to the root data directory for all of…",N,[[],[R[4]]]],[5,"keys_directory",E,"Returns the path to where agent keys are stored and looked…",N,[[],[R[4]]]],[5,"n3h_binaries_directory",E,"Returns the path to where n3h binaries will be downloaded…",N,[[],[R[4]]]],[17,"QUALIFIER",E,E,N,N],[17,"ORGANIZATION",E,E,N,N],[17,"APPLICATION",E,E,N,N],[17,"KEYS_DIRECTORY",E,E,N,N],[17,"N3H_BINARIES_DIRECTORY",E,E,N,N],[17,"DNA_EXTENSION",E,E,N,N],[17,"DEFAULT_PASSPHRASE",R[2],E,N,N],[11,"from",R[5],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[78],E,E,0,[[[U]],[R[6]]]],[11,R[79],E,E,0,[[],[R[6]]]],[11,R[89],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"]],[R[90]]]]],"p":[[4,R[7]]]};
searchIndex["holochain_conductor_api"]={"doc":"let file_system =…","i":[[0,"conductor",R[859],E,N,N],[0,"admin",R[853],E,N,N],[8,R[927],"holochain_conductor_api::conductor::admin",E,N,N],[10,R[894],E,E,0,[[["self"],[R[13],[R[0]]],[R[13],["value"]],[R[13],[R[329]]],[R[4]],[R[329]],["bool"],["value"],[R[0]]],[[R[21]],[R[6],[R[329],R[21]]],[R[329]]]]],[10,R[895],E,E,0,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[10,R[896],E,E,0,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[10,R[897],E,E,0,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[10,R[898],E,E,0,[[["self"],[R[868]]],[[R[6],[R[21]]],[R[21]]]]],[10,R[899],E,E,0,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[10,R[900],E,E,0,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[10,R[901],E,E,0,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[10,R[902],E,E,0,[[["self"],[R[13],["str"]],["str"],[R[0]]],[[R[0]],[R[21]],[R[6],[R[0],R[21]]]]]],[10,R[903],E,E,0,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[10,R[904],E,E,0,[[["self"],["bridge"]],[[R[6],[R[21]]],[R[21]]]]],[10,R[905],E,E,0,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[0,"base",R[853],E,N,N],[3,R[961],R[881],"This is a global and mutable Conductor singleton. (Ok, not…",N,N],[3,R[928],E,"Main representation of the conductor. Holds a `HashMap` of…",N,N],[12,"key_loader",E,E,1,N],[12,R[858],E,E,1,N],[12,"hash_config",E,E,1,N],[5,"mount_conductor_from_config",E,"Conductor constructor that makes sure the Conductor…",N,[[[R[854]]]]],[5,"notify",E,E,N,[[[R[0]]]]],[6,"KeyLoader",E,E,N,N],[6,"DnaLoader",E,E,N,N],[6,"UiDirCopier",E,E,N,N],[11,"from_config",E,E,1,[[[R[854]]],["self"]]],[11,"add_agent_keystore",E,E,1,[[["self"],[R[875]],[R[0]]]]],[11,"with_signal_channel",E,E,1,[[["signal"],["sender",["signal"]]],["self"]]],[11,R[969],E,E,1,[[["self"]],[["vec",[R[0]]],[R[13],["vec"]]]]],[11,"config",E,E,1,[[["self"]],[R[854]]]],[11,"start_signal_multiplexer",E,"Starts a new thread which monitors each instance's signal…",1,[[["self"]],["joinhandle"]]],[11,"stop_signal_multiplexer",E,E,1,[[["self"]]]],[11,"start_all_interfaces",E,E,1,[[["self"]]]],[11,"stop_all_interfaces",E,E,1,[[["self"]]]],[11,"stop_interface_by_id",E,E,1,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[11,"start_interface_by_id",E,E,1,[[["self"],[R[0]]],[[R[6],[R[0]]],[R[0]]]]],[11,"start_all_static_servers",E,E,1,[[["self"]],[[R[6],[R[0]]],[R[0]]]]],[11,"start_instance",E,E,1,[[["self"],[R[0]]],[[R[6],[R[855]]],[R[855]]]]],[11,"stop_instance",E,E,1,[[["self"],[R[0]]],[[R[6],[R[855]]],[R[855]]]]],[11,"start_all_instances",E,"Starts all instances",1,[[["self"]],[[R[6],[R[855]]],[R[855]]]]],[11,"stop_all_instances",E,"Stops all instances",1,[[["self"]],[[R[6],[R[855]]],[R[855]]]]],[11,R[860],E,E,1,[[["self"]],[R[873]]]],[11,R[642],E,"Stop and clear all instances @QUESTION: why don't we care…",1,[[["self"]]]],[11,"spawn_network",E,E,1,[[["self"]],[[R[6],[R[452],R[21]]],[R[21]],[R[452]]]]],[11,"boot_from_config",E,"Tries to create all instances configured in the given…",1,[[["self"]],[[R[6],[R[0]]],[R[0]]]]],[11,"instantiate_from_config",E,"Creates one specific Holochain instance from a given…",1,[[["self"],[R[0]],[R[13],[R[854]]],[R[854]]],[[R[6],[R[856],R[0]]],[R[856]],[R[0]]]]],[11,"build_conductor_api",E,E,1,[[["self"],[R[854]],[R[0]]],[[R[857]],[R[21]],[R[6],[R[857],R[21]]]]]],[11,"agent_config_to_id",E,E,1,[[["self"],[R[865]]],[[R[21]],[R[40]],[R[6],[R[40],R[21]]]]]],[11,"check_load_key_for_agent",E,"Checks if the key for the given agent can be loaded or was…",1,[[["self"],[R[0]]],[[R[6],[R[0]]],[R[0]]]]],[11,"get_keystore_for_agent",E,"Get reference to keystore for given agent ID. If the key…",1,[[["self"],[R[0]]],[["arc",["mutex"]],[R[0]],[R[6],["arc",R[0]]]]]],[11,"get_keybundle_for_agent",E,"Get reference to the keybundle stored in the keystore for…",1,[[["self"],[R[0]]],[[R[6],["arc",R[0]]],["arc",["mutex"]],[R[0]]]]],[11,"load_dna",E,"Default DnaLoader that actually reads files from the…",1,[[[R[4]]],[[R[41],["dna"]],["dna"]]]],[11,"dna_dir_path",E,E,1,[[["self"]],[R[4]]]],[11,"config_path",E,E,1,[[["self"]],[R[4]]]],[11,"instance_storage_dir_path",E,E,1,[[["self"]],[R[4]]]],[11,"save_config",E,E,1,[[["self"]],[[R[6],[R[21]]],[R[21]]]]],[11,"save_dna",E,E,1,[[["self"],["dna"]],[[R[4]],[R[6],[R[4],R[21]]],[R[21]]]]],[11,"save_dna_to",E,E,1,[[["self"],[R[4]],["dna"]],[[R[4]],[R[6],[R[4],R[21]]],[R[21]]]]],[11,"using_dpki",E,"check for determining if the conductor is using dpki to…",1,[[["self"]],["bool"]]],[11,"dpki_instance_id",E,"returns the instance_id of the dpki app if it is configured",1,[[["self"]],[[R[13],[R[0]]],[R[0]]]]],[11,"dpki_init_params",E,"returns the init_params for the dpki app if it is configured",1,[[["self"]],[[R[13],[R[0]]],[R[0]]]]],[11,"dpki_bootstrap",E,"bootstraps the dpki app if configured",1,[[["self"]],[[R[6],[R[21]]],[R[21]]]]],[0,"broadcaster",R[853],E,N,N],[4,R[929],R[882],"An abstraction which represents the ability to (maybe)…",N,N],[13,"Ws",E,E,2,N],[13,"Noop",E,E,2,N],[11,"send",E,"Implements the actual method of sending for whichever…",2,[[["self"],["j"]],[[R[6],[R[21]]],[R[21]]]]],[0,R[858],R[853],E,N,N],[3,R[932],R[883],E,N,N],[3,R[962],E,E,N,N],[3,R[930],E,E,N,N],[12,"passphrase",E,E,3,N],[8,R[931],E,E,N,N],[10,R[906],E,E,4,[[["self"]],[["secbuf"],[R[21]],[R[6],["secbuf",R[21]]]]]],[11,"new",E,E,5,[[["arc",["mutex"]],["mutex",["passphraseservice"]]],["self"]]],[11,"get_passphrase",E,E,5,[[["self"]],[["secbuf"],[R[21]],[R[6],["secbuf",R[21]]]]]],[0,"test_admin",R[853],E,N,N],[8,R[933],"holochain_conductor_api::conductor::test_admin",E,N,N],[10,R[907],E,E,6,[[["self"],[R[0]]],[[R[0]],[R[21]],[R[6],[R[0],R[21]]]]]],[0,"ui_admin",R[853],E,N,N],[8,R[934],"holochain_conductor_api::conductor::ui_admin",E,N,N],[10,R[908],E,E,7,[[["self"],[R[0]],[R[4]],["bool"]],[[R[6],[R[21]]],[R[21]]]]],[10,R[909],E,E,7,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[10,R[910],E,E,7,[[["self"],[R[880]]],[[R[6],[R[21]]],[R[21]]]]],[10,R[911],E,E,7,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[10,R[912],E,E,7,[[["self"],[R[0]]],[[R[6],[R[855]]],[R[855]]]]],[10,R[913],E,E,7,[[["self"],[R[0]]],[[R[6],[R[855]]],[R[855]]]]],[0,"config",R[859],E,N,N],[3,R[935],R[862],"Main conductor configuration struct This is the root of…",N,N],[12,"agents",E,"List of Agents, this mainly means identities and their…",8,N],[12,"dnas",E,"List of DNAs, for each a path to the DNA file. Optional.",8,N],[12,R[860],E,"List of instances, includes references to an agent and a…",8,N],[12,"interfaces",E,"List of interfaces any UI can use to access zome…",8,N],[12,"bridges",E,"List of bridges between instances. Optional.",8,N],[12,"ui_bundles",E,"List of ui bundles (static web dirs) to host on a static…",8,N],[12,"ui_interfaces",E,"List of ui interfaces, includes references to ui bundles…",8,N],[12,"logger",E,"Configures how logging should behave. Optional.",8,N],[12,"network",E,"Configuration options for the network module. Optional.",8,N],[12,"persistence_dir",E,"where to persist the config file and DNAs. Optional.",8,N],[12,"signing_service_uri",E,R[861],8,N],[12,"encryption_service_uri",E,R[861],8,N],[12,"decryption_service_uri",E,R[861],8,N],[12,"dpki",E,"Optional DPKI configuration if conductor is using a DPKI…",8,N],[12,"signals",E,"Which signals to emit",8,N],[3,R[936],E,"There might be different kinds of loggers in the future.…",N,N],[12,"logger_type",E,E,9,N],[12,"rules",E,E,9,N],[3,R[937],E,"An agent has a name/ID and is defined by a private key…",N,N],[12,"id",E,E,10,N],[12,"name",E,E,10,N],[12,"public_address",E,E,10,N],[12,"keystore_file",E,E,10,N],[12,"holo_remote_key",E,"If set to true conductor will ignore keystore_file and…",10,N],[3,R[938],E,"A DNA is represented by a DNA file. A hash can optionally…",N,N],[12,"id",E,E,11,N],[12,"file",E,E,11,N],[12,"hash",E,E,11,N],[3,R[939],E,"An instance combines a DNA with an agent. Each instance…",N,N],[12,"id",E,E,12,N],[12,"dna",E,E,12,N],[12,"agent",E,E,12,N],[12,"storage",E,E,12,N],[3,R[940],E,"Here, interfaces are user facing and make available zome…",N,N],[12,"id",E,E,13,N],[12,"driver",E,E,13,N],[12,"admin",E,E,13,N],[12,R[860],E,E,13,N],[3,R[941],E,E,N,N],[12,"id",E,E,14,N],[3,"Bridge",E,"A bridge enables an instance to call zome functions of…",N,N],[12,"caller_id",E,"ID of the instance that calls the other one. This instance…",15,N],[12,"callee_id",E,"ID of the instance that exposes traits through this…",15,N],[12,"handle",E,"The caller's local handle of this bridge and the callee. A…",15,N],[3,R[942],E,"A UI Bundle is a folder containing static assets which can…",N,N],[12,"id",E,E,16,N],[12,"root_dir",E,E,16,N],[12,"hash",E,E,16,N],[3,R[943],E,E,N,N],[12,"id",E,E,17,N],[12,"bundle",E,"ID of the bundle to serve on this interface",17,N],[12,"port",E,E,17,N],[12,"dna_interface",E,"DNA interface this UI is allowed to make calls to This is…",17,N],[3,R[944],E,E,N,N],[12,"bootstrap_nodes",E,"List of URIs that point to other nodes to bootstrap p2p…",18,N],[12,"n3h_log_level",E,"Global logging level output by N3H",18,N],[12,"n3h_mode",E,"Overall mode n3h operates in. Should be 'REAL' REAL is the…",18,N],[12,"n3h_persistence_path",E,"Absolute path to the directory that n3h uses to store…",18,N],[12,"n3h_ipc_uri",E,"URI pointing to an n3h process that is already running and…",18,N],[12,"networking_config_file",E,"filepath to the json file holding the network settings for…",18,N],[3,R[945],E,"Configure which app instance id to treat as the DPKI…",N,N],[12,R[879],E,E,19,N],[12,"init_params",E,E,19,N],[3,R[946],E,"Configure which signals to emit, to reduce unwanted signal…",N,N],[12,"trace",E,E,20,N],[12,R[965],E,E,20,N],[4,R[947],E,"This configures the Content Addressable Storage (CAS) that…",N,N],[13,"Memory",E,E,21,N],[13,"File",E,E,21,N],[12,"path",R[863],E,21,N],[13,"Pickle",R[862],E,21,N],[12,"path",R[863],E,21,N],[4,R[948],R[862],E,N,N],[13,"Websocket",E,E,22,N],[12,"port",R[864],E,22,N],[13,"Http",R[862],E,22,N],[12,"port",R[864],E,22,N],[13,"DomainSocket",R[862],E,22,N],[12,"file",R[864],E,22,N],[13,"Custom",R[862],E,22,N],[4,R[949],E,E,N,N],[13,"N3h",E,E,23,N],[13,"Lib3h",E,E,23,N],[5,"default_persistence_dir",E,E,N,[[],[R[4]]]],[5,"default_n3h_mode",E,E,N,[[],[R[0]]]],[5,"default_n3h_log_level",E,E,N,[[],[R[0]]]],[5,"default_n3h_persistence_path",E,E,N,[[],[R[0]]]],[5,"load_configuration",E,"Use this function to load a `Configuration` from a string.",N,[[["str"]],[R[41]]]],[5,"serialize_configuration",E,E,N,[[[R[854]]],[[R[41],[R[0]]],[R[0]]]]],[11,"check_consistency",E,"This function basically checks if self is a semantically…",8,[[["self"],["dnaloader"]],[[R[6],[R[0]]],[R[0]]]]],[11,"agent_by_id",E,"Returns the agent configuration with the given ID if present",8,[[["self"],["str"]],[[R[865]],[R[13],[R[865]]]]]],[11,"dna_by_id",E,"Returns the DNA configuration with the given ID if present",8,[[["self"],["str"]],[[R[866]],[R[13],[R[866]]]]]],[11,"instance_by_id",E,"Returns the instance configuration with the given ID if…",8,[[["self"],["str"]],[[R[13],[R[867]]],[R[867]]]]],[11,"interface_by_id",E,"Returns the interface configuration with the given ID if…",8,[[["self"],["str"]],[[R[13],[R[868]]],[R[868]]]]],[11,"ui_bundle_by_id",E,E,8,[[["self"],["str"]],[[R[869]],[R[13],[R[869]]]]]],[11,"instance_ids",E,"Returns all defined instance IDs",8,[[["self"]],[["vec",[R[0]]],[R[0]]]]],[11,"instance_ids_sorted_by_bridge_dependencies",E,"This function uses the petgraph crate to model the bridge…",8,[[["self"]],[["vec",[R[0]]],[R[21]],[R[6],["vec",R[21]]]]]],[11,"bridge_dependencies",E,E,8,[[["self"],[R[0]]],[["bridge"],["vec",["bridge"]]]]],[11,"save_remove_instance",E,"Removes the instance given by id and all mentions of it in…",8,[[[R[0]]],["self"]]],[0,"context_builder",R[859],E,N,N],[3,R[950],R[884],"This type helps building context objects that need to be…",N,N],[11,"new",E,E,24,[[],["self"]]],[11,"with_agent",E,"Sets the agent of the context that gets built.",24,[[[R[40]]],["self"]]],[11,"with_memory_storage",E,R[870],24,[[],["self"]]],[11,"with_file_storage",E,R[870],24,[[["path"],["asref",["path"]]],[[R[21]],[R[6],[R[21]]]]]],[11,"with_pickle_storage",E,R[870],24,[[["path"],["asref",["path"]]],[[R[21]],[R[6],[R[21]]]]]],[11,"with_p2p_config",E,"Sets the network config.",24,[[[R[499]]],["self"]]],[11,"with_conductor_api",E,E,24,[[[R[857]]],["self"]]],[11,"with_logger",E,E,24,[[["arc",["mutex"]],["mutex",["logger"]]],["self"]]],[11,"with_signals",E,E,24,[[[R[614]]],["self"]]],[11,"spawn",E,"Actually creates the context. Defaults to memory storages,…",24,[[],[R[620]]]],[0,"dpki_instance",R[859],E,N,N],[17,"DPKI_ZOME_NAME","holochain_conductor_api::dpki_instance",E,N,N],[17,"DPKI_TRAIT_FN_ADD_AGENT",E,E,N,N],[17,"DPKI_TRAIT_FN_INIT",E,E,N,N],[17,"DPKI_TRAIT_FN_IS_INITIALIZED",E,E,N,N],[8,R[951],E,E,N,N],[10,R[914],E,E,25,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[10,R[915],E,E,25,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[10,R[916],E,E,25,[[["self"]],[["bool"],[R[21]],[R[6],["bool",R[21]]]]]],[0,"error",R[859],E,N,N],[4,R[952],R[885],E,N,N],[13,"InternalFailure",E,E,26,N],[13,"InstanceNotActiveYet",E,E,26,N],[13,"InstanceAlreadyActive",E,E,26,N],[13,"InstanceNotInitialized",E,E,26,N],[13,"NoSuchInstance",E,E,26,N],[13,"RequiredBridgeMissing",E,E,26,N],[6,"HolochainResult",E,E,N,N],[0,"holo_signing_service",R[859],E,N,N],[5,"request_service","holochain_conductor_api::holo_signing_service",E,N,[[[R[40]],[R[0]]],[[R[0]],[R[21]],[R[6],[R[0],R[21]]]]]],[0,R[856],R[859],"`holochain_conductor_api` is a library for instantiating…",N,N],[3,R[953],R[886],"contains a Holochain application instance",N,N],[11,"new",E,"create a new Holochain instance",27,[[["arc",[R[620]]],["dna"],[R[620]]],[R[871]]]],[11,"load",E,E,27,[[["arc",[R[620]]],[R[620]]],[[R[21]],[R[6],[R[21]]]]]],[11,"kill",E,E,27,[[["self"]]]],[11,"start",E,"activate the Holochain instance",27,[[["self"]],[[R[6],[R[855]]],[R[855]]]]],[11,"stop",E,"deactivate the Holochain instance",27,[[["self"]],[[R[6],[R[855]]],[R[855]]]]],[11,"call",E,"call a function in a zome",27,[[["self"],["str"],[R[123]]],[[R[26]],[R[871],[R[26]]]]]],[11,"active",E,"checks to see if an instance is active",27,[[["self"]],["bool"]]],[11,"state",E,"return",27,[[["self"]],[[R[855]],[R[6],[R[599],R[855]]],[R[599]]]]],[11,R[620],E,E,27,[[["self"]],[[R[6],["arc",R[855]]],["arc",[R[620]]],[R[855]]]]],[11,"set_conductor_api",E,E,27,[[["self"],[R[857]]],[[R[6],[R[855]]],[R[855]]]]],[0,"interface",R[859],E,N,N],[3,R[963],R[887],"An identifier for an instance that is usable by UI in…",N,N],[3,R[955],E,"ConductorApiBuilder creates IoHandlers that implement RPCs…",N,N],[6,"InterfaceError",E,E,N,N],[6,"InstanceMap",E,E,N,N],[6,"PublicInstanceMap",E,"A mapper type between the public identifier and the…",N,N],[8,R[954],E,E,N,N],[10,"handler",E,E,28,[[],[R[857]]]],[8,R[872],E,"A Broadcaster is something that knows how to send a Signal…",N,N],[10,"run",E,E,29,[[["self"],[R[857]],[R[626]]],[[R[0]],[R[6],[R[0]]]]]],[11,"new",E,E,30,[[],["self"]]],[11,"spawn",E,"Finish the building and retrieve the populated handler",30,[[],[R[857]]]],[11,"with_named_instance_config",E,"Add a InstanceConfig for a custom named instance",30,[[[R[867]],[R[0]]],["self"]]],[11,"with_instance_configs",E,"Add a vector of InstanceConfig and regard their ID from…",30,[[["vec",[R[867]]],[R[867]]],["self"]]],[11,"with_instances",E,"Add several instances with the names given in the…",30,[[[R[873]]],["self"]]],[11,"with_named_instance",E,"Add a single instance and register it under the given name",30,[[["arc",["rwlock"]],["rwlock",[R[856]]],[R[0]]],["self"]]],[11,"with_admin_dna_functions",E,"This adds functions to remotely change any aspect of the…",30,[[],["self"]]],[11,"with_admin_ui_functions",E,"Adds a further set of functions to the Conductor RPC for…",30,[[],["self"]]],[11,"with_agent_signature_callback",E,E,30,[[["arc",["mutex"]],["mutex",[R[400]]]],["self"]]],[11,"with_agent_encryption_callback",E,E,30,[[["arc",["mutex"]],["mutex",[R[400]]]],["self"]]],[11,"with_agent_decryption_callback",E,E,30,[[["arc",["mutex"]],["mutex",[R[400]]]],["self"]]],[11,"with_test_admin_functions",E,"Adds extra functionality for running tests via the RPC…",30,[[],["self"]]],[11,"with_outsource_signing_callback",E,E,30,[[[R[40]],[R[0]]],["self"]]],[11,"with_outsource_encryption_callback",E,E,30,[[[R[40]],[R[0]]],["self"]]],[11,"with_outsource_decryption_callback",E,E,30,[[[R[40]],[R[0]]],["self"]]],[11,"with_agent_keystore_functions",E,E,30,[[["arc",["mutex"]],["mutex",[R[875]]]],["self"]]],[0,"interface_impls",R[859],E,N,N],[0,"http",R[874],E,N,N],[3,R[956],R[888],E,N,N],[11,"new",E,E,31,[[["u16"]],["self"]]],[0,"websocket",R[874],E,N,N],[3,R[957],R[889],E,N,N],[11,"new",E,E,32,[[["u16"]],["self"]]],[0,"key_loaders",R[859],E,N,N],[5,"test_keystore_loader","holochain_conductor_api::key_loaders","Key loader callback to use with conductor_api. This…",N,[[],["keyloader"]]],[5,"test_keystore",E,"Create a deterministic test key from the SHA256 of the…",N,[[[R[0]]],[R[875]]]],[5,"mock_passphrase_manager",E,E,N,[[[R[0]]],[["arc",[R[876]]],[R[876]]]]],[0,R[875],R[859],E,N,N],[3,"Keystore",R[890],"A type for providing high-level crypto functions and…",N,N],[4,"Secret",E,E,N,N],[13,R[967],E,E,33,N],[13,R[968],E,E,33,N],[13,"Seed",E,E,33,N],[4,"KeyType",E,E,N,N],[13,"Signing",E,E,34,N],[13,R[970],E,E,34,N],[5,"test_hash_config",E,E,N,[[],[[R[13],[R[383]]],[R[383]]]]],[17,"PRIMARY_KEYBUNDLE_ID",E,E,N,N],[17,"STANDALONE_ROOT_SEED",E,E,N,N],[11,"new",E,"Create a new keystore. This will query…",35,[[[R[876]],[R[383]],[R[13],[R[383]]],["arc",[R[876]]]],[R[41]]]],[11,"new_standalone",E,"Create a new keystore for \"standalone\" use, i.e. not…",35,[[[R[876]],[R[383]],[R[13],[R[383]]],["arc",[R[876]]]],[R[41]]]],[11,"new_from_file",E,"Load a keystore from file. This won't ask for a passphrase…",35,[[[R[876]],[R[383]],[R[4]],["arc",[R[876]]],[R[13],[R[383]]]],[R[41]]]],[11,"change_passphrase",E,E,35,[[["self"],["secbuf"]],[R[41]]]],[11,"save",E,"Serialize the keystore to a file.",35,[[["self"],[R[4]]],[R[41]]]],[11,"list",E,"return a list of the identifiers stored in the keystore",35,[[["self"]],[["vec",[R[0]]],[R[0]]]]],[11,"add",E,"adds a secret to the keystore",35,[[["self"],["arc",["mutex"]],["str"],["mutex",["secret"]]],[R[41]]]],[11,"add_random_seed",E,"adds a random root seed into the keystore",35,[[["self"],["str"],["usize"]],[R[41]]]],[11,"get",E,"gets a secret from the keystore",35,[[["self"],["str"]],[["arc",["mutex"]],[R[41],["arc"]]]]],[11,"add_seed_from_seed",E,"adds a derived seed into the keystore",35,[[["self"],[R[401]],["str"],["u64"]],[R[41]]]],[11,"add_key_from_seed",E,"adds a keypair into the keystore based on a seed already…",35,[[["self"],["keytype"],["str"]],[["base32"],[R[41],["base32"]]]]],[11,"add_signing_key_from_seed",E,"adds a signing keypair into the keystore based on a seed…",35,[[["self"],["str"]],[["base32"],[R[41],["base32"]]]]],[11,"add_encrypting_key_from_seed",E,"adds an encrypting keypair into the keystore based on a…",35,[[["self"],["str"]],[["base32"],[R[41],["base32"]]]]],[11,"add_keybundle_from_seed",E,R[877],35,[[["self"],["str"]],[R[41]]]],[11,"add_keybundle",E,"adds a keybundle into the keystore based on an actual…",35,[[["self"],["str"],[R[400]]],[R[41]]]],[11,"get_keybundle",E,R[877],35,[[["self"],["str"]],[[R[400]],[R[41],[R[400]]]]]],[11,"sign",E,"signs some data using a keypair in the keystore returns…",35,[[["self"],["str"],[R[0]]],[[R[67]],[R[41],[R[67]]]]]],[0,"logger",R[859],E,N,N],[3,"LogRule",R[891],E,N,N],[12,"pattern",E,E,36,N],[12,"exclude",E,E,36,N],[12,"color",E,E,36,N],[3,"LogRules",E,E,N,N],[12,"rules",E,E,37,N],[3,R[958],E,E,N,N],[3,R[964],E,E,N,N],[5,"run",E,E,N,[[[R[0]],[R[925]]]]],[5,"render",E,E,N,[[[R[878]]]]],[11,"new",E,E,37,[[],["self"]]],[11,"add_rule",E,E,37,[[["self"],[R[13],[R[0]]],[R[0]],["str"],["bool"]],[[R[6],[R[21]]],[R[21]]]]],[11,"run",E,E,37,[[["self"],[R[0]]],[[R[13],[R[878]]],[R[878]]]]],[11,"new",E,E,38,[[[R[925]]],["self"]]],[11,"get_sender",E,E,38,[[["self"]],["sender"]]],[0,"signal_wrapper",R[859],E,N,N],[3,R[959],R[892],"This struct wraps a Signal from core before serializing…",N,N],[12,"signal",E,E,39,N],[12,R[879],E,E,39,N],[0,"static_file_server",R[859],E,N,N],[3,R[960],R[893],E,N,N],[11,"from_configs",E,E,40,[[[R[869]],[R[868]],[R[13],[R[868]]],[R[880]]],["self"]]],[11,"start",E,E,40,[[["self"]],[R[871]]]],[11,"stop",E,E,40,[[["self"]],[R[871]]]],[11,"from",R[881],E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[78],E,E,41,[[[U]],[R[6]]]],[11,R[79],E,E,41,[[],[R[6]]]],[11,R[89],E,E,41,[[["self"]],[T]]],[11,R[80],E,E,41,[[["self"]],[T]]],[11,R[84],E,E,41,[[["self"]],[R[90]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[78],E,E,1,[[[U]],[R[6]]]],[11,R[79],E,E,1,[[],[R[6]]]],[11,R[89],E,E,1,[[["self"]],[T]]],[11,R[80],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"]],[R[90]]]],[11,"from",R[882],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[78],E,E,2,[[[U]],[R[6]]]],[11,R[79],E,E,2,[[],[R[6]]]],[11,R[89],E,E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"]],[R[90]]]],[11,"from",R[883],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[82],E,E,5,[[["self"]],[T]]],[11,R[83],E,E,5,[[["self"],[T]]]],[11,R[78],E,E,5,[[[U]],[R[6]]]],[11,R[79],E,E,5,[[],[R[6]]]],[11,R[89],E,E,5,[[["self"]],[T]]],[11,R[80],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"]],[R[90]]]],[11,R[85],E,E,5,[[["self"]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[78],E,E,42,[[[U]],[R[6]]]],[11,R[79],E,E,42,[[],[R[6]]]],[11,R[89],E,E,42,[[["self"]],[T]]],[11,R[80],E,E,42,[[["self"]],[T]]],[11,R[84],E,E,42,[[["self"]],[R[90]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[78],E,E,3,[[[U]],[R[6]]]],[11,R[79],E,E,3,[[],[R[6]]]],[11,R[89],E,E,3,[[["self"]],[T]]],[11,R[80],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"]],[R[90]]]],[11,"from",R[862],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[82],E,E,8,[[["self"]],[T]]],[11,R[83],E,E,8,[[["self"],[T]]]],[11,R[78],E,E,8,[[[U]],[R[6]]]],[11,R[79],E,E,8,[[],[R[6]]]],[11,R[89],E,E,8,[[["self"]],[T]]],[11,R[80],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"]],[R[90]]]],[11,R[85],E,E,8,[[["self"]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[82],E,E,9,[[["self"]],[T]]],[11,R[83],E,E,9,[[["self"],[T]]]],[11,R[78],E,E,9,[[[U]],[R[6]]]],[11,R[79],E,E,9,[[],[R[6]]]],[11,R[89],E,E,9,[[["self"]],[T]]],[11,R[80],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"]],[R[90]]]],[11,R[85],E,E,9,[[["self"]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[82],E,E,10,[[["self"]],[T]]],[11,R[83],E,E,10,[[["self"],[T]]]],[11,R[78],E,E,10,[[[U]],[R[6]]]],[11,R[79],E,E,10,[[],[R[6]]]],[11,R[89],E,E,10,[[["self"]],[T]]],[11,R[80],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"]],[R[90]]]],[11,R[85],E,E,10,[[["self"]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[82],E,E,11,[[["self"]],[T]]],[11,R[83],E,E,11,[[["self"],[T]]]],[11,R[78],E,E,11,[[[U]],[R[6]]]],[11,R[79],E,E,11,[[],[R[6]]]],[11,R[89],E,E,11,[[["self"]],[T]]],[11,R[80],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"]],[R[90]]]],[11,R[85],E,E,11,[[["self"]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[82],E,E,12,[[["self"]],[T]]],[11,R[83],E,E,12,[[["self"],[T]]]],[11,R[78],E,E,12,[[[U]],[R[6]]]],[11,R[79],E,E,12,[[],[R[6]]]],[11,R[89],E,E,12,[[["self"]],[T]]],[11,R[80],E,E,12,[[["self"]],[T]]],[11,R[84],E,E,12,[[["self"]],[R[90]]]],[11,R[85],E,E,12,[[["self"]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[82],E,E,13,[[["self"]],[T]]],[11,R[83],E,E,13,[[["self"],[T]]]],[11,R[78],E,E,13,[[[U]],[R[6]]]],[11,R[79],E,E,13,[[],[R[6]]]],[11,R[89],E,E,13,[[["self"]],[T]]],[11,R[80],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"]],[R[90]]]],[11,R[85],E,E,13,[[["self"]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[82],E,E,14,[[["self"]],[T]]],[11,R[83],E,E,14,[[["self"],[T]]]],[11,R[78],E,E,14,[[[U]],[R[6]]]],[11,R[79],E,E,14,[[],[R[6]]]],[11,R[89],E,E,14,[[["self"]],[T]]],[11,R[80],E,E,14,[[["self"]],[T]]],[11,R[84],E,E,14,[[["self"]],[R[90]]]],[11,R[85],E,E,14,[[["self"]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[82],E,E,15,[[["self"]],[T]]],[11,R[83],E,E,15,[[["self"],[T]]]],[11,R[78],E,E,15,[[[U]],[R[6]]]],[11,R[79],E,E,15,[[],[R[6]]]],[11,R[89],E,E,15,[[["self"]],[T]]],[11,R[80],E,E,15,[[["self"]],[T]]],[11,R[84],E,E,15,[[["self"]],[R[90]]]],[11,R[85],E,E,15,[[["self"]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[82],E,E,16,[[["self"]],[T]]],[11,R[83],E,E,16,[[["self"],[T]]]],[11,R[78],E,E,16,[[[U]],[R[6]]]],[11,R[79],E,E,16,[[],[R[6]]]],[11,R[89],E,E,16,[[["self"]],[T]]],[11,R[80],E,E,16,[[["self"]],[T]]],[11,R[84],E,E,16,[[["self"]],[R[90]]]],[11,R[85],E,E,16,[[["self"]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[82],E,E,17,[[["self"]],[T]]],[11,R[83],E,E,17,[[["self"],[T]]]],[11,R[78],E,E,17,[[[U]],[R[6]]]],[11,R[79],E,E,17,[[],[R[6]]]],[11,R[89],E,E,17,[[["self"]],[T]]],[11,R[80],E,E,17,[[["self"]],[T]]],[11,R[84],E,E,17,[[["self"]],[R[90]]]],[11,R[85],E,E,17,[[["self"]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[82],E,E,18,[[["self"]],[T]]],[11,R[83],E,E,18,[[["self"],[T]]]],[11,R[78],E,E,18,[[[U]],[R[6]]]],[11,R[79],E,E,18,[[],[R[6]]]],[11,R[89],E,E,18,[[["self"]],[T]]],[11,R[80],E,E,18,[[["self"]],[T]]],[11,R[84],E,E,18,[[["self"]],[R[90]]]],[11,R[85],E,E,18,[[["self"]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[82],E,E,19,[[["self"]],[T]]],[11,R[83],E,E,19,[[["self"],[T]]]],[11,R[78],E,E,19,[[[U]],[R[6]]]],[11,R[79],E,E,19,[[],[R[6]]]],[11,R[89],E,E,19,[[["self"]],[T]]],[11,R[80],E,E,19,[[["self"]],[T]]],[11,R[84],E,E,19,[[["self"]],[R[90]]]],[11,R[85],E,E,19,[[["self"]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[82],E,E,20,[[["self"]],[T]]],[11,R[83],E,E,20,[[["self"],[T]]]],[11,R[78],E,E,20,[[[U]],[R[6]]]],[11,R[79],E,E,20,[[],[R[6]]]],[11,R[89],E,E,20,[[["self"]],[T]]],[11,R[80],E,E,20,[[["self"]],[T]]],[11,R[84],E,E,20,[[["self"]],[R[90]]]],[11,R[85],E,E,20,[[["self"]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[82],E,E,21,[[["self"]],[T]]],[11,R[83],E,E,21,[[["self"],[T]]]],[11,R[78],E,E,21,[[[U]],[R[6]]]],[11,R[79],E,E,21,[[],[R[6]]]],[11,R[89],E,E,21,[[["self"]],[T]]],[11,R[80],E,E,21,[[["self"]],[T]]],[11,R[84],E,E,21,[[["self"]],[R[90]]]],[11,R[85],E,E,21,[[["self"]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[82],E,E,22,[[["self"]],[T]]],[11,R[83],E,E,22,[[["self"],[T]]]],[11,R[78],E,E,22,[[[U]],[R[6]]]],[11,R[79],E,E,22,[[],[R[6]]]],[11,R[89],E,E,22,[[["self"]],[T]]],[11,R[80],E,E,22,[[["self"]],[T]]],[11,R[84],E,E,22,[[["self"]],[R[90]]]],[11,R[85],E,E,22,[[["self"]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[82],E,E,23,[[["self"]],[T]]],[11,R[83],E,E,23,[[["self"],[T]]]],[11,R[78],E,E,23,[[[U]],[R[6]]]],[11,R[79],E,E,23,[[],[R[6]]]],[11,R[89],E,E,23,[[["self"]],[T]]],[11,R[80],E,E,23,[[["self"]],[T]]],[11,R[84],E,E,23,[[["self"]],[R[90]]]],[11,R[85],E,E,23,[[["self"]]]],[11,"from",R[884],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[78],E,E,24,[[[U]],[R[6]]]],[11,R[79],E,E,24,[[],[R[6]]]],[11,R[89],E,E,24,[[["self"]],[T]]],[11,R[80],E,E,24,[[["self"]],[T]]],[11,R[84],E,E,24,[[["self"]],[R[90]]]],[11,"from",R[885],E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[94],E,E,26,[[["self"]],[R[0]]]],[11,R[82],E,E,26,[[["self"]],[T]]],[11,R[83],E,E,26,[[["self"],[T]]]],[11,R[78],E,E,26,[[[U]],[R[6]]]],[11,R[79],E,E,26,[[],[R[6]]]],[11,R[89],E,E,26,[[["self"]],[T]]],[11,R[80],E,E,26,[[["self"]],[T]]],[11,R[84],E,E,26,[[["self"]],[R[90]]]],[11,R[85],E,E,26,[[["self"]]]],[11,"as_fail",E,E,26,[[["self"]],["fail"]]],[11,"from",R[886],E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[78],E,E,27,[[[U]],[R[6]]]],[11,R[79],E,E,27,[[],[R[6]]]],[11,R[89],E,E,27,[[["self"]],[T]]],[11,R[80],E,E,27,[[["self"]],[T]]],[11,R[84],E,E,27,[[["self"]],[R[90]]]],[11,"from",R[887],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[82],E,E,43,[[["self"]],[T]]],[11,R[83],E,E,43,[[["self"],[T]]]],[11,R[78],E,E,43,[[[U]],[R[6]]]],[11,R[79],E,E,43,[[],[R[6]]]],[11,R[89],E,E,43,[[["self"]],[T]]],[11,R[80],E,E,43,[[["self"]],[T]]],[11,R[84],E,E,43,[[["self"]],[R[90]]]],[11,R[87],E,E,43,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,43,[[["self"]]]],[11,R[87],E,E,43,[[["self"],["k"]],["bool"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[78],E,E,30,[[[U]],[R[6]]]],[11,R[79],E,E,30,[[],[R[6]]]],[11,R[89],E,E,30,[[["self"]],[T]]],[11,R[80],E,E,30,[[["self"]],[T]]],[11,R[84],E,E,30,[[["self"]],[R[90]]]],[11,"from",R[888],E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[78],E,E,31,[[[U]],[R[6]]]],[11,R[79],E,E,31,[[],[R[6]]]],[11,R[89],E,E,31,[[["self"]],[T]]],[11,R[80],E,E,31,[[["self"]],[T]]],[11,R[84],E,E,31,[[["self"]],[R[90]]]],[11,"from",R[889],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[78],E,E,32,[[[U]],[R[6]]]],[11,R[79],E,E,32,[[],[R[6]]]],[11,R[89],E,E,32,[[["self"]],[T]]],[11,R[80],E,E,32,[[["self"]],[T]]],[11,R[84],E,E,32,[[["self"]],[R[90]]]],[11,"from",R[890],E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[78],E,E,35,[[[U]],[R[6]]]],[11,R[79],E,E,35,[[],[R[6]]]],[11,R[89],E,E,35,[[["self"]],[T]]],[11,R[80],E,E,35,[[["self"]],[T]]],[11,R[84],E,E,35,[[["self"]],[R[90]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[78],E,E,33,[[[U]],[R[6]]]],[11,R[79],E,E,33,[[],[R[6]]]],[11,R[89],E,E,33,[[["self"]],[T]]],[11,R[80],E,E,33,[[["self"]],[T]]],[11,R[84],E,E,33,[[["self"]],[R[90]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[78],E,E,34,[[[U]],[R[6]]]],[11,R[79],E,E,34,[[],[R[6]]]],[11,R[89],E,E,34,[[["self"]],[T]]],[11,R[80],E,E,34,[[["self"]],[T]]],[11,R[84],E,E,34,[[["self"]],[R[90]]]],[11,"from",R[891],E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[82],E,E,36,[[["self"]],[T]]],[11,R[83],E,E,36,[[["self"],[T]]]],[11,R[78],E,E,36,[[[U]],[R[6]]]],[11,R[79],E,E,36,[[],[R[6]]]],[11,R[89],E,E,36,[[["self"]],[T]]],[11,R[80],E,E,36,[[["self"]],[T]]],[11,R[84],E,E,36,[[["self"]],[R[90]]]],[11,R[85],E,E,36,[[["self"]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[82],E,E,37,[[["self"]],[T]]],[11,R[83],E,E,37,[[["self"],[T]]]],[11,R[78],E,E,37,[[[U]],[R[6]]]],[11,R[79],E,E,37,[[],[R[6]]]],[11,R[89],E,E,37,[[["self"]],[T]]],[11,R[80],E,E,37,[[["self"]],[T]]],[11,R[84],E,E,37,[[["self"]],[R[90]]]],[11,R[85],E,E,37,[[["self"]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[78],E,E,38,[[[U]],[R[6]]]],[11,R[79],E,E,38,[[],[R[6]]]],[11,R[89],E,E,38,[[["self"]],[T]]],[11,R[80],E,E,38,[[["self"]],[T]]],[11,R[84],E,E,38,[[["self"]],[R[90]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[78],E,E,44,[[[U]],[R[6]]]],[11,R[79],E,E,44,[[],[R[6]]]],[11,R[89],E,E,44,[[["self"]],[T]]],[11,R[80],E,E,44,[[["self"]],[T]]],[11,R[84],E,E,44,[[["self"]],[R[90]]]],[11,"from",R[892],E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[78],E,E,39,[[[U]],[R[6]]]],[11,R[79],E,E,39,[[],[R[6]]]],[11,R[89],E,E,39,[[["self"]],[T]]],[11,R[80],E,E,39,[[["self"]],[T]]],[11,R[84],E,E,39,[[["self"]],[R[90]]]],[11,"from",R[893],E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[78],E,E,40,[[[U]],[R[6]]]],[11,R[79],E,E,40,[[],[R[6]]]],[11,R[89],E,E,40,[[["self"]],[T]]],[11,R[80],E,E,40,[[["self"]],[T]]],[11,R[84],E,E,40,[[["self"]],[R[90]]]],[11,R[894],R[881],"Installs a DNA package from the file system to the…",1,[[["self"],[R[13],[R[0]]],[R[13],["value"]],[R[13],[R[329]]],[R[4]],[R[329]],["bool"],["value"],[R[0]]],[[R[21]],[R[6],[R[329],R[21]]],[R[329]]]]],[11,R[895],E,"Removes the DNA given by id from the config. Also removes…",1,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[11,R[896],E,E,1,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[11,R[897],E,"Removes the instance given by id from the config. Also…",1,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[11,R[898],E,E,1,[[["self"],[R[868]]],[[R[6],[R[21]]],[R[21]]]]],[11,R[899],E,E,1,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[11,R[900],E,E,1,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[11,R[901],E,E,1,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[11,R[902],E,E,1,[[["self"],[R[13],["str"]],["str"],[R[0]]],[[R[0]],[R[21]],[R[6],[R[0],R[21]]]]]],[11,R[903],E,E,1,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[11,R[904],E,E,1,[[["self"],["bridge"]],[[R[6],[R[21]]],[R[21]]]]],[11,R[905],E,E,1,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[11,R[906],R[883],E,42,[[["self"]],[["secbuf"],[R[21]],[R[6],["secbuf",R[21]]]]]],[11,R[906],E,E,3,[[["self"]],[["secbuf"],[R[21]],[R[6],["secbuf",R[21]]]]]],[11,R[907],R[881],E,1,[[["self"],[R[0]]],[[R[0]],[R[21]],[R[6],[R[0],R[21]]]]]],[11,R[908],E,E,1,[[["self"],[R[0]],[R[4]],["bool"]],[[R[6],[R[21]]],[R[21]]]]],[11,R[909],E,"Removes the UI bundle in the config. Also stops then…",1,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[11,R[910],E,E,1,[[["self"],[R[880]]],[[R[6],[R[21]]],[R[21]]]]],[11,R[911],E,E,1,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[11,R[912],E,E,1,[[["self"],[R[0]]],[[R[6],[R[855]]],[R[855]]]]],[11,R[913],E,E,1,[[["self"],[R[0]]],[[R[6],[R[855]]],[R[855]]]]],[11,R[914],R[886],"wrapper for the dpki create_agent_key trait function",27,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[11,R[915],E,E,27,[[["self"],[R[0]]],[[R[6],[R[21]]],[R[21]]]]],[11,R[916],E,E,27,[[["self"]],[["bool"],[R[21]],[R[6],["bool",R[21]]]]]],[11,"run",R[888],E,31,[[["self"],[R[857]],[R[626]]],[[R[0]],[R[6],[R[0]]]]]],[11,"run",R[889],E,32,[[["self"],[R[857]],[R[626]]],[[R[0]],[R[6],[R[0]]]]]],[11,"drop",R[881],E,1,[[["self"]]]],[11,"drop",R[882],E,2,[[["self"]]]],[11,"drop",R[883],E,5,[[["self"]]]],[11,"from",R[885],E,26,[[[R[21]]],["self"]]],[11,"from",E,E,26,[[[R[966]]],["self"]]],[11,"from",R[887],E,43,[[[R[0]]],[R[924]]]],[11,"eq",R[862],E,10,[[["self"],[R[865]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[865]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[866]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[866]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[867]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[867]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[917]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[917]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[868]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[868]]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[918]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[918]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[919]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[919]]],["bool"]]],[11,"eq",E,E,15,[[["self"],["bridge"]],["bool"]]],[11,"ne",E,E,15,[[["self"],["bridge"]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[869]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[869]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[880]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[880]]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[920]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[920]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[921]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[921]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[922]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[922]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[923]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[923]]],["bool"]]],[11,"eq",R[885],E,26,[[["self"],[R[855]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[855]]],["bool"]]],[11,"eq",R[887],E,43,[[["self"],[R[924]]],["bool"]]],[11,"ne",E,E,43,[[["self"],[R[924]]],["bool"]]],[11,"eq",R[891],E,44,[[["self"],[R[878]]],["bool"]]],[11,"ne",E,E,44,[[["self"],[R[878]]],["bool"]]],[11,"clone",R[883],E,5,[[["self"]],[R[876]]]],[11,"clone",R[862],E,8,[[["self"]],[R[854]]]],[11,"clone",E,E,9,[[["self"]],[R[926]]]],[11,"clone",E,E,10,[[["self"]],[R[865]]]],[11,"clone",E,E,11,[[["self"]],[R[866]]]],[11,"clone",E,E,12,[[["self"]],[R[867]]]],[11,"clone",E,E,21,[[["self"]],[R[917]]]],[11,"clone",E,E,13,[[["self"]],[R[868]]]],[11,"clone",E,E,22,[[["self"]],[R[918]]]],[11,"clone",E,E,14,[[["self"]],[R[919]]]],[11,"clone",E,E,15,[[["self"]],["bridge"]]],[11,"clone",E,E,16,[[["self"]],[R[869]]]],[11,"clone",E,E,17,[[["self"]],[R[880]]]],[11,"clone",E,E,23,[[["self"]],[R[920]]]],[11,"clone",E,E,18,[[["self"]],[R[921]]]],[11,"clone",E,E,19,[[["self"]],[R[922]]]],[11,"clone",E,E,20,[[["self"]],[R[923]]]],[11,"clone",R[885],E,26,[[["self"]],[R[855]]]],[11,"clone",R[887],E,43,[[["self"]],[R[924]]]],[11,"clone",R[891],E,36,[[["self"]],["logrule"]]],[11,"clone",E,E,37,[[["self"]],[R[925]]]],[11,R[131],R[862],E,8,[[],[R[854]]]],[11,R[131],E,E,9,[[],[R[926]]]],[11,R[131],E,E,20,[[],[R[923]]]],[11,R[131],R[891],E,37,[[],[R[925]]]],[11,"deref",R[881],E,41,[[["self"]],["arc"]]],[11,"fmt",R[885],E,26,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[882],E,2,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[862],E,8,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,9,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,10,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,11,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,12,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,21,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,13,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,22,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,14,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,15,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,16,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,17,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,23,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,18,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,19,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,20,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[885],E,26,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[887],E,43,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[891],E,36,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,37,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,44,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[892],E,39,[[["self"],[R[135]]],[R[6]]]],[11,R[78],E,E,39,[[[R[26]]],[R[6]]]],[11,R[78],E,E,39,[[[R[26]]],[R[6]]]],[11,"hash",R[887],E,43,[[["self"],["__h"]]]],[11,"cause",R[885],E,26,[[["self"]],[[R[13],["error"]],["error"]]]],[11,R[138],R[862],E,8,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,9,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,10,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,11,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,12,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,21,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,13,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,22,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,14,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,15,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,16,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,17,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,23,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,18,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,19,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,20,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[887],E,43,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[890],E,35,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[891],E,36,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,37,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[892],E,39,[[["self"],["__s"]],[R[6]]]],[11,R[139],R[862],E,8,[[["__d"]],[R[6]]]],[11,R[139],E,E,9,[[["__d"]],[R[6]]]],[11,R[139],E,E,10,[[["__d"]],[R[6]]]],[11,R[139],E,E,11,[[["__d"]],[R[6]]]],[11,R[139],E,E,12,[[["__d"]],[R[6]]]],[11,R[139],E,E,21,[[["__d"]],[R[6]]]],[11,R[139],E,E,13,[[["__d"]],[R[6]]]],[11,R[139],E,E,22,[[["__d"]],[R[6]]]],[11,R[139],E,E,14,[[["__d"]],[R[6]]]],[11,R[139],E,E,15,[[["__d"]],[R[6]]]],[11,R[139],E,E,16,[[["__d"]],[R[6]]]],[11,R[139],E,E,17,[[["__d"]],[R[6]]]],[11,R[139],E,E,23,[[["__d"]],[R[6]]]],[11,R[139],E,E,18,[[["__d"]],[R[6]]]],[11,R[139],E,E,19,[[["__d"]],[R[6]]]],[11,R[139],E,E,20,[[["__d"]],[R[6]]]],[11,R[139],R[887],E,43,[[["__d"]],[R[6]]]],[11,R[139],R[890],E,35,[[["__d"]],[R[6]]]],[11,R[139],R[891],E,36,[[["__d"]],[R[6]]]],[11,R[139],E,E,37,[[["__d"]],[R[6]]]],[11,R[139],R[892],E,39,[[["__d"]],[R[6]]]],[11,R[331],R[881],E,41,[[["self"]]]]],"p":[[8,R[927]],[3,R[928]],[4,R[929]],[3,R[930]],[8,R[931]],[3,R[932]],[8,R[933]],[8,R[934]],[3,R[935]],[3,R[936]],[3,R[937]],[3,R[938]],[3,R[939]],[3,R[940]],[3,R[941]],[3,"Bridge"],[3,R[942]],[3,R[943]],[3,R[944]],[3,R[945]],[3,R[946]],[4,R[947]],[4,R[948]],[4,R[949]],[3,R[950]],[8,R[951]],[4,R[952]],[3,R[953]],[8,R[954]],[8,R[872]],[3,R[955]],[3,R[956]],[3,R[957]],[4,"Secret"],[4,"KeyType"],[3,"Keystore"],[3,"LogRule"],[3,"LogRules"],[3,R[958]],[3,R[959]],[3,R[960]],[3,R[961]],[3,R[962]],[3,R[963]],[3,R[964]]]};
searchIndex["holochain_conductor_wasm"]={"doc":E,"i":[[5,"fast_foo","holochain_conductor_wasm","There isn't really any reason to export this but we need…",N,[[["str"]],[[R[0]],["jsvalue"],[R[6],[R[0],"jsvalue"]]]]]],"p":[]};
searchIndex["holochain_core"]={"doc":"The library implementing the holochain pattern of…","i":[[0,"action",R[591],E,N,N],[3,R[781],R[706],"Wrapper for actions that provides a unique ID The unique…",N,N],[3,R[777],E,"The unique key that represents a GetLinks request, used to…",N,N],[12,"base_address",E,"The address of the Link base",0,N],[12,R[47],E,"The link type",0,N],[12,"tag",E,"The link tag, None means get all the tags for a given type",0,N],[12,"id",E,R[585],0,N],[3,R[778],E,"The unique key that represents a Get request, used to…",N,N],[12,R[12],E,"The address of the entry to get",1,N],[12,"id",E,R[585],1,N],[3,R[779],E,"Everything the network module needs to know in order to…",N,N],[12,R[12],E,"The address of the node to send a message to",2,N],[12,"message",E,"The message itself",2,N],[12,"msg_id",E,"A unique message ID that is used to identify the response…",2,N],[12,"is_response",E,"Should be true if we are responding to a previous message…",2,N],[3,R[780],E,"Everything the network needs to initialize",N,N],[12,R[612],E,"P2pConfig that gets passed to P2pNetwork determines how to…",3,N],[12,R[185],E,"DNA address is needed so the network module knows which…",3,N],[12,R[548],E,"The network module needs to know who we are. This is this…",3,N],[12,"handler",E,"This is a closure of the code that gets called by the…",3,N],[4,"Action",E,"All Actions for the Holochain Instance Store, according to…",N,N],[13,"Commit",E,"Writes an entry to the source chain. Does not validate,…",4,N],[13,"Hold",E,"Adds an entry to the local DHT shard. Does not validate,…",4,N],[13,"AddLink",E,"Adds a link to the local DHT shard's meta/EAV storage Does…",4,N],[13,R[17],E,E,4,N],[13,R[586],E,E,4,N],[13,"InitNetwork",E,"Create a network proxy instance from the given…",4,N],[13,"ShutdownNetwork",E,"Shut down network by sending JsonProtocoll::UntrackDna,…",4,N],[13,"Publish",E,"Makes the network PUT the given entry to the DHT.…",4,N],[13,R[639],E,"Get an Entry on the network by address",4,N],[13,R[629],E,"Lets the network module respond to a Get request.…",4,N],[13,R[630],E,"Lets the network module respond to a FETCH request.…",4,N],[13,"HandleGetResult",E,"We got a response for our get request which needs to be…",4,N],[13,R[587],E,E,4,N],[13,R[588],E,E,4,N],[13,"GetEntryTimeout",E,E,4,N],[13,R[597],E,"get links from entry address and link_type name Last…",4,N],[13,"GetLinksTimeout",E,E,4,N],[13,R[631],E,E,4,N],[13,"HandleGetLinksResult",E,E,4,N],[13,"SendDirectMessage",E,"Makes the network module send a direct (node-to-node)…",4,N],[13,"SendDirectMessageTimeout",E,"Makes the direct message connection with the given ID…",4,N],[13,"ResolveDirectConnection",E,"Makes the network module forget about the direct message…",4,N],[13,"GetValidationPackage",E,"Makes the network module DM the source of the given entry…",4,N],[13,"HandleGetValidationPackage",E,R[589],4,N],[13,"HandleCustomSendResponse",E,R[589],4,N],[13,"RespondAuthoringList",E,R[590],4,N],[13,"RespondGossipList",E,R[590],4,N],[13,"InitializeChain",E,"initialize a chain from Dna not the same as genesis may…",4,N],[13,"ReturnInitializationResult",E,"return the result of an InitializeChain action the result…",4,N],[13,R[607],E,"Gets dispatched when a zome function call starts. There is…",4,N],[13,R[609],E,"return the result of a zome WASM function call",4,N],[13,"ReturnValidationResult",E,"A validation result is returned from a local callback…",4,N],[13,"ReturnValidationPackage",E,"A validation package was created locally and is reported…",4,N],[13,R[606],E,"An entry could not be validated yet because dependencies…",4,N],[13,R[608],E,"Clear an entry from the pending validation list",4,N],[13,"Ping",E,"No-op, used to check if an action channel is still open",4,N],[6,"AgentReduceFn",E,"function signature for action handler functions",N,N],[6,"NetworkReduceFn",E,E,N,N],[6,"NucleusReduceFn",E,E,N,N],[6,"ReduceFn",E,E,N,N],[11,"new",E,"constructor from &Action internal snowflake ID is…",5,[[["action"]],["self"]]],[11,"action",E,"read only access to action",5,[[["self"]],["action"]]],[11,"id",E,"read only access to id",5,[[["self"]],[R[693]]]],[0,"agent",R[591],E,N,N],[5,"find_chain_header",R[592],E,N,[[["entry"],[R[599]]],[[R[9]],[R[13],[R[9]]]]]],[0,R[643],E,"Agent is the module that handles the user’s identity and…",N,N],[0,"commit","holochain_core::agent::actions",E,N,N],[3,R[826],R[707],"CommitFuture resolves to ActionResponse Tracks the state…",N,N],[5,R[373],E,"Commit Action Creator This is the high-level commit…",N,[[["arc"],[R[13],[R[12]]],["entry"],[R[12]]]]],[0,R[604],R[592],E,N,N],[3,R[563],R[708],E,N,N],[3,R[782],E,E,N,N],[12,"start",E,E,6,N],[12,"limit",E,E,6,N],[12,R[195],E,E,6,N],[3,R[784],E,"Access each Entry",N,N],[3,R[785],E,"Quickly access each Entry of a single known EntryType",N,N],[4,R[783],E,E,N,N],[13,R[852],E,E,7,N],[13,"Headers",E,E,7,N],[11,"new",E,E,8,[[["rwlock",[R[593]]],["arc",["rwlock"]]],["self"]]],[11,"content_storage",E,E,8,[[["self"]],[["rwlock",[R[593]]],["arc",["rwlock"]]]]],[11,"iter",E,E,8,[[["self"],[R[13]]],[R[595]]]],[11,"iter_type",E,"Scans the local chain for the first Entry of EntryType,…",8,[[["self"],[R[13]],[R[11]]],[R[596]]]],[11,"query",E,E,8,[[["self"],[R[768]],[R[13]]],[[R[112]],[R[6],[R[594],R[112]]],[R[594]]]]],[11,"new",E,E,9,[[[R[9]],["rwlock",[R[593]]],["arc",["rwlock"]],[R[13],[R[9]]]],[R[595]]]],[11,"new",E,E,10,[[[R[9]],["rwlock",[R[593]]],["arc",["rwlock"]],[R[13],[R[9]]]],[R[596]]]],[0,"state",R[592],E,N,N],[3,R[786],R[712],"The state-slice for the Agent. Holds the agent's source…",N,N],[3,R[787],E,E,N,N],[4,R[628],E,"the agent's response to an action stored alongside the…",N,N],[13,"Commit",E,E,11,N],[13,"FetchEntry",E,E,11,N],[13,R[597],E,E,11,N],[13,R[598],E,E,11,N],[5,"create_new_chain_header",E,E,N,[[[R[13]],["vec"],["entry"],[R[600]],[R[599]]],[[R[9]],[R[6],[R[9],R[21]]],[R[21]]]]],[5,"reduce",E,"Reduce Agent's state according to provided Action",N,[[["arc",[R[600]]],[R[602]],[R[600]],["state"]],[["arc",[R[600]]],[R[600]]]]],[7,"AGENT_SNAPSHOT_ADDRESS",E,E,N,N],[11,"new",E,"builds a new, empty AgentState",12,[[[R[12]],[R[601]]],[R[600]]]],[11,"new_with_top_chain_header",E,E,12,[[[R[601]],[R[9]],[R[13],[R[9]]],[R[12]]],[R[600]]]],[11,R[643],E,"getter for a copy of self.actions uniquely maps action…",12,[[["self"]],[[R[602]],[R[603]],[R[544],[R[602],R[603]]]]]],[11,R[604],E,E,12,[[["self"]],[R[601]]]],[11,R[605],E,E,12,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"iter_chain",E,E,12,[[["self"]],[R[595]]]],[11,"get_agent_address",E,E,12,[[["self"]],[[R[12]],[R[41],[R[12]]]]]],[11,"get_agent",E,E,12,[[["self"]],[[R[41],[R[40]]],[R[40]]]]],[11,"get_most_recent_header_for_entry",E,E,12,[[["self"],["entry"]],[[R[9]],[R[13],[R[9]]]]]],[11,"new",E,E,13,[[[R[9]],[R[13],[R[9]]]],[R[696]]]],[11,"from_json_str",E,E,13,[[["str"]],[R[6]]]],[11,R[605],E,E,13,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[0,R[965],R[591],E,N,N],[3,R[790],R[713],E,N,N],[3,R[791],E,E,N,N],[4,R[788],E,E,N,N],[13,"Publish",E,E,14,N],[13,R[606],E,E,14,N],[13,R[607],E,E,14,N],[13,"Hold",E,E,14,N],[13,R[587],E,E,14,N],[13,R[588],E,E,14,N],[13,"AddLink",E,E,14,N],[13,R[586],E,E,14,N],[13,R[608],E,E,14,N],[13,R[609],E,E,14,N],[4,R[789],E,E,N,N],[13,"Source",E,E,15,N],[13,"Validators",E,E,15,N],[11,"new",E,E,16,[[["arc",[R[620]]],[R[620]]],["self"]]],[11,"new_terminal",E,E,17,[[[R[610]]],["self"]]],[11,"new_pending",E,E,17,[[[R[769]],["vec",[R[610]]],[R[610]]],["self"]]],[11,"process_action",E,E,16,[[["self"],["action"]],[[R[611]],[R[13],[R[611]]]]]],[0,R[620],R[591],E,N,N],[3,"Context",R[714],"Context holds the components that parts of a Holochain…",N,N],[12,R[548],E,E,18,N],[12,"logger",E,E,18,N],[12,R[613],E,E,18,N],[12,R[617],E,E,18,N],[12,R[618],E,E,18,N],[12,"chain_storage",E,E,18,N],[12,"dht_storage",E,E,18,N],[12,"eav_storage",E,E,18,N],[12,R[612],E,E,18,N],[12,R[695],E,E,18,N],[5,"get_dna_and_agent",E,E,N,[[["arc"]]]],[5,"test_memory_network_config",E,"Create an in-memory network config with the provided name,…",N,[[["str"],[R[13],["str"]]],[R[499]]]],[11,"new",E,E,18,[[["arc",["mutex"]],["mutex",[R[613]]],[R[13],["arc"]],["arc",["rwlock"]],["arc",["rwlock"]],[R[499]],["arc",["mutex"]],[R[614]],["rwlock",[R[593]]],["arc",["rwlock"]],[R[13],[R[614]]],["mutex",["logger"]],["rwlock",[R[615]]],[R[40]]],["self"]]],[11,"new_with_channels",E,E,18,[[["sender",[R[627]]],["arc",["mutex"]],["mutex",[R[613]]],["arc",["rwlock"]],[R[499]],["mutex",["logger"]],["rwlock",[R[615]]],[R[40]],["sender",[R[602]]],["arc",["mutex"]],["rwlock",[R[593]]],["arc",["rwlock"]],[R[13],["sender"]],["sender",["signal"]],[R[13],["sender"]],[R[13],["sender"]]],[[R[6],[R[620],R[21]]],[R[21]],[R[620]]]]],[11,"log",E,E,18,[[["self"],["into",[R[0]]],[R[0]]]]],[11,"set_state",E,E,18,[[["self"],["rwlock",[R[599]]],["arc",["rwlock"]]]]],[11,"state",E,E,18,[[["self"]],[[R[616],[R[599]]],[R[13],[R[616]]]]]],[11,"get_dna",E,E,18,[[["self"]],[[R[13],["dna"]],["dna"]]]],[11,"get_wasm",E,E,18,[[["self"],["str"]],[[R[61]],[R[13],[R[61]]]]]],[11,R[617],E,E,18,[[["self"]],["sender"]]],[11,"is_action_channel_open",E,E,18,[[["self"]],["bool"]]],[11,"action_channel_error",E,E,18,[[["self"],["str"]],[[R[13],[R[21]]],[R[21]]]]],[11,"signal_tx",E,E,18,[[["self"]],[[R[13],["sender"]],["sender"]]]],[11,R[618],E,E,18,[[["self"]],["sender"]]],[11,"instance_still_alive",E,E,18,[[["self"]],["bool"]]],[11,"create_observer",E,"This creates an observer for the instance's redux loop and…",18,[[["self"]],[R[626]]]],[11,"block_on",E,"Custom future executor that enables nested futures and…",18,[[["self"],["future"]]]],[11,"get_public_token",E,"returns the public capability token (if any)",18,[[["self"]],[[R[12]],[R[21]],[R[6],[R[12],R[21]]]]]],[0,"dht",R[591],"DHT is the module that handles the agent's local shard of…",N,N],[0,R[643],R[624],E,N,N],[0,"add_link",R[619],E,N,N],[3,R[827],R[715],E,N,N],[5,"add_link",E,"AddLink Action Creator This action creator dispatches an…",N,[[[R[129]],["arc"]],["addlinkfuture"]]],[0,"hold",R[619],E,N,N],[3,R[828],R[716],E,N,N],[5,R[550],E,E,N,[[["arc",[R[620]]],[R[620]],[R[637]]]]],[0,R[346],R[619],E,N,N],[3,R[829],R[718],R[623],N,N],[5,R[346],E,"Remove Entry Action Creator",N,[[[R[12]],["arc"]],["removeentryfuture"]]],[0,R[621],R[619],E,N,N],[3,R[830],R[719],E,N,N],[5,R[621],E,"RemoveLink Action Creator This action creator dispatches…",N,[[["entry"],["arc"]],["removelinkfuture"]]],[0,R[622],R[619],E,N,N],[3,R[831],R[720],R[623],N,N],[5,R[622],E,"Update Entry Action Creator",N,[[[R[12]],["arc"]],["updateentryfuture"]]],[0,"dht_reducers",R[624],"all DHT reducers",N,N],[5,"reduce","holochain_core::dht::dht_reducers","DHT state-slice Reduce entry point. Note: Can't block when…",N,[[[R[602]],[R[625]],["arc",[R[625]]]],[[R[625]],["arc",[R[625]]]]]],[0,"dht_store",R[624],E,N,N],[3,"DhtStore",R[721],"The state-slice for the DHT. Holds the CAS and EAVi that's…",N,N],[3,R[792],E,E,N,N],[12,"holding_list",E,E,19,N],[5,"create_get_links_eavi_query",E,E,N,[[[R[12]],[R[0]]],[[R[109]],[R[21]],[R[6],[R[109],R[21]]]]]],[7,"DHT_STORE_SNAPSHOT_ADDRESS",E,E,N,N],[11,"new",E,E,20,[[["rwlock",[R[593]]],["arc",["rwlock"]],["arc",["rwlock"]],["rwlock",[R[615]]]],["self"]]],[11,"new_with_holding_list",E,E,20,[[["rwlock",[R[593]]],["arc",["rwlock"]],[R[12]],["arc",["rwlock"]],["rwlock",[R[615]]],["vec",[R[12]]]],["self"]]],[11,R[376],E,"This algorithmn works by querying the EAVI Query for…",20,[[["self"],[R[12]],[R[0]]],[[R[22]],[R[21]],[R[6],[R[22],R[21]]]]]],[11,"get_all_metas",E,E,20,[[["self"],[R[12]]],[[R[6],[R[22],R[21]]],[R[22],[R[15]]],[R[21]]]]],[11,R[697],E,R[698],20,[[["self"],[R[12]]],[["vec",[R[9]]],[R[21]],[R[6],["vec",R[21]]]]]],[11,"add_header_for_entry",E,"Add an entry and header to the CAS and EAV, respectively",20,[[["self"],["entry"],[R[9]]],[[R[6],[R[21]]],[R[21]]]]],[11,"mark_entry_as_held",E,E,20,[[["self"],["entry"]]]],[11,"get_all_held_entry_addresses",E,E,20,[[["self"]],["vec"]]],[11,R[643],E,E,20,[[["self"]],[R[544]]]],[0,"entry",R[591],"This module extends Entry and EntryType with the…",N,N],[8,R[793],"holochain_core::entry",E,N,N],[10,R[845],E,E,21,[[["self"],[R[620]]],["bool"]]],[0,R[771],R[591],E,N,N],[3,"Instance",R[722],"Object representing a Holochain instance, i.e. a running…",N,N],[3,"Observer",E,"State Observer that executes a closure everytime the State…",N,N],[12,"ticker",E,E,22,N],[5,"dispatch_action_and_wait",E,"Send Action to Instance's Event Queue and block until it…",N,[[["arc",[R[620]]],[R[602]],[R[620]]]]],[5,"dispatch_action",E,"Send Action to the Event Queue",N,[[["sender"],[R[602]]]]],[7,"DISPATCH_WITHOUT_CHANNELS",E,E,N,N],[17,"RECV_DEFAULT_TIMEOUT_MS",E,E,N,N],[11,R[331],E,"This is calling inner_setup and running the initialization…",23,[[["self"],["dna"],[R[620]],[R[13],["dna"]],["arc",[R[620]]]],[["arc",[R[620]]],[R[41],["arc"]]]]],[11,R[618],E,E,23,[[["self"]],["sender"]]],[11,"dispatch",E,"Stack an Action in the Event Queue",23,[[["self"],[R[602]]]]],[11,"initialize_context",E,E,23,[[["self"],["arc",[R[620]]],[R[620]]],[["arc",[R[620]]],[R[620]]]]],[11,"start_action_loop",E,"Start the Event Loop on a separate thread",23,[[["self"],[R[602]],[R[626],[R[602]]],[R[620]],["arc",[R[620]]],[R[626],[R[627]]],[R[627]]]]],[11,"stop_action_loop",E,E,23,[[["self"]]]],[11,"new",E,"Creates a new Instance with no channels set up.",23,[[["arc",[R[620]]],[R[620]]],["self"]]],[11,"from_state",E,E,23,[[["arc",[R[620]]],[R[620]],["state"]],["self"]]],[11,"state",E,E,23,[[["self"]],[[R[599]],[R[616],[R[599]]]]]],[11,"save",E,E,23,[[["self"]],[R[41]]]],[11,"shutdown_network",E,E,23,[[["self"]]]],[0,"logger",R[591],"This logger is the logger that's attached to each…",N,N],[3,R[832],R[723],E,N,N],[3,R[794],E,E,N,N],[12,"log",E,E,24,N],[3,R[795],E,E,N,N],[5,"test_logger",E,"create a test logger",N,[[],[["mutex",[R[772]]],["arc",["mutex"]]]]],[5,"default_handler",E,E,N,[[[R[0]]]]],[6,"Receiver",E,E,N,N],[6,"Sender",E,E,N,N],[8,"Logger",E,"trait that defines the logging functionality that…",N,N],[10,"log",E,E,25,[[["self"],[R[0]]]]],[11,"dump",E,E,25,[[["self"]],[R[0]]]],[11,"new",E,E,26,[[["sender"],[R[0]]],[R[773]]]],[11,"setup",E,E,26,[[]]],[0,"network",R[591],E,N,N],[0,R[643],R[636],E,N,N],[4,R[628],R[633],E,N,N],[13,"Publish",E,E,27,N],[13,R[629],E,E,27,N],[13,R[630],E,E,27,N],[13,R[631],E,E,27,N],[0,R[632],E,E,N,N],[3,R[833],R[724],"SendResponseFuture waits for a result to show up in…",N,N],[5,R[632],E,"SendDirectMessage Action Creator for custom (=app)…",N,[[[R[190]],[R[12]],[R[704]],["arc",[R[620]]],[R[620]]]]],[0,R[375],R[633],E,N,N],[3,R[834],R[725],"GetEntryFuture resolves to a HcResult. Tracks the state of…",N,N],[5,R[375],E,"FetchEntry Action Creator This is the network version of…",N,[[[R[620]],["arc",[R[620]]],[R[12]],[R[190]]]]],[0,R[376],R[633],E,N,N],[3,R[835],R[726],"GetLinksFuture resolves to a HcResult<Vec>. Tracks the…",N,N],[5,R[376],E,"GetLinks Action Creator This is the network version of…",N,[[[R[620]],["arc",[R[620]]],[R[12]],[R[190]],[R[0]]]]],[0,R[634],R[633],E,N,N],[3,R[836],R[727],"GetValidationPackageFuture resolves to an Option which…",N,N],[5,R[634],E,"GetValidationPackage Action Creator This triggers the…",N,[[["arc"],[R[9]]]]],[0,R[635],R[633],E,N,N],[3,R[837],R[728],E,N,N],[5,R[635],E,"Creates a network proxy object and stores DNA and agent…",N,[[["arc"]]]],[0,"publish",R[633],E,N,N],[3,R[838],R[729],"PublishFuture resolves to ActionResponse Tracks the state…",N,N],[5,"publish",E,"Publish Action Creator This is the high-level publish…",N,[[[R[12]],["arc"]]]],[0,R[642],R[633],E,N,N],[3,R[839],R[730],E,N,N],[5,R[642],E,"Shutdown the network This tells the network to untrack…",N,[[[R[602]],["rwlock",[R[599]]],["sender",[R[602]]],["arc",["rwlock"]]]]],[0,"direct_message",R[636],E,N,N],[3,R[796],R[731],"This is direct message that got created by the zome code…",N,N],[12,"zome",E,"We have to track which zome sent the message so we can…",28,N],[12,R[199],E,"The payload that the zome sends. This is a result to…",28,N],[4,R[797],E,"These are the different kinds of (low-level, i.e. non-app)…",N,N],[13,"Custom",E,"A custom direct message is something that gets triggered…",29,N],[13,"RequestValidationPackage",E,"This message is used to ask another node (which needs to…",29,N],[13,R[169],E,"With this message an author is responding to a…",29,N],[0,R[847],R[636],E,N,N],[4,R[798],R[732],E,N,N],[13,"Content",E,E,30,N],[13,"Header",E,E,30,N],[13,R[75],E,E,30,N],[13,R[24],E,E,30,N],[13,"Update",E,E,30,N],[13,R[34],E,E,30,N],[11,R[846],E,E,30,[[["self"]],[R[0]]]],[11,"header",E,E,30,[[["self"]],[R[9]]]],[0,R[694],R[636],E,N,N],[3,R[799],R[733],E,N,N],[12,"entry",E,E,31,N],[12,"header",E,E,31,N],[5,"fetch_entry_with_header",E,E,N,[[[R[12]],["state"]],[[R[6],[R[637],R[21]]],[R[21]],[R[637]]]]],[11,"new",E,E,31,[[[R[9]],["entry"]],[R[637]]]],[0,"handler",R[636],E,N,N],[5,"create_handler",R[638],"Creates the network handler. The returned closure is…",N,[[["arc"],[R[0]]],[R[441]]]],[0,"fetch",E,E,N,N],[5,"handle_fetch_entry","holochain_core::network::handler::fetch","The network has requested a DHT entry from us. Lets try to…",N,[[["arc",[R[620]]],[R[620]],[R[491]]]]],[0,"lists",R[638],E,N,N],[5,"handle_get_authoring_list","holochain_core::network::handler::lists",E,N,[[[R[493]],["arc",[R[620]]],[R[620]]]]],[5,"handle_get_gossip_list",E,E,N,[[[R[493]],["arc",[R[620]]],[R[620]]]]],[0,"query",R[638],E,N,N],[5,"handle_query_entry_data","holochain_core::network::handler::query","The network has sent us a query for entry data, so we need…",N,[[["arc",[R[620]]],[R[487]],[R[620]]]]],[5,"handle_query_entry_result",E,"The network comes back with a result to our previous query…",N,[[["arc",[R[620]]],[R[488]],[R[620]]]]],[0,"send",R[638],E,N,N],[5,"handle_send_message","holochain_core::network::handler::send","We got a ProtocolWrapper::SendMessage, this means somebody…",N,[[["arc",[R[620]]],[R[484]],[R[620]]]]],[5,"handle_send_message_result",E,"We got a JsonProtocol::HandleSendMessageResult. This means…",N,[[["arc",[R[620]]],[R[484]],[R[620]]]]],[0,"store",R[638],E,N,N],[5,"handle_store","holochain_core::network::handler::store","The network requests us to store (i.e. hold) the given…",N,[[["arc",[R[620]]],[R[620]],[R[490]]]]],[0,"query",R[636],E,N,N],[4,R[800],R[734],E,N,N],[13,R[639],E,E,32,N],[13,R[597],E,E,32,N],[4,R[801],E,E,N,N],[13,"Entry",E,E,33,N],[13,"Links",E,E,33,N],[0,"reducers",R[636],E,N,N],[5,"reduce",R[641],E,N,[[[R[602]],[R[640]],["arc",[R[640]]],["state"]],[[R[640]],["arc",[R[640]]]]]],[5,"send",E,"Sends the given JsonProtocol over the network using the…",N,[[[R[472]],[R[640]]],[[R[6],[R[21]]],[R[21]]]]],[5,"send_message",E,"Sends the given DirectMessage to the node given by…",N,[[[R[12]],[R[756]],[R[640]]],[[R[6],[R[21]]],[R[21]]]]],[0,R[375],E,E,N,N],[5,"reduce_get_entry","holochain_core::network::reducers::get_entry",E,N,[[["state"],[R[602]],[R[640]]]]],[5,"reduce_get_entry_timeout",E,E,N,[[["state"],[R[602]],[R[640]]]]],[0,R[376],R[641],E,N,N],[5,"reduce_get_links","holochain_core::network::reducers::get_links",E,N,[[["state"],[R[602]],[R[640]]]]],[5,"reduce_get_links_timeout",E,E,N,[[["state"],[R[602]],[R[640]]]]],[0,R[634],R[641],E,N,N],[5,"reduce_get_validation_package","holochain_core::network::reducers::get_validation_package",E,N,[[["state"],[R[602]],[R[640]]]]],[0,"handle_custom_send_response",R[641],E,N,N],[5,"reduce_handle_custom_send_response","holochain_core::network::reducers::handle_custom_send_response",E,N,[[["state"],[R[602]],[R[640]]]]],[0,"handle_get_links_result",R[641],E,N,N],[5,"reduce_handle_get_links_result","holochain_core::network::reducers::handle_get_links_result",E,N,[[["state"],[R[602]],[R[640]]]]],[0,"handle_get_result",R[641],E,N,N],[5,"reduce_handle_get_result","holochain_core::network::reducers::handle_get_result",E,N,[[["state"],[R[602]],[R[640]]]]],[0,"handle_get_validation_package",R[641],E,N,N],[5,"reduce_handle_get_validation_package","holochain_core::network::reducers::handle_get_validation_package",E,N,[[["state"],[R[602]],[R[640]]]]],[0,"init",R[641],E,N,N],[5,"reduce_init","holochain_core::network::reducers::init",E,N,[[["state"],[R[602]],[R[640]]]]],[0,"publish",R[641],E,N,N],[5,"reduce_publish","holochain_core::network::reducers::publish",E,N,[[["state"],[R[602]],[R[640]]]]],[0,"resolve_direct_connection",R[641],E,N,N],[5,"reduce_resolve_direct_connection","holochain_core::network::reducers::resolve_direct_connection",E,N,[[["state"],[R[602]],[R[640]]]]],[0,"respond_authoring_list",R[641],E,N,N],[5,"reduce_respond_authoring_list","holochain_core::network::reducers::respond_authoring_list",E,N,[[["state"],[R[602]],[R[640]]]]],[0,"respond_fetch",R[641],E,N,N],[5,"reduce_respond_fetch_data","holochain_core::network::reducers::respond_fetch",E,N,[[["state"],[R[602]],[R[640]]]]],[0,"respond_get",R[641],E,N,N],[5,"reduce_respond_get","holochain_core::network::reducers::respond_get",E,N,[[["state"],[R[602]],[R[640]]]]],[0,"respond_get_links",R[641],E,N,N],[5,"reduce_respond_get_links","holochain_core::network::reducers::respond_get_links",E,N,[[["state"],[R[602]],[R[640]]]]],[0,"respond_gossip_list",R[641],E,N,N],[5,"reduce_respond_gossip_list","holochain_core::network::reducers::respond_gossip_list",E,N,[[["state"],[R[602]],[R[640]]]]],[0,R[849],R[641],E,N,N],[5,"reduce_send_direct_message","holochain_core::network::reducers::send_direct_message",E,N,[[["state"],[R[602]],[R[640]]]]],[5,"reduce_send_direct_message_timeout",E,E,N,[[["state"],[R[602]],[R[640]]]]],[0,R[642],R[641],E,N,N],[5,"reduce_shutdown","holochain_core::network::reducers::shutdown",E,N,[[["state"],[R[602]],[R[640]]]]],[0,"state",R[636],E,N,N],[3,R[802],R[735],E,N,N],[12,R[643],E,"every action and the result of that action",34,N],[12,"network",E,E,34,N],[12,R[185],E,E,34,N],[12,R[548],E,E,34,N],[12,"get_entry_with_meta_results",E,"Here we store the results of GET entry processes. None…",34,N],[12,"get_links_results",E,"Here we store the results of GET links processes. The key…",34,N],[12,"get_validation_package_results",E,"Here we store the results of get validation package…",34,N],[12,"direct_message_connections",E,"This stores every open (= waiting for response)…",34,N],[12,"custom_direct_message_replys",E,E,34,N],[11,"new",E,E,34,[[],["self"]]],[11,R[643],E,E,34,[[["self"]],[[R[602]],[R[544],[R[602],R[603]]],[R[603]]]]],[11,"initialized",E,E,34,[[["self"]],[[R[6],[R[21]]],[R[21]]]]],[0,"nucleus",R[591],E,N,N],[3,R[803],R[654],"Struct holding data for requesting the execution of a Zome…",N,N],[12,R[644],E,E,35,N],[12,"cap",E,E,35,N],[12,"fn_name",E,E,35,N],[12,R[645],E,E,35,N],[3,R[804],E,"Struct holding data for requesting the execution of a…",N,N],[12,R[644],E,E,36,N],[12,"fn_name",E,E,36,N],[12,R[645],E,E,36,N],[0,R[643],E,"Nucleus is the module that handles DNA, including the…",N,N],[0,R[646],R[647],E,N,N],[5,R[646],"holochain_core::nucleus::actions::add_pending_validation",E,N,[[[R[637]],[R[620]],[R[12]],["arc",[R[620]]],[R[652]],["vec",[R[12]]]]]],[0,R[648],R[647],E,N,N],[3,R[840],R[736],"ValidationPackageFuture resolves to the ValidationPackage…",N,N],[5,R[648],E,E,N,[[[R[620]],["arc",[R[620]]],["entry"],["vec"]]]],[0,R[649],R[647],E,N,N],[3,R[805],R[737],E,N,N],[3,R[841],E,"CallResultFuture resolves to an Result<JsonString,…",N,N],[5,R[649],E,"Execution of zome calls This function is kicking off the…",N,[[[R[650]],["arc",[R[620]]],[R[620]]]]],[5,"validate_call",E,"validates that a given zome function call specifies a…",N,[[["arc",[R[620]]],[R[650]],[R[620]]],[[R[6],[R[21]]],[R[21]]]]],[5,"check_capability",E,"checks to see if a given function call is allowable…",N,[[["arc",[R[620]]],[R[650]],[R[620]]],["bool"]]],[5,"encode_call_data_for_signing",E,E,N,[[[R[26]],["str"],["into",[R[26]]]],[R[0]]]],[5,"verify_call_sig",E,E,N,[[[R[26]],[R[10]],["into",[R[26]]],["str"]],["bool"]]],[5,"make_cap_request_for_call",E,"creates a capability request for a zome call by signing…",N,[[[R[26]],[R[620]],["arc",[R[620]]],[R[12]],["str"],["into",[R[26]]]],[R[123]]]],[5,"verify_grant",E,"verifies that this grant is valid for a given requester…",N,[[[R[620]],["arc",[R[620]]],[R[116]],[R[650]]],["bool"]]],[11,"new",E,E,37,[[[R[650]],[R[21]],[R[26]],[R[6],[R[26],R[21]]]],["self"]]],[11,"call",E,"read only access to call",37,[[["self"]],[R[650]]]],[11,R[6],E,"read only access to result",37,[[["self"]],[[R[21]],[R[26]],[R[6],[R[26],R[21]]]]]],[0,R[375],R[647],E,N,N],[5,"get_entry_from_agent_chain","holochain_core::nucleus::actions::get_entry",E,N,[[[R[12]],["arc"]],[[R[6],[R[13],R[21]]],[R[21]],[R[13],["entry"]]]]],[5,"get_entry_with_meta",E,E,N,[[[R[12]],["arc"]],[[R[21]],[R[13],[R[118]]],[R[6],[R[13],R[21]]]]]],[0,R[331],R[647],E,N,N],[3,R[806],R[738],"Initialization is the value returned by successful…",N,N],[3,R[842],E,"InitializationFuture resolves to an Ok(NucleusStatus) or…",N,N],[5,"initialize_chain",E,"Initialize Chain, Action Creator This is the high-level…",N,[[["dna"],["arc"]]]],[11,"new",E,E,38,[[],[R[691]]]],[11,R[850],E,E,38,[[["self"]],[[R[12]],[R[13],[R[12]]]]]],[0,R[651],R[647],E,N,N],[5,R[651],"holochain_core::nucleus::actions::remove_pending_validation",E,N,[[[R[12]],[R[652]],["arc"]]]],[0,R[653],R[647],E,N,N],[3,R[843],R[739],"ValidationFuture resolves to an Ok(ActionWrapper) or an…",N,N],[5,R[653],E,"Validation callback action creator. Spawns a thread in…",N,[[[R[12]],[R[687]],["arc"]]]],[0,"reducers",R[654],E,N,N],[5,"reduce",R[656],"Reduce state of Nucleus according to action. Note: Can't…",N,[[["arc",[R[655]]],[R[602]],["state"],[R[655]]],[["arc",[R[655]]],[R[655]]]]],[0,"init_application",E,E,N,N],[5,"reduce_initialize_chain","holochain_core::nucleus::reducers::init_application","Reduce InitializeChain Action Switch status to failed if…",N,[[["state"],[R[602]],[R[655]]]]],[0,"return_initialization_result",R[656],E,N,N],[5,"reduce_return_initialization_result","holochain_core::nucleus::reducers::return_initialization_result","Reduce ReturnInitializationResult Action On initialization…",N,[[["state"],[R[602]],[R[655]]]]],[0,"return_validation_package",R[656],E,N,N],[5,"reduce_return_validation_package","holochain_core::nucleus::reducers::return_validation_package",E,N,[[["state"],[R[602]],[R[655]]]]],[0,"return_validation_result",R[656],E,N,N],[5,"reduce_return_validation_result","holochain_core::nucleus::reducers::return_validation_result",E,N,[[["state"],[R[602]],[R[655]]]]],[0,"return_zome_function_result",R[656],E,N,N],[5,"reduce_return_zome_function_result","holochain_core::nucleus::reducers::return_zome_function_result","Reduce ReturnZomeFunctionResult Action. Simply drops…",N,[[["state"],[R[602]],[R[655]]]]],[0,"ribosome",R[654],"The virtual machine that runs DNA written in WASM",N,N],[5,"run_dna",R[678],"Executes an exposed zome function in a wasm binary.…",N,[[[R[774]],[R[13],["vec"]],["vec",["u8"]]],["zomefnresult"]]],[0,"api",E,"Module for ZomeApiFunctions ZomeApiFunctions are the…",N,N],[4,R[807],R[671],"Enumeration of all the Zome Functions known and usable in…",N,N],[13,R[679],E,R[680],39,N],[13,"Abort",E,"Abort is a way to receive useful debug info from…",39,N],[13,"Debug",E,"send debug information to the log debug(s: String)",39,N],[13,"CommitAppEntry",E,"Commit an app entry to source chain…",39,N],[13,"GetAppEntry",E,"Get an app entry from source chain by key (header hash)…",39,N],[13,R[587],E,E,39,N],[13,R[588],E,E,39,N],[13,R[657],E,"Init Zome API Globals hc_init_globals() -> InitGlobalsOutput",39,N],[13,"Call",E,"Call a zome function in a different zome or dna via a…",39,N],[13,R[598],E,"Create a link entry",39,N],[13,R[597],E,"Retrieve links from the DHT",39,N],[13,"Query",E,"Query the local chain for entries",39,N],[13,R[658],E,"Pass an entry to retrieve its address the address…",39,N],[13,"Send",E,"Send a message directly to another node",39,N],[13,"Sleep",E,"Allow a specified amount of time to pass",39,N],[13,R[586],E,"Commit link deletion entry",39,N],[13,"Crypto",E,E,39,N],[13,R[659],E,"Sign a block of data with a one-time key that is then…",39,N],[13,R[660],E,"Verify that a block of data was signed by a given public key",39,N],[13,R[661],E,"Retrieve a list of identifiers of the secrets in the…",39,N],[13,R[662],E,"Create a new random seed Secret in the keystore",39,N],[13,R[663],E,"Derive a new seed from an existing seed in the keystore",39,N],[13,R[664],E,"Create a new key (signing or encrypting) as derived from…",39,N],[13,R[665],E,"Sign a block of data using a key in the keystore",39,N],[13,R[666],E,"Get the public key for a given secret",39,N],[13,R[667],E,R[669],39,N],[13,R[668],E,R[669],39,N],[13,R[670],E,"Send a DNA defined signal to UIs and other listeners",39,N],[0,"call",E,E,N,N],[5,"invoke_call","holochain_core::nucleus::ribosome::api::call","HcApiFuncIndex::CALL function code args: [0] encoded…",N,[[[R[672]],[R[673]]],[R[304]]]],[0,"commit",R[671],E,N,N],[5,"invoke_commit_app_entry","holochain_core::nucleus::ribosome::api::commit","ZomeApiFunction::CommitAppEntry function code args: [0]…",N,[[[R[672]],[R[673]]],[R[304]]]],[0,"debug",R[671],E,N,N],[5,"invoke_debug","holochain_core::nucleus::ribosome::api::debug","ZomeApiFunction::Debug function code args: [0] encoded…",N,[[[R[672]],[R[673]]],[R[304]]]],[0,R[374],R[671],E,N,N],[5,"invoke_emit_signal","holochain_core::nucleus::ribosome::api::emit_signal","ZomeApiFunction::EmitSignal function code args: [0]…",N,[[[R[672]],[R[673]]],[R[304]]]],[0,R[192],R[671],E,N,N],[5,"get_entry_type","holochain_core::nucleus::ribosome::api::entry_address",E,N,[[["dna"],["str"]],[[R[11]],[R[13],["runtimevalue"]],[R[6],[R[11],R[13]]]]]],[5,"invoke_entry_address",E,"ZomeApiFunction::entry_address function code args: [0]…",N,[[[R[672]],[R[673]]],[R[304]]]],[0,R[375],R[671],E,N,N],[5,"invoke_get_entry","holochain_core::nucleus::ribosome::api::get_entry","ZomeApiFunction::GetAppEntry function code args: [0]…",N,[[[R[672]],[R[673]]],[R[304]]]],[0,R[376],R[671],E,N,N],[5,"invoke_get_links","holochain_core::nucleus::ribosome::api::get_links",R[675],N,[[[R[672]],[R[673]]],[R[304]]]],[0,R[674],R[671],E,N,N],[5,"invoke_init_globals","holochain_core::nucleus::ribosome::api::init_globals","ZomeApiFunction::InitGlobals secret function code args:…",N,[[[R[672]],[R[673]]],[R[304]]]],[0,R[377],R[671],E,N,N],[5,"invoke_link_entries","holochain_core::nucleus::ribosome::api::link_entries","ZomeApiFunction::LinkEntries function code args: [0]…",N,[[[R[672]],[R[673]]],[R[304]]]],[0,R[186],R[671],E,N,N],[5,"invoke_commit_capability_grant","holochain_core::nucleus::ribosome::api::capabilities",E,N,[[[R[672]],[R[673]]],[R[304]]]],[5,"invoke_commit_capability_claim",E,E,N,[[[R[672]],[R[673]]],[R[304]]]],[0,"crypto",R[671],E,N,N],[5,"invoke_crypto","holochain_core::nucleus::ribosome::api::crypto","ZomeApiFunction::Sign function code args: [0] encoded…",N,[[[R[672]],[R[673]]],[R[304]]]],[0,R[875],R[671],E,N,N],[5,"invoke_keystore_list","holochain_core::nucleus::ribosome::api::keystore",E,N,[[[R[672]],[R[673]]],[R[304]]]],[5,"invoke_keystore_new_random",E,E,N,[[[R[672]],[R[673]]],[R[304]]]],[5,"invoke_keystore_derive_seed",E,E,N,[[[R[672]],[R[673]]],[R[304]]]],[5,"invoke_keystore_derive_key",E,E,N,[[[R[672]],[R[673]]],[R[304]]]],[5,"invoke_keystore_sign",E,E,N,[[[R[672]],[R[673]]],[R[304]]]],[5,"invoke_keystore_get_public_key",E,E,N,[[[R[672]],[R[673]]],[R[304]]]],[0,"query",R[671],E,N,N],[5,"invoke_query","holochain_core::nucleus::ribosome::api::query","ZomeApiFunction::query function code args: [0] encoded…",N,[[[R[672]],[R[673]]],[R[304]]]],[0,R[346],R[671],E,N,N],[5,"invoke_remove_entry","holochain_core::nucleus::ribosome::api::remove_entry","ZomeApiFunction::RemoveEntry function code args: [0]…",N,[[[R[672]],[R[673]]],[R[304]]]],[0,R[621],R[671],E,N,N],[5,"invoke_remove_link","holochain_core::nucleus::ribosome::api::remove_link",R[675],N,[[[R[672]],[R[673]]],[R[304]]]],[0,"send",R[671],E,N,N],[5,"invoke_send","holochain_core::nucleus::ribosome::api::send","ZomeApiFunction::Send function code args: [0] encoded…",N,[[[R[672]],[R[673]]],[R[304]]]],[0,"sign",R[671],E,N,N],[5,"invoke_sign_one_time","holochain_core::nucleus::ribosome::api::sign","ZomeApiFunction::SignOneTime function code args: [0]…",N,[[[R[672]],[R[673]]],[R[304]]]],[5,R[676],E,"creates a one-time private key and sign data returning the…",N,[[["vec",[R[0]]],[R[0]]],[[R[241]],[R[41],[R[241]]]]]],[0,"sleep",R[671],E,N,N],[5,"invoke_sleep","holochain_core::nucleus::ribosome::api::sleep","ZomeApiFunction::Sleep function code args: [0] encoded…",N,[[[R[672]],[R[673]]],[R[304]]]],[0,R[622],R[671],E,N,N],[5,"invoke_update_entry","holochain_core::nucleus::ribosome::api::update_entry","ZomeApiFunction::UpdateEntry function code args: [0]…",N,[[[R[672]],[R[673]]],[R[304]]]],[0,R[378],R[671],E,N,N],[5,"invoke_verify_signature","holochain_core::nucleus::ribosome::api::verify_signature","ZomeApiFunction::VerifySignature function code args: [0]…",N,[[[R[672]],[R[673]]],[R[304]]]],[6,R[677],R[671],E,N,N],[11,"as_fn",E,E,39,[[["self"]]]],[0,R[761],R[678],"Module for ZomeCallbacks ZomeCallbacks are functions in a…",N,N],[4,"Callback",R[683],"Enumeration of all Zome Callbacks known and used by…",N,N],[13,R[679],E,R[680],40,N],[13,"Genesis",E,"genesis() -> bool",40,N],[13,"Receive",E,"receive(from: Address, message: String) -> String",40,N],[4,R[808],E,E,N,N],[13,"Genesis",E,E,41,N],[13,"ValidateCommit",E,E,41,N],[13,"Receive",E,E,41,N],[4,R[809],E,E,N,N],[13,"Pass",E,E,42,N],[13,"Fail",E,E,42,N],[13,R[692],E,E,42,N],[13,R[171],E,E,42,N],[13,"ReceiveResult",E,E,42,N],[5,"call",E,E,N,[[[R[620]],["arc",[R[620]]],[R[681]],["str"],[R[761]]],[R[682]]]],[0,"genesis",E,E,N,N],[5,"genesis","holochain_core::nucleus::ribosome::callback::genesis",E,N,[[[R[620]],["arc",[R[620]]],[R[681]],["str"]],[R[682]]]],[0,"links_utils",R[683],E,N,N],[3,R[810],R[740],"This is a \"path\" in the DNA tree. That uniquely identifies…",N,N],[12,R[644],E,E,43,N],[12,"entry_type_name",E,E,43,N],[12,R[198],E,E,43,N],[12,R[47],E,E,43,N],[5,"get_link_entries",E,"Retrieves the base and target entries of the link and…",N,[[["link"],["arc"]],[[R[21]],[R[6],[R[21]]]]]],[5,"find_link_definition_by_type",E,"This function tries to find the link definition for a link…",N,[[["arc"],[R[0]]],[[R[21]],[R[684]],[R[6],[R[684],R[21]]]]]],[0,R[848],R[683],E,N,N],[5,R[848],"holochain_core::nucleus::ribosome::callback::receive",E,N,[[[R[620]],["arc",[R[620]]],[R[681]],["str"]],[R[682]]]],[0,"validation_package",R[683],E,N,N],[5,"get_validation_package_definition","holochain_core::nucleus::ribosome::callback::validation_package",E,N,[[["entry"],["arc",[R[620]]],[R[620]]],[[R[6],[R[682],R[21]]],[R[682]],[R[21]]]]],[11,"as_fn",R[683],E,40,[[["self"]]]],[0,"factories",R[678],E,N,N],[5,"wasm_module_factory","holochain_core::nucleus::ribosome::factories","Creates a WASM module, that is the executable program,…",N,[[["arc",["vec"]],["vec",["u8"]]],[[R[6],["module",R[21]]],[R[21]],["module"]]]],[5,"wasm_instance_factory",E,"Creates a runnable WASM module instance from a module…",N,[[["module"]],[[R[6],[R[685],R[21]]],[R[685]],[R[21]]]]],[0,"memory",R[678],E,N,N],[3,R[811],R[741],"Struct for managing a WASM Memory Instance as a single…",N,N],[11,"new",E,E,44,[[[R[685]]],["self"]]],[11,"allocate",E,"Allocate on stack without writing in it",44,[[["self"],["length"]],[R[203]]]],[11,"write",E,"Write data on top of stack",44,[[["self"]],[R[203]]]],[11,"read",E,"Read data somewhere in stack",44,[[["self"],[R[207]]],[["vec",["u8"]],["u8"]]]],[0,R[673],R[678],E,N,N],[3,R[812],R[742],E,N,N],[12,R[620],E,R[686],45,N],[12,"call",E,"The zome function call that initiated the Ribosome.",45,N],[3,R[813],E,E,N,N],[12,R[620],E,R[686],46,N],[12,"call",E,"The callback function call that initiated the Ribosome.",46,N],[3,"CallData",E,"Struct holding data of any call (callback or zome)",N,N],[12,R[620],E,E,47,N],[12,R[644],E,E,47,N],[12,"fn_name",E,E,47,N],[12,R[645],E,E,47,N],[3,"Runtime",E,"Object holding data to pass around to invoked Zome API…",N,N],[12,"memory_manager",E,"Memory state tracker between ribosome and wasm.",48,N],[12,"data",E,"data to be made available to the function at runtime",48,N],[4,R[814],E,E,N,N],[13,"ZomeCall",E,E,49,N],[13,"CallbackCall",E,E,49,N],[13,"DirectCall",E,E,49,N],[11,"new_zome_call",E,E,49,[[["arc",[R[620]]],[R[650]],[R[620]]],["self"]]],[11,"new_callback_call",E,E,49,[[["arc",[R[620]]],[R[687]],[R[620]]],["self"]]],[11,"fn_name",E,E,49,[[["self"]],[R[0]]]],[11,"zome_call_data",E,E,48,[[["self"]],[[R[6],[R[688],"trap"]],["trap"],[R[688]]]]],[11,"callback_call_data",E,E,48,[[["self"]],[[R[6],[R[689],"trap"]],[R[689]],["trap"]]]],[11,"call_data",E,E,48,[[["self"]],[["trap"],[R[6],[R[775],"trap"]],[R[775]]]]],[11,R[620],E,E,48,[[["self"]],[["arc",[R[620]]],["trap"],[R[6],["arc","trap"]]]]],[11,"load_json_string_from_args",E,"Load a JsonString stored in wasm memory. Input RuntimeArgs…",48,[[["self"],[R[672]]],[R[26]]]],[11,"store_as_json_string",E,"Store anything that implements Into in wasm memory. Note…",48,[[["self"],["into",[R[26]]],[R[26]]],[R[304]]]],[11,"store_result",E,E,48,[[["self"],[R[6],[R[21]]],[R[26]],[R[21]],["into",[R[26]]]],[R[304]]]],[8,"Defn",R[678],E,N,N],[10,"as_str",E,"return the canonical name of this function definition",50,[[["self"]],["str"]]],[10,R[749],E,"convert the canonical name of this function to an index",50,[[["str"]],["usize"]]],[10,R[750],E,"convert an index to the function definition",50,[[["usize"]],["self"]]],[0,"state",R[654],E,N,N],[3,R[818],R[743],E,N,N],[3,R[815],E,"The state-slice for the Nucleus. Holds the dynamic parts…",N,N],[12,"status",E,E,51,N],[12,R[690],E,E,51,N],[12,"dna",E,E,51,N],[12,"zome_calls",E,E,51,N],[12,"validation_results",E,E,51,N],[12,"validation_packages",E,E,51,N],[3,R[816],E,E,N,N],[12,"status",E,E,52,N],[12,R[690],E,E,52,N],[4,R[817],E,E,N,N],[13,"New",E,E,53,N],[13,"Initializing",E,E,53,N],[13,"Initialized",E,E,53,N],[13,R[844],E,E,53,N],[7,"NUCLEUS_SNAPSHOT_ADDRESS",E,E,N,N],[11,"new",E,E,54,[[[R[12]],[R[652]]],["self"]]],[11,"new",E,E,51,[[],["self"]]],[11,"zome_call_result",E,E,51,[[["self"],[R[650]]],[[R[6],[R[26],R[21]]],[R[13],[R[6]]]]]],[11,"has_initialized",E,E,51,[[["self"]],["bool"]]],[11,R[691],E,E,51,[[["self"]],[[R[691]],[R[13],[R[691]]]]]],[11,"has_initialization_failed",E,E,51,[[["self"]],["bool"]]],[11,"dna",E,E,51,[[["self"]],[[R[13],["dna"]],["dna"]]]],[11,"status",E,E,51,[[["self"]],[R[762]]]],[0,R[197],R[654],E,N,N],[4,R[819],R[744],"A failed validation.",N,N],[13,"Fail",E,"`Fail` means the validation function did run successfully…",55,N],[13,"UnresolvedDependencies",E,"The entry could not get validated because known…",55,N],[13,R[692],E,"A validation function for the given entry could not be…",55,N],[13,"Error",E,"An error occurred that is out of the scope of validation…",55,N],[5,"validate_entry",E,"Main validation workflow. This is the high-level validate…",N,[[[R[321]],[R[13],[R[12]]],["entry"],["arc"],[R[12]]]]],[5,"entry_to_validation_data",E,E,N,[[[R[321]],[R[13],[R[12]]],[R[620]],["arc",[R[620]]],["entry"],[R[12]]],[[R[137],["entry"]],[R[6],[R[137],R[21]]],[R[21]]]]],[6,"ValidationResult",E,"Result of validating an entry. Either Ok(()) if the entry…",N,N],[6,"ZomeFnResult",R[654],E,N,N],[11,"new",E,E,35,[[[R[26]],[R[123]],["str"],["into",[R[26]]]],["self"]]],[11,"create",E,E,35,[[[R[26]],[R[620]],["arc",[R[620]]],[R[12]],["str"],["into",[R[26]]]],["self"]]],[11,"same_fn_as",E,E,35,[[["self"],[R[650]]],["bool"]]],[11,R[182],E,E,35,[[["self"]],[R[12]]]],[11,"id",E,E,35,[[["self"]],[R[693]]]],[11,"new",E,E,36,[[[R[26]],["str"],["into",[R[26]]]],["self"]]],[0,R[613],R[591],E,N,N],[3,R[821],R[745],E,N,N],[8,R[820],E,"trait that defines the persistence functionality that…",N,N],[10,"save",E,E,56,[[["self"],[R[599]]],[[R[6],[R[21]]],[R[21]]]]],[10,"load",E,E,56,[[["self"],["arc",[R[620]]],[R[620]]],[[R[13],["state"]],[R[6],[R[13],R[21]]],[R[21]]]]],[11,"new",E,E,57,[[["rwlock",[R[593]]],["arc",["rwlock"]]],["self"]]],[0,"scheduled_jobs",R[591],E,N,N],[5,"create_callback","holochain_core::scheduled_jobs",E,N,[[["arc",[R[620]]],[R[620]]]]],[0,R[690],E,E,N,N],[3,R[822],R[746],E,N,N],[12,R[694],E,E,58,N],[12,"dependencies",E,E,58,N],[12,"workflow",E,E,58,N],[4,R[823],E,E,N,N],[13,"HoldEntry",E,E,59,N],[13,"HoldLink",E,E,59,N],[13,R[586],E,E,59,N],[13,R[587],E,E,59,N],[13,R[588],E,E,59,N],[5,"run_pending_validations",E,E,N,[[["arc",[R[620]]],[R[620]]]]],[6,"PendingValidation",E,E,N,N],[0,"signal",R[591],E,N,N],[3,R[824],R[747],E,N,N],[12,"name",E,E,60,N],[12,R[851],E,E,60,N],[4,"Signal",E,E,N,N],[13,"Trace",E,E,61,N],[13,"Consistency",E,E,61,N],[13,"User",E,E,61,N],[5,"signal_channel",E,E,N,[[]]],[5,"_combine_receivers",E,"Pass on messages from multiple receivers into a single…",N,[[[R[626]],["vec",[R[626]]]],[R[626]]]],[6,"SignalSender",E,E,N,N],[6,"SignalReceiver",E,E,N,N],[0,"state",R[591],E,N,N],[3,"State",R[748],"The Store of the Holochain instance Object, according to…",N,N],[12,"history",E,E,62,N],[12,R[695],E,E,62,N],[3,R[825],E,"This type wraps (decorates) InnerState with an option and…",N,N],[5,"test_store",E,E,N,[[["arc",[R[620]]],[R[620]]],["state"]]],[11,"new",E,E,62,[[["arc",[R[620]]],[R[620]]],["self"]]],[11,R[699],E,E,62,[[["arc",[R[620]]],[R[600]],[R[620]]],["self"]]],[11,R[700],E,E,62,[[[R[600]],["arc",[R[620]]],[R[620]],[R[655]]],["self"]]],[11,"new_with_agent_nucleus_dht",E,E,62,[[[R[625]],[R[600]],["arc",[R[620]]],[R[620]],[R[655]]],["self"]]],[11,"reduce",E,E,62,[[["self"],[R[602]]],["self"]]],[11,"nucleus",E,E,62,[[["self"]],[["arc",[R[655]]],[R[655]]]]],[11,"agent",E,E,62,[[["self"]],[["arc",[R[600]]],[R[600]]]]],[11,"dht",E,E,62,[[["self"]],[[R[625]],["arc",[R[625]]]]]],[11,"network",E,E,62,[[["self"]],[[R[640]],["arc",[R[640]]]]]],[11,"try_from_snapshots",E,E,62,[[[R[696]],[R[620]],["arc",[R[620]]],[R[751]],[R[770]]],[[R[41],["state"]],["state"]]]],[11,R[697],E,R[698],62,[[["self"],[R[12]]],[["vec",[R[9]]],[R[21]],[R[6],["vec",R[21]]]]]],[11,"drop_inner_state",E,E,63,[[["self"]]]],[11,"new",E,E,63,[[["arc",[R[620]]],[R[620]]],["self"]]],[11,R[699],E,E,63,[[["arc",[R[620]]],[R[600]],[R[620]]],["self"]]],[11,R[700],E,E,63,[[[R[600]],["arc",[R[620]]],[R[620]],[R[655]]],["self"]]],[11,"reduce",E,E,63,[[["self"],[R[602]]],["self"]]],[11,"nucleus",E,E,63,[[["self"]],[["arc",[R[655]]],[R[655]]]]],[11,"agent",E,E,63,[[["self"]],[["arc",[R[600]]],[R[600]]]]],[11,"dht",E,E,63,[[["self"]],[[R[625]],["arc",[R[625]]]]]],[11,"network",E,E,63,[[["self"]],[[R[640]],["arc",[R[640]]]]]],[11,R[697],E,E,63,[[["self"],[R[12]]],[["vec",[R[9]]],[R[21]],[R[6],["vec",R[21]]]]]],[11,R[695],E,E,63,[[["self"]],["conductorapi"]]],[11,"history",E,E,63,[[["self"]],[[R[602]],["hashset",[R[602]]]]]],[0,"workflows",R[591],E,N,N],[0,"application",R[701],E,N,N],[5,R[331],"holochain_core::workflows::application",E,N,[[["dna"],[R[620]],[R[13],["dna"]],["arc",[R[620]]],[R[771]]]]],[0,R[549],R[701],E,N,N],[5,R[549],"holochain_core::workflows::author_entry",E,N,[[[R[13],[R[12]]],["entry"],[R[12]],["vec"],["arc"]]]],[0,R[702],R[701],E,N,N],[5,"get_entry_with_meta_workflow","holochain_core::workflows::get_entry_result","Get Entry workflow",N,[[[R[12]],["arc"],[R[190]]]]],[5,"get_entry_result_workflow",E,"Get GetEntryResult workflow",N,[[["getentryargs"],["arc"]]]],[0,"get_link_result",R[701],E,N,N],[5,"get_link_result_workflow","holochain_core::workflows::get_link_result",E,N,[[[R[230]],["arc"]]]],[5,"get_link_add_entries",E,E,N,[[[R[230]],["arc"]]]],[0,R[703],R[701],E,N,N],[5,R[703],"holochain_core::workflows::handle_custom_direct_message","handles receiving a message from an api send call call the…",N,[[[R[620]],[R[12]],[R[704]],["arc",[R[620]]],[R[0]]]]],[0,R[550],R[701],E,N,N],[5,"hold_entry_workflow","holochain_core::workflows::hold_entry",E,N,[[["arc",[R[620]]],[R[620]],[R[637]]]]],[0,"hold_entry_remove",R[701],E,N,N],[5,"hold_remove_workflow","holochain_core::workflows::hold_entry_remove",E,N,[[["arc",[R[620]]],[R[620]],[R[637]]]]],[0,"hold_entry_update",R[701],E,N,N],[5,"hold_update_workflow","holochain_core::workflows::hold_entry_update",E,N,[[["arc",[R[620]]],[R[620]],[R[637]]]]],[0,"hold_link",R[701],E,N,N],[5,"hold_link_workflow","holochain_core::workflows::hold_link",E,N,[[["arc",[R[620]]],[R[620]],[R[637]]]]],[0,R[621],R[701],E,N,N],[5,"remove_link_workflow","holochain_core::workflows::remove_link",E,N,[[["arc",[R[620]]],[R[620]],[R[637]]]]],[0,R[705],R[701],E,N,N],[5,R[705],"holochain_core::workflows::respond_validation_package_request",E,N,[[[R[620]],[R[12]],["arc",[R[620]]],["vec"],[R[0]]]]],[14,"link_zome_api",R[591],E,N,N],[11,"from",R[706],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[82],E,E,5,[[["self"]],[T]]],[11,R[83],E,E,5,[[["self"],[T]]]],[11,R[78],E,E,5,[[[U]],[R[6]]]],[11,R[79],E,E,5,[[],[R[6]]]],[11,R[89],E,E,5,[[["self"]],[T]]],[11,R[80],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"]],[R[90]]]],[11,R[85],E,E,5,[[["self"]]]],[11,R[87],E,E,5,[[["self"],["k"]],["bool"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[82],E,E,0,[[["self"]],[T]]],[11,R[83],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[[U]],[R[6]]]],[11,R[79],E,E,0,[[],[R[6]]]],[11,R[89],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"]],[R[90]]]],[11,R[85],E,E,0,[[["self"]]]],[11,R[87],E,E,0,[[["self"],["k"]],["bool"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[82],E,E,1,[[["self"]],[T]]],[11,R[83],E,E,1,[[["self"],[T]]]],[11,R[78],E,E,1,[[[U]],[R[6]]]],[11,R[79],E,E,1,[[],[R[6]]]],[11,R[89],E,E,1,[[["self"]],[T]]],[11,R[80],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"]],[R[90]]]],[11,R[85],E,E,1,[[["self"]]]],[11,R[87],E,E,1,[[["self"],["k"]],["bool"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[82],E,E,2,[[["self"]],[T]]],[11,R[83],E,E,2,[[["self"],[T]]]],[11,R[78],E,E,2,[[[U]],[R[6]]]],[11,R[79],E,E,2,[[],[R[6]]]],[11,R[89],E,E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"]],[R[90]]]],[11,R[85],E,E,2,[[["self"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[82],E,E,3,[[["self"]],[T]]],[11,R[83],E,E,3,[[["self"],[T]]]],[11,R[78],E,E,3,[[[U]],[R[6]]]],[11,R[79],E,E,3,[[],[R[6]]]],[11,R[89],E,E,3,[[["self"]],[T]]],[11,R[80],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"]],[R[90]]]],[11,R[85],E,E,3,[[["self"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[82],E,E,4,[[["self"]],[T]]],[11,R[83],E,E,4,[[["self"],[T]]]],[11,R[78],E,E,4,[[[U]],[R[6]]]],[11,R[79],E,E,4,[[],[R[6]]]],[11,R[89],E,E,4,[[["self"]],[T]]],[11,R[80],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"]],[R[90]]]],[11,R[85],E,E,4,[[["self"]]]],[11,"from",R[707],E,64,[[[T]],[T]]],[11,"into",E,E,64,[[],[U]]],[11,R[78],E,E,64,[[[U]],[R[6]]]],[11,R[79],E,E,64,[[],[R[6]]]],[11,R[89],E,E,64,[[["self"]],[T]]],[11,R[80],E,E,64,[[["self"]],[T]]],[11,R[84],E,E,64,[[["self"]],[R[90]]]],[11,R[717],E,E,64,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[708],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[82],E,E,8,[[["self"]],[T]]],[11,R[83],E,E,8,[[["self"],[T]]]],[11,R[78],E,E,8,[[[U]],[R[6]]]],[11,R[79],E,E,8,[[],[R[6]]]],[11,R[89],E,E,8,[[["self"]],[T]]],[11,R[80],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"]],[R[90]]]],[11,R[85],E,E,8,[[["self"]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[82],E,E,6,[[["self"]],[T]]],[11,R[83],E,E,6,[[["self"],[T]]]],[11,R[78],E,E,6,[[[U]],[R[6]]]],[11,R[79],E,E,6,[[],[R[6]]]],[11,R[89],E,E,6,[[["self"]],[T]]],[11,R[80],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"]],[R[90]]]],[11,R[85],E,E,6,[[["self"]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[709],E,E,9,[[],["i"]]],[11,R[78],E,E,9,[[[U]],[R[6]]]],[11,R[79],E,E,9,[[],[R[6]]]],[11,R[89],E,E,9,[[["self"]],[T]]],[11,R[80],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"]],[R[90]]]],[11,R[710],E,E,9,[[],[R[711]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[709],E,E,10,[[],["i"]]],[11,R[78],E,E,10,[[[U]],[R[6]]]],[11,R[79],E,E,10,[[],[R[6]]]],[11,R[89],E,E,10,[[["self"]],[T]]],[11,R[80],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"]],[R[90]]]],[11,R[710],E,E,10,[[],[R[711]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[78],E,E,7,[[[U]],[R[6]]]],[11,R[79],E,E,7,[[],[R[6]]]],[11,R[89],E,E,7,[[["self"]],[T]]],[11,R[80],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"]],[R[90]]]],[11,"from",R[712],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[82],E,E,12,[[["self"]],[T]]],[11,R[83],E,E,12,[[["self"],[T]]]],[11,R[78],E,E,12,[[[U]],[R[6]]]],[11,R[79],E,E,12,[[],[R[6]]]],[11,R[89],E,E,12,[[["self"]],[T]]],[11,R[80],E,E,12,[[["self"]],[T]]],[11,R[84],E,E,12,[[["self"]],[R[90]]]],[11,R[85],E,E,12,[[["self"]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[82],E,E,13,[[["self"]],[T]]],[11,R[83],E,E,13,[[["self"],[T]]]],[11,R[78],E,E,13,[[[U]],[R[6]]]],[11,R[79],E,E,13,[[],[R[6]]]],[11,R[89],E,E,13,[[["self"]],[T]]],[11,R[80],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"]],[R[90]]]],[11,R[85],E,E,13,[[["self"]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[82],E,E,11,[[["self"]],[T]]],[11,R[83],E,E,11,[[["self"],[T]]]],[11,R[78],E,E,11,[[[U]],[R[6]]]],[11,R[79],E,E,11,[[],[R[6]]]],[11,R[89],E,E,11,[[["self"]],[T]]],[11,R[80],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"]],[R[90]]]],[11,R[85],E,E,11,[[["self"]]]],[11,"from",R[713],E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[82],E,E,16,[[["self"]],[T]]],[11,R[83],E,E,16,[[["self"],[T]]]],[11,R[78],E,E,16,[[[U]],[R[6]]]],[11,R[79],E,E,16,[[],[R[6]]]],[11,R[89],E,E,16,[[["self"]],[T]]],[11,R[80],E,E,16,[[["self"]],[T]]],[11,R[84],E,E,16,[[["self"]],[R[90]]]],[11,R[85],E,E,16,[[["self"]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[82],E,E,17,[[["self"]],[T]]],[11,R[83],E,E,17,[[["self"],[T]]]],[11,R[78],E,E,17,[[[U]],[R[6]]]],[11,R[79],E,E,17,[[],[R[6]]]],[11,R[89],E,E,17,[[["self"]],[T]]],[11,R[80],E,E,17,[[["self"]],[T]]],[11,R[84],E,E,17,[[["self"]],[R[90]]]],[11,R[85],E,E,17,[[["self"]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[82],E,E,14,[[["self"]],[T]]],[11,R[83],E,E,14,[[["self"],[T]]]],[11,R[78],E,E,14,[[[U]],[R[6]]]],[11,R[79],E,E,14,[[],[R[6]]]],[11,R[89],E,E,14,[[["self"]],[T]]],[11,R[80],E,E,14,[[["self"]],[T]]],[11,R[84],E,E,14,[[["self"]],[R[90]]]],[11,R[85],E,E,14,[[["self"]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[82],E,E,15,[[["self"]],[T]]],[11,R[83],E,E,15,[[["self"],[T]]]],[11,R[78],E,E,15,[[[U]],[R[6]]]],[11,R[79],E,E,15,[[],[R[6]]]],[11,R[89],E,E,15,[[["self"]],[T]]],[11,R[80],E,E,15,[[["self"]],[T]]],[11,R[84],E,E,15,[[["self"]],[R[90]]]],[11,R[85],E,E,15,[[["self"]]]],[11,"from",R[714],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[82],E,E,18,[[["self"]],[T]]],[11,R[83],E,E,18,[[["self"],[T]]]],[11,R[78],E,E,18,[[[U]],[R[6]]]],[11,R[79],E,E,18,[[],[R[6]]]],[11,R[89],E,E,18,[[["self"]],[T]]],[11,R[80],E,E,18,[[["self"]],[T]]],[11,R[84],E,E,18,[[["self"]],[R[90]]]],[11,R[85],E,E,18,[[["self"]]]],[11,"from",R[715],E,65,[[[T]],[T]]],[11,"into",E,E,65,[[],[U]]],[11,R[78],E,E,65,[[[U]],[R[6]]]],[11,R[79],E,E,65,[[],[R[6]]]],[11,R[89],E,E,65,[[["self"]],[T]]],[11,R[80],E,E,65,[[["self"]],[T]]],[11,R[84],E,E,65,[[["self"]],[R[90]]]],[11,R[717],E,E,65,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[716],E,66,[[[T]],[T]]],[11,"into",E,E,66,[[],[U]]],[11,R[78],E,E,66,[[[U]],[R[6]]]],[11,R[79],E,E,66,[[],[R[6]]]],[11,R[89],E,E,66,[[["self"]],[T]]],[11,R[80],E,E,66,[[["self"]],[T]]],[11,R[84],E,E,66,[[["self"]],[R[90]]]],[11,R[717],E,E,66,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[718],E,67,[[[T]],[T]]],[11,"into",E,E,67,[[],[U]]],[11,R[78],E,E,67,[[[U]],[R[6]]]],[11,R[79],E,E,67,[[],[R[6]]]],[11,R[89],E,E,67,[[["self"]],[T]]],[11,R[80],E,E,67,[[["self"]],[T]]],[11,R[84],E,E,67,[[["self"]],[R[90]]]],[11,R[717],E,E,67,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[719],E,68,[[[T]],[T]]],[11,"into",E,E,68,[[],[U]]],[11,R[78],E,E,68,[[[U]],[R[6]]]],[11,R[79],E,E,68,[[],[R[6]]]],[11,R[89],E,E,68,[[["self"]],[T]]],[11,R[80],E,E,68,[[["self"]],[T]]],[11,R[84],E,E,68,[[["self"]],[R[90]]]],[11,R[717],E,E,68,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[720],E,69,[[[T]],[T]]],[11,"into",E,E,69,[[],[U]]],[11,R[78],E,E,69,[[[U]],[R[6]]]],[11,R[79],E,E,69,[[],[R[6]]]],[11,R[89],E,E,69,[[["self"]],[T]]],[11,R[80],E,E,69,[[["self"]],[T]]],[11,R[84],E,E,69,[[["self"]],[R[90]]]],[11,R[717],E,E,69,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[721],E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[82],E,E,20,[[["self"]],[T]]],[11,R[83],E,E,20,[[["self"],[T]]]],[11,R[78],E,E,20,[[[U]],[R[6]]]],[11,R[79],E,E,20,[[],[R[6]]]],[11,R[89],E,E,20,[[["self"]],[T]]],[11,R[80],E,E,20,[[["self"]],[T]]],[11,R[84],E,E,20,[[["self"]],[R[90]]]],[11,R[85],E,E,20,[[["self"]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[82],E,E,19,[[["self"]],[T]]],[11,R[83],E,E,19,[[["self"],[T]]]],[11,R[78],E,E,19,[[[U]],[R[6]]]],[11,R[79],E,E,19,[[],[R[6]]]],[11,R[89],E,E,19,[[["self"]],[T]]],[11,R[80],E,E,19,[[["self"]],[T]]],[11,R[84],E,E,19,[[["self"]],[R[90]]]],[11,R[85],E,E,19,[[["self"]]]],[11,"from",R[722],E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[82],E,E,23,[[["self"]],[T]]],[11,R[83],E,E,23,[[["self"],[T]]]],[11,R[78],E,E,23,[[[U]],[R[6]]]],[11,R[79],E,E,23,[[],[R[6]]]],[11,R[89],E,E,23,[[["self"]],[T]]],[11,R[80],E,E,23,[[["self"]],[T]]],[11,R[84],E,E,23,[[["self"]],[R[90]]]],[11,R[85],E,E,23,[[["self"]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[78],E,E,22,[[[U]],[R[6]]]],[11,R[79],E,E,22,[[],[R[6]]]],[11,R[89],E,E,22,[[["self"]],[T]]],[11,R[80],E,E,22,[[["self"]],[T]]],[11,R[84],E,E,22,[[["self"]],[R[90]]]],[11,"from",R[723],E,70,[[[T]],[T]]],[11,"into",E,E,70,[[],[U]]],[11,R[82],E,E,70,[[["self"]],[T]]],[11,R[83],E,E,70,[[["self"],[T]]]],[11,R[78],E,E,70,[[[U]],[R[6]]]],[11,R[79],E,E,70,[[],[R[6]]]],[11,R[89],E,E,70,[[["self"]],[T]]],[11,R[80],E,E,70,[[["self"]],[T]]],[11,R[84],E,E,70,[[["self"]],[R[90]]]],[11,R[85],E,E,70,[[["self"]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[82],E,E,24,[[["self"]],[T]]],[11,R[83],E,E,24,[[["self"],[T]]]],[11,R[78],E,E,24,[[[U]],[R[6]]]],[11,R[79],E,E,24,[[],[R[6]]]],[11,R[89],E,E,24,[[["self"]],[T]]],[11,R[80],E,E,24,[[["self"]],[T]]],[11,R[84],E,E,24,[[["self"]],[R[90]]]],[11,R[85],E,E,24,[[["self"]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[82],E,E,26,[[["self"]],[T]]],[11,R[83],E,E,26,[[["self"],[T]]]],[11,R[78],E,E,26,[[[U]],[R[6]]]],[11,R[79],E,E,26,[[],[R[6]]]],[11,R[89],E,E,26,[[["self"]],[T]]],[11,R[80],E,E,26,[[["self"]],[T]]],[11,R[84],E,E,26,[[["self"]],[R[90]]]],[11,R[85],E,E,26,[[["self"]]]],[11,"from",R[633],E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[82],E,E,27,[[["self"]],[T]]],[11,R[83],E,E,27,[[["self"],[T]]]],[11,R[78],E,E,27,[[[U]],[R[6]]]],[11,R[79],E,E,27,[[],[R[6]]]],[11,R[89],E,E,27,[[["self"]],[T]]],[11,R[80],E,E,27,[[["self"]],[T]]],[11,R[84],E,E,27,[[["self"]],[R[90]]]],[11,R[85],E,E,27,[[["self"]]]],[11,"from",R[724],E,71,[[[T]],[T]]],[11,"into",E,E,71,[[],[U]]],[11,R[78],E,E,71,[[[U]],[R[6]]]],[11,R[79],E,E,71,[[],[R[6]]]],[11,R[89],E,E,71,[[["self"]],[T]]],[11,R[80],E,E,71,[[["self"]],[T]]],[11,R[84],E,E,71,[[["self"]],[R[90]]]],[11,R[717],E,E,71,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[725],E,72,[[[T]],[T]]],[11,"into",E,E,72,[[],[U]]],[11,R[78],E,E,72,[[[U]],[R[6]]]],[11,R[79],E,E,72,[[],[R[6]]]],[11,R[89],E,E,72,[[["self"]],[T]]],[11,R[80],E,E,72,[[["self"]],[T]]],[11,R[84],E,E,72,[[["self"]],[R[90]]]],[11,R[717],E,E,72,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[726],E,73,[[[T]],[T]]],[11,"into",E,E,73,[[],[U]]],[11,R[78],E,E,73,[[[U]],[R[6]]]],[11,R[79],E,E,73,[[],[R[6]]]],[11,R[89],E,E,73,[[["self"]],[T]]],[11,R[80],E,E,73,[[["self"]],[T]]],[11,R[84],E,E,73,[[["self"]],[R[90]]]],[11,R[717],E,E,73,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[727],E,74,[[[T]],[T]]],[11,"into",E,E,74,[[],[U]]],[11,R[78],E,E,74,[[[U]],[R[6]]]],[11,R[79],E,E,74,[[],[R[6]]]],[11,R[89],E,E,74,[[["self"]],[T]]],[11,R[80],E,E,74,[[["self"]],[T]]],[11,R[84],E,E,74,[[["self"]],[R[90]]]],[11,R[717],E,E,74,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[728],E,75,[[[T]],[T]]],[11,"into",E,E,75,[[],[U]]],[11,R[78],E,E,75,[[[U]],[R[6]]]],[11,R[79],E,E,75,[[],[R[6]]]],[11,R[89],E,E,75,[[["self"]],[T]]],[11,R[80],E,E,75,[[["self"]],[T]]],[11,R[84],E,E,75,[[["self"]],[R[90]]]],[11,R[717],E,E,75,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[729],E,76,[[[T]],[T]]],[11,"into",E,E,76,[[],[U]]],[11,R[78],E,E,76,[[[U]],[R[6]]]],[11,R[79],E,E,76,[[],[R[6]]]],[11,R[89],E,E,76,[[["self"]],[T]]],[11,R[80],E,E,76,[[["self"]],[T]]],[11,R[84],E,E,76,[[["self"]],[R[90]]]],[11,R[717],E,E,76,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[730],E,77,[[[T]],[T]]],[11,"into",E,E,77,[[],[U]]],[11,R[78],E,E,77,[[[U]],[R[6]]]],[11,R[79],E,E,77,[[],[R[6]]]],[11,R[89],E,E,77,[[["self"]],[T]]],[11,R[80],E,E,77,[[["self"]],[T]]],[11,R[84],E,E,77,[[["self"]],[R[90]]]],[11,R[717],E,E,77,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[731],E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[82],E,E,28,[[["self"]],[T]]],[11,R[83],E,E,28,[[["self"],[T]]]],[11,R[78],E,E,28,[[[U]],[R[6]]]],[11,R[79],E,E,28,[[],[R[6]]]],[11,R[89],E,E,28,[[["self"]],[T]]],[11,R[80],E,E,28,[[["self"]],[T]]],[11,R[84],E,E,28,[[["self"]],[R[90]]]],[11,R[85],E,E,28,[[["self"]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[82],E,E,29,[[["self"]],[T]]],[11,R[83],E,E,29,[[["self"],[T]]]],[11,R[78],E,E,29,[[[U]],[R[6]]]],[11,R[79],E,E,29,[[],[R[6]]]],[11,R[89],E,E,29,[[["self"]],[T]]],[11,R[80],E,E,29,[[["self"]],[T]]],[11,R[84],E,E,29,[[["self"]],[R[90]]]],[11,R[85],E,E,29,[[["self"]]]],[11,"from",R[732],E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[82],E,E,30,[[["self"]],[T]]],[11,R[83],E,E,30,[[["self"],[T]]]],[11,R[78],E,E,30,[[[U]],[R[6]]]],[11,R[79],E,E,30,[[],[R[6]]]],[11,R[89],E,E,30,[[["self"]],[T]]],[11,R[80],E,E,30,[[["self"]],[T]]],[11,R[84],E,E,30,[[["self"]],[R[90]]]],[11,R[85],E,E,30,[[["self"]]]],[11,"from",R[733],E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[82],E,E,31,[[["self"]],[T]]],[11,R[83],E,E,31,[[["self"],[T]]]],[11,R[78],E,E,31,[[[U]],[R[6]]]],[11,R[79],E,E,31,[[],[R[6]]]],[11,R[89],E,E,31,[[["self"]],[T]]],[11,R[80],E,E,31,[[["self"]],[T]]],[11,R[84],E,E,31,[[["self"]],[R[90]]]],[11,R[85],E,E,31,[[["self"]]]],[11,"from",R[734],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[82],E,E,32,[[["self"]],[T]]],[11,R[83],E,E,32,[[["self"],[T]]]],[11,R[78],E,E,32,[[[U]],[R[6]]]],[11,R[79],E,E,32,[[],[R[6]]]],[11,R[89],E,E,32,[[["self"]],[T]]],[11,R[80],E,E,32,[[["self"]],[T]]],[11,R[84],E,E,32,[[["self"]],[R[90]]]],[11,R[85],E,E,32,[[["self"]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[82],E,E,33,[[["self"]],[T]]],[11,R[83],E,E,33,[[["self"],[T]]]],[11,R[78],E,E,33,[[[U]],[R[6]]]],[11,R[79],E,E,33,[[],[R[6]]]],[11,R[89],E,E,33,[[["self"]],[T]]],[11,R[80],E,E,33,[[["self"]],[T]]],[11,R[84],E,E,33,[[["self"]],[R[90]]]],[11,R[85],E,E,33,[[["self"]]]],[11,"from",R[735],E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[82],E,E,34,[[["self"]],[T]]],[11,R[83],E,E,34,[[["self"],[T]]]],[11,R[78],E,E,34,[[[U]],[R[6]]]],[11,R[79],E,E,34,[[],[R[6]]]],[11,R[89],E,E,34,[[["self"]],[T]]],[11,R[80],E,E,34,[[["self"]],[T]]],[11,R[84],E,E,34,[[["self"]],[R[90]]]],[11,R[85],E,E,34,[[["self"]]]],[11,"from",R[654],E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[82],E,E,35,[[["self"]],[T]]],[11,R[83],E,E,35,[[["self"],[T]]]],[11,R[78],E,E,35,[[[U]],[R[6]]]],[11,R[79],E,E,35,[[],[R[6]]]],[11,R[89],E,E,35,[[["self"]],[T]]],[11,R[80],E,E,35,[[["self"]],[T]]],[11,R[84],E,E,35,[[["self"]],[R[90]]]],[11,R[85],E,E,35,[[["self"]]]],[11,R[87],E,E,35,[[["self"],["k"]],["bool"]]],[11,"from",E,E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[82],E,E,36,[[["self"]],[T]]],[11,R[83],E,E,36,[[["self"],[T]]]],[11,R[78],E,E,36,[[[U]],[R[6]]]],[11,R[79],E,E,36,[[],[R[6]]]],[11,R[89],E,E,36,[[["self"]],[T]]],[11,R[80],E,E,36,[[["self"]],[T]]],[11,R[84],E,E,36,[[["self"]],[R[90]]]],[11,R[85],E,E,36,[[["self"]]]],[11,R[87],E,E,36,[[["self"],["k"]],["bool"]]],[11,"from",R[736],E,78,[[[T]],[T]]],[11,"into",E,E,78,[[],[U]]],[11,R[78],E,E,78,[[[U]],[R[6]]]],[11,R[79],E,E,78,[[],[R[6]]]],[11,R[89],E,E,78,[[["self"]],[T]]],[11,R[80],E,E,78,[[["self"]],[T]]],[11,R[84],E,E,78,[[["self"]],[R[90]]]],[11,R[717],E,E,78,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[737],E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[82],E,E,37,[[["self"]],[T]]],[11,R[83],E,E,37,[[["self"],[T]]]],[11,R[78],E,E,37,[[[U]],[R[6]]]],[11,R[79],E,E,37,[[],[R[6]]]],[11,R[89],E,E,37,[[["self"]],[T]]],[11,R[80],E,E,37,[[["self"]],[T]]],[11,R[84],E,E,37,[[["self"]],[R[90]]]],[11,R[85],E,E,37,[[["self"]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,"into",E,E,79,[[],[U]]],[11,R[78],E,E,79,[[[U]],[R[6]]]],[11,R[79],E,E,79,[[],[R[6]]]],[11,R[89],E,E,79,[[["self"]],[T]]],[11,R[80],E,E,79,[[["self"]],[T]]],[11,R[84],E,E,79,[[["self"]],[R[90]]]],[11,R[717],E,E,79,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[738],E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[82],E,E,38,[[["self"]],[T]]],[11,R[83],E,E,38,[[["self"],[T]]]],[11,R[78],E,E,38,[[[U]],[R[6]]]],[11,R[79],E,E,38,[[],[R[6]]]],[11,R[89],E,E,38,[[["self"]],[T]]],[11,R[80],E,E,38,[[["self"]],[T]]],[11,R[84],E,E,38,[[["self"]],[R[90]]]],[11,R[85],E,E,38,[[["self"]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,"into",E,E,80,[[],[U]]],[11,R[78],E,E,80,[[[U]],[R[6]]]],[11,R[79],E,E,80,[[],[R[6]]]],[11,R[89],E,E,80,[[["self"]],[T]]],[11,R[80],E,E,80,[[["self"]],[T]]],[11,R[84],E,E,80,[[["self"]],[R[90]]]],[11,R[717],E,E,80,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[739],E,81,[[[T]],[T]]],[11,"into",E,E,81,[[],[U]]],[11,R[78],E,E,81,[[[U]],[R[6]]]],[11,R[79],E,E,81,[[],[R[6]]]],[11,R[89],E,E,81,[[["self"]],[T]]],[11,R[80],E,E,81,[[["self"]],[T]]],[11,R[84],E,E,81,[[["self"]],[R[90]]]],[11,R[717],E,E,81,[[["pin"],["f"],[R[620]]],["poll"]]],[11,"from",R[671],E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[78],E,E,39,[[[U]],[R[6]]]],[11,R[79],E,E,39,[[],[R[6]]]],[11,R[89],E,E,39,[[["self"]],[T]]],[11,R[80],E,E,39,[[["self"]],[T]]],[11,R[84],E,E,39,[[["self"]],[R[90]]]],[11,R[87],E,E,39,[[["self"],["k"]],["bool"]]],[11,"from",R[683],E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[78],E,E,40,[[[U]],[R[6]]]],[11,R[79],E,E,40,[[],[R[6]]]],[11,R[89],E,E,40,[[["self"]],[T]]],[11,R[80],E,E,40,[[["self"]],[T]]],[11,R[84],E,E,40,[[["self"]],[R[90]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[94],E,E,41,[[["self"]],[R[0]]]],[11,R[78],E,E,41,[[[U]],[R[6]]]],[11,R[79],E,E,41,[[],[R[6]]]],[11,R[89],E,E,41,[[["self"]],[T]]],[11,R[80],E,E,41,[[["self"]],[T]]],[11,R[84],E,E,41,[[["self"]],[R[90]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[82],E,E,42,[[["self"]],[T]]],[11,R[83],E,E,42,[[["self"],[T]]]],[11,R[78],E,E,42,[[[U]],[R[6]]]],[11,R[79],E,E,42,[[],[R[6]]]],[11,R[89],E,E,42,[[["self"]],[T]]],[11,R[80],E,E,42,[[["self"]],[T]]],[11,R[84],E,E,42,[[["self"]],[R[90]]]],[11,R[85],E,E,42,[[["self"]]]],[11,"from",R[740],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[78],E,E,43,[[[U]],[R[6]]]],[11,R[79],E,E,43,[[],[R[6]]]],[11,R[89],E,E,43,[[["self"]],[T]]],[11,R[80],E,E,43,[[["self"]],[T]]],[11,R[84],E,E,43,[[["self"]],[R[90]]]],[11,"from",R[741],E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[82],E,E,44,[[["self"]],[T]]],[11,R[83],E,E,44,[[["self"],[T]]]],[11,R[78],E,E,44,[[[U]],[R[6]]]],[11,R[79],E,E,44,[[],[R[6]]]],[11,R[89],E,E,44,[[["self"]],[T]]],[11,R[80],E,E,44,[[["self"]],[T]]],[11,R[84],E,E,44,[[["self"]],[R[90]]]],[11,R[85],E,E,44,[[["self"]]]],[11,"from",R[742],E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[82],E,E,45,[[["self"]],[T]]],[11,R[83],E,E,45,[[["self"],[T]]]],[11,R[78],E,E,45,[[[U]],[R[6]]]],[11,R[79],E,E,45,[[],[R[6]]]],[11,R[89],E,E,45,[[["self"]],[T]]],[11,R[80],E,E,45,[[["self"]],[T]]],[11,R[84],E,E,45,[[["self"]],[R[90]]]],[11,R[85],E,E,45,[[["self"]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[82],E,E,46,[[["self"]],[T]]],[11,R[83],E,E,46,[[["self"],[T]]]],[11,R[78],E,E,46,[[[U]],[R[6]]]],[11,R[79],E,E,46,[[],[R[6]]]],[11,R[89],E,E,46,[[["self"]],[T]]],[11,R[80],E,E,46,[[["self"]],[T]]],[11,R[84],E,E,46,[[["self"]],[R[90]]]],[11,R[85],E,E,46,[[["self"]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[82],E,E,47,[[["self"]],[T]]],[11,R[83],E,E,47,[[["self"],[T]]]],[11,R[78],E,E,47,[[[U]],[R[6]]]],[11,R[79],E,E,47,[[],[R[6]]]],[11,R[89],E,E,47,[[["self"]],[T]]],[11,R[80],E,E,47,[[["self"]],[T]]],[11,R[84],E,E,47,[[["self"]],[R[90]]]],[11,R[85],E,E,47,[[["self"]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[82],E,E,48,[[["self"]],[T]]],[11,R[83],E,E,48,[[["self"],[T]]]],[11,R[78],E,E,48,[[[U]],[R[6]]]],[11,R[79],E,E,48,[[],[R[6]]]],[11,R[89],E,E,48,[[["self"]],[T]]],[11,R[80],E,E,48,[[["self"]],[T]]],[11,R[84],E,E,48,[[["self"]],[R[90]]]],[11,R[85],E,E,48,[[["self"]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[94],E,E,49,[[["self"]],[R[0]]]],[11,R[82],E,E,49,[[["self"]],[T]]],[11,R[83],E,E,49,[[["self"],[T]]]],[11,R[78],E,E,49,[[[U]],[R[6]]]],[11,R[79],E,E,49,[[],[R[6]]]],[11,R[89],E,E,49,[[["self"]],[T]]],[11,R[80],E,E,49,[[["self"]],[T]]],[11,R[84],E,E,49,[[["self"]],[R[90]]]],[11,R[85],E,E,49,[[["self"]]]],[11,"from",R[743],E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[82],E,E,54,[[["self"]],[T]]],[11,R[83],E,E,54,[[["self"],[T]]]],[11,R[78],E,E,54,[[[U]],[R[6]]]],[11,R[79],E,E,54,[[],[R[6]]]],[11,R[89],E,E,54,[[["self"]],[T]]],[11,R[80],E,E,54,[[["self"]],[T]]],[11,R[84],E,E,54,[[["self"]],[R[90]]]],[11,R[85],E,E,54,[[["self"]]]],[11,R[87],E,E,54,[[["self"],["k"]],["bool"]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[82],E,E,51,[[["self"]],[T]]],[11,R[83],E,E,51,[[["self"],[T]]]],[11,R[78],E,E,51,[[[U]],[R[6]]]],[11,R[79],E,E,51,[[],[R[6]]]],[11,R[89],E,E,51,[[["self"]],[T]]],[11,R[80],E,E,51,[[["self"]],[T]]],[11,R[84],E,E,51,[[["self"]],[R[90]]]],[11,R[85],E,E,51,[[["self"]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[82],E,E,52,[[["self"]],[T]]],[11,R[83],E,E,52,[[["self"],[T]]]],[11,R[78],E,E,52,[[[U]],[R[6]]]],[11,R[79],E,E,52,[[],[R[6]]]],[11,R[89],E,E,52,[[["self"]],[T]]],[11,R[80],E,E,52,[[["self"]],[T]]],[11,R[84],E,E,52,[[["self"]],[R[90]]]],[11,R[85],E,E,52,[[["self"]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[82],E,E,53,[[["self"]],[T]]],[11,R[83],E,E,53,[[["self"],[T]]]],[11,R[78],E,E,53,[[[U]],[R[6]]]],[11,R[79],E,E,53,[[],[R[6]]]],[11,R[89],E,E,53,[[["self"]],[T]]],[11,R[80],E,E,53,[[["self"]],[T]]],[11,R[84],E,E,53,[[["self"]],[R[90]]]],[11,R[85],E,E,53,[[["self"]]]],[11,"from",R[744],E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[82],E,E,55,[[["self"]],[T]]],[11,R[83],E,E,55,[[["self"],[T]]]],[11,R[78],E,E,55,[[[U]],[R[6]]]],[11,R[79],E,E,55,[[],[R[6]]]],[11,R[89],E,E,55,[[["self"]],[T]]],[11,R[80],E,E,55,[[["self"]],[T]]],[11,R[84],E,E,55,[[["self"]],[R[90]]]],[11,R[85],E,E,55,[[["self"]]]],[11,"from",R[745],E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[82],E,E,57,[[["self"]],[T]]],[11,R[83],E,E,57,[[["self"],[T]]]],[11,R[78],E,E,57,[[[U]],[R[6]]]],[11,R[79],E,E,57,[[],[R[6]]]],[11,R[89],E,E,57,[[["self"]],[T]]],[11,R[80],E,E,57,[[["self"]],[T]]],[11,R[84],E,E,57,[[["self"]],[R[90]]]],[11,R[85],E,E,57,[[["self"]]]],[11,"from",R[746],E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[82],E,E,58,[[["self"]],[T]]],[11,R[83],E,E,58,[[["self"],[T]]]],[11,R[78],E,E,58,[[[U]],[R[6]]]],[11,R[79],E,E,58,[[],[R[6]]]],[11,R[89],E,E,58,[[["self"]],[T]]],[11,R[80],E,E,58,[[["self"]],[T]]],[11,R[84],E,E,58,[[["self"]],[R[90]]]],[11,R[85],E,E,58,[[["self"]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[94],E,E,59,[[["self"]],[R[0]]]],[11,R[82],E,E,59,[[["self"]],[T]]],[11,R[83],E,E,59,[[["self"],[T]]]],[11,R[78],E,E,59,[[[U]],[R[6]]]],[11,R[79],E,E,59,[[],[R[6]]]],[11,R[89],E,E,59,[[["self"]],[T]]],[11,R[80],E,E,59,[[["self"]],[T]]],[11,R[84],E,E,59,[[["self"]],[R[90]]]],[11,R[85],E,E,59,[[["self"]]]],[11,R[87],E,E,59,[[["self"],["k"]],["bool"]]],[11,"from",R[747],E,60,[[[T]],[T]]],[11,"into",E,E,60,[[],[U]]],[11,R[82],E,E,60,[[["self"]],[T]]],[11,R[83],E,E,60,[[["self"],[T]]]],[11,R[78],E,E,60,[[[U]],[R[6]]]],[11,R[79],E,E,60,[[],[R[6]]]],[11,R[89],E,E,60,[[["self"]],[T]]],[11,R[80],E,E,60,[[["self"]],[T]]],[11,R[84],E,E,60,[[["self"]],[R[90]]]],[11,R[85],E,E,60,[[["self"]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,"into",E,E,61,[[],[U]]],[11,R[82],E,E,61,[[["self"]],[T]]],[11,R[83],E,E,61,[[["self"],[T]]]],[11,R[78],E,E,61,[[[U]],[R[6]]]],[11,R[79],E,E,61,[[],[R[6]]]],[11,R[89],E,E,61,[[["self"]],[T]]],[11,R[80],E,E,61,[[["self"]],[T]]],[11,R[84],E,E,61,[[["self"]],[R[90]]]],[11,R[85],E,E,61,[[["self"]]]],[11,"from",R[748],E,62,[[[T]],[T]]],[11,"into",E,E,62,[[],[U]]],[11,R[82],E,E,62,[[["self"]],[T]]],[11,R[83],E,E,62,[[["self"],[T]]]],[11,R[78],E,E,62,[[[U]],[R[6]]]],[11,R[79],E,E,62,[[],[R[6]]]],[11,R[89],E,E,62,[[["self"]],[T]]],[11,R[80],E,E,62,[[["self"]],[T]]],[11,R[84],E,E,62,[[["self"]],[R[90]]]],[11,R[85],E,E,62,[[["self"]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,"into",E,E,63,[[],[U]]],[11,R[82],E,E,63,[[["self"]],[T]]],[11,R[83],E,E,63,[[["self"],[T]]]],[11,R[78],E,E,63,[[[U]],[R[6]]]],[11,R[79],E,E,63,[[],[R[6]]]],[11,R[89],E,E,63,[[["self"]],[T]]],[11,R[80],E,E,63,[[["self"]],[T]]],[11,R[84],E,E,63,[[["self"]],[R[90]]]],[11,R[85],E,E,63,[[["self"]]]],[11,"log",R[723],E,70,[[["self"],[R[0]]]]],[11,"log",E,E,24,[[["self"],[R[0]]]]],[11,"dump",E,E,24,[[["self"]],[R[0]]]],[11,"log",E,E,26,[[["self"],[R[0]]]]],[11,"as_str",R[671],E,39,[[["self"]],["str"]]],[11,R[749],E,E,39,[[["str"]],["usize"]]],[11,R[750],E,E,39,[[["usize"]],["self"]]],[11,"as_str",R[683],E,40,[[["self"]],["str"]]],[11,R[749],E,E,40,[[["str"]],["usize"]]],[11,R[750],E,E,40,[[["usize"]],["self"]]],[11,"save",R[745],E,57,[[["self"],[R[599]]],[[R[6],[R[21]]],[R[21]]]]],[11,"load",E,E,57,[[["self"],["arc",[R[620]]],[R[620]]],[[R[13],["state"]],[R[6],[R[13],R[21]]],[R[21]]]]],[11,"drop",R[722],E,23,[[["self"]]]],[11,"from",R[712],E,13,[[[R[599]]],["self"]]],[11,"from",R[721],E,19,[[[R[599]]],["self"]]],[11,"from",R[683],E,42,[[[R[26]]],[R[682]]]],[11,"from",E,E,42,[[[R[111]]],[R[682]]]],[11,"from",R[743],E,52,[[[R[599]]],["self"]]],[11,"from",E,E,51,[[[R[751]]],["self"]]],[11,"from",R[747],E,60,[[[R[228]]],[R[766]]]],[11,"from",R[748],E,63,[[["state"]],[R[599]]]],[11,"eq",R[706],E,5,[[["self"],[R[602]]],["bool"]]],[11,"eq",E,E,4,[[["self"],["action"]],["bool"]]],[11,"ne",E,E,4,[[["self"],["action"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[752]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[752]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[753]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[753]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[754]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[754]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[755]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[755]]],["bool"]]],[11,"eq",R[708],E,8,[[["self"],[R[601]]],["bool"]]],[11,"eq",R[712],E,12,[[["self"],[R[600]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[600]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[603]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[603]]],["bool"]]],[11,"eq",R[721],E,20,[[["self"],[R[625]]],["bool"]]],[11,"eq",R[731],E,28,[[["self"],[R[704]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[704]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[756]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[756]]],["bool"]]],[11,"eq",R[732],E,30,[[["self"],[R[757]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[757]]],["bool"]]],[11,"eq",R[733],E,31,[[["self"],[R[637]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[637]]],["bool"]]],[11,"eq",R[734],E,32,[[["self"],[R[758]]],["bool"]]],[11,"ne",E,E,32,[[["self"],[R[758]]],["bool"]]],[11,"eq",E,E,33,[[["self"],[R[759]]],["bool"]]],[11,"ne",E,E,33,[[["self"],[R[759]]],["bool"]]],[11,"eq",R[735],E,34,[[["self"],[R[640]]],["bool"]]],[11,"eq",R[737],E,37,[[["self"],[R[760]]],["bool"]]],[11,"ne",E,E,37,[[["self"],[R[760]]],["bool"]]],[11,"eq",R[738],E,38,[[["self"],[R[691]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[691]]],["bool"]]],[11,"eq",R[671],E,39,[[["self"],["zomeapifunction"]],["bool"]]],[11,"eq",R[683],E,40,[[["self"],[R[761]]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[682]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[682]]],["bool"]]],[11,"eq",R[743],E,53,[[["self"],[R[762]]],["bool"]]],[11,"ne",E,E,53,[[["self"],[R[762]]],["bool"]]],[11,"eq",E,E,54,[[["self"],[R[763]]],["bool"]]],[11,"ne",E,E,54,[[["self"],[R[763]]],["bool"]]],[11,"eq",E,E,51,[[["self"],[R[655]]],["bool"]]],[11,"ne",E,E,51,[[["self"],[R[655]]],["bool"]]],[11,"eq",R[744],E,55,[[["self"],[R[764]]],["bool"]]],[11,"ne",E,E,55,[[["self"],[R[764]]],["bool"]]],[11,"eq",R[654],E,35,[[["self"],[R[650]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[650]]],["bool"]]],[11,"eq",E,E,36,[[["self"],[R[687]]],["bool"]]],[11,"ne",E,E,36,[[["self"],[R[687]]],["bool"]]],[11,"eq",R[745],E,57,[[["self"],[R[776]]],["bool"]]],[11,"eq",R[746],E,59,[[["self"],[R[652]]],["bool"]]],[11,"eq",E,E,58,[[["self"],[R[765]]],["bool"]]],[11,"ne",E,E,58,[[["self"],[R[765]]],["bool"]]],[11,"eq",R[747],E,60,[[["self"],[R[766]]],["bool"]]],[11,"ne",E,E,60,[[["self"],[R[766]]],["bool"]]],[11,"eq",R[748],E,62,[[["self"],["state"]],["bool"]]],[11,"ne",E,E,62,[[["self"],["state"]],["bool"]]],[11,"eq",E,E,63,[[["self"],[R[599]]],["bool"]]],[11,"ne",E,E,63,[[["self"],[R[599]]],["bool"]]],[11,"next",R[708],R[767],9,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"next",E,R[767],10,[[["self"]],[[R[9]],[R[13],[R[9]]]]]],[11,"clone",R[706],E,5,[[["self"]],[R[602]]]],[11,"clone",E,E,4,[[["self"]],["action"]]],[11,"clone",E,E,0,[[["self"]],[R[752]]]],[11,"clone",E,E,1,[[["self"]],[R[753]]]],[11,"clone",E,E,2,[[["self"]],[R[754]]]],[11,"clone",E,E,3,[[["self"]],[R[755]]]],[11,"clone",R[708],E,8,[[["self"]],[R[601]]]],[11,"clone",E,E,6,[[["self"]],[R[768]]]],[11,"clone",R[712],E,12,[[["self"]],[R[600]]]],[11,"clone",E,E,13,[[["self"]],[R[696]]]],[11,"clone",E,E,11,[[["self"]],[R[603]]]],[11,"clone",R[713],E,16,[[["self"]],["consistencymodel"]]],[11,"clone",E,E,17,[[["self"]],[R[611]]]],[11,"clone",E,E,14,[[["self"]],[R[610]]]],[11,"clone",E,E,15,[[["self"]],[R[769]]]],[11,"clone",R[714],E,18,[[["self"]],[R[620]]]],[11,"clone",R[721],E,20,[[["self"]],[R[625]]]],[11,"clone",E,E,19,[[["self"]],[R[770]]]],[11,"clone",R[722],E,23,[[["self"]],[R[771]]]],[11,"clone",R[723],E,70,[[["self"]],["simplelogger"]]],[11,"clone",E,E,24,[[["self"]],[R[772]]]],[11,"clone",E,E,26,[[["self"]],[R[773]]]],[11,"clone",R[633],E,27,[[["self"]],[R[603]]]],[11,"clone",R[731],E,28,[[["self"]],[R[704]]]],[11,"clone",E,E,29,[[["self"]],[R[756]]]],[11,"clone",R[732],E,30,[[["self"]],[R[757]]]],[11,"clone",R[733],E,31,[[["self"]],[R[637]]]],[11,"clone",R[734],E,32,[[["self"]],[R[758]]]],[11,"clone",E,E,33,[[["self"]],[R[759]]]],[11,"clone",R[735],E,34,[[["self"]],[R[640]]]],[11,"clone",R[737],E,37,[[["self"]],[R[760]]]],[11,"clone",R[738],E,38,[[["self"]],[R[691]]]],[11,"clone",R[683],E,42,[[["self"]],[R[682]]]],[11,"clone",R[741],E,44,[[["self"]],["wasmpagemanager"]]],[11,"clone",R[742],E,45,[[["self"]],[R[688]]]],[11,"clone",E,E,46,[[["self"]],[R[689]]]],[11,"clone",E,E,49,[[["self"]],[R[774]]]],[11,"clone",E,E,47,[[["self"]],[R[775]]]],[11,"clone",E,E,48,[[["self"]],[R[673]]]],[11,"clone",R[743],E,53,[[["self"]],[R[762]]]],[11,"clone",E,E,54,[[["self"]],[R[763]]]],[11,"clone",E,E,51,[[["self"]],[R[655]]]],[11,"clone",E,E,52,[[["self"]],[R[751]]]],[11,"clone",R[744],E,55,[[["self"]],[R[764]]]],[11,"clone",R[654],E,35,[[["self"]],[R[650]]]],[11,"clone",E,E,36,[[["self"]],[R[687]]]],[11,"clone",R[745],E,57,[[["self"]],[R[776]]]],[11,"clone",R[746],E,59,[[["self"]],[R[652]]]],[11,"clone",E,E,58,[[["self"]],[R[765]]]],[11,"clone",R[747],E,61,[[["self"]],["signal"]]],[11,"clone",E,E,60,[[["self"]],[R[766]]]],[11,"clone",R[748],E,62,[[["self"]],["state"]]],[11,"clone",E,E,63,[[["self"]],[R[599]]]],[11,"into",R[732],E,30,[[],[R[437]]]],[11,R[94],R[683],E,41,[[["self"]],[R[0]]]],[11,R[131],R[708],E,6,[[],[R[768]]]],[11,R[131],R[743],E,53,[[],["self"]]],[11,R[131],E,E,51,[[],[R[655]]]],[11,"fmt",R[742],E,49,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[746],E,59,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[706],E,5,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,4,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,0,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,1,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,2,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,3,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[708],E,8,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,6,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,7,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[712],E,12,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,13,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,11,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[713],E,17,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,14,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,15,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[721],E,20,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,19,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[723],E,24,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[633],E,27,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[731],E,28,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,29,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[732],E,30,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[733],E,31,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[734],E,32,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,33,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[735],E,34,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[737],E,37,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[738],E,38,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[671],E,39,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[683],E,40,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,41,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,42,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[741],E,44,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[742],E,49,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[743],E,53,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,54,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,51,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,52,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[744],E,55,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[654],E,35,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,36,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[746],E,59,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,58,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[747],E,61,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,60,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[748],E,62,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,63,[[["self"],[R[135]]],[R[6]]]],[11,R[136],R[671],E,39,[[["str"]],[R[6]]]],[11,R[136],R[683],E,40,[[["str"]],[R[6]]]],[11,R[78],R[712],E,13,[[[R[26]]],[R[6]]]],[11,R[78],E,E,13,[[[R[26]]],[R[6]]]],[11,R[78],E,E,11,[[[R[26]]],[R[6]]]],[11,R[78],E,E,11,[[[R[26]]],[R[6]]]],[11,R[78],R[721],E,19,[[[R[26]]],[R[6]]]],[11,R[78],E,E,19,[[[R[26]]],[R[6]]]],[11,R[78],R[731],E,28,[[[R[26]]],[R[6]]]],[11,R[78],E,E,28,[[[R[26]]],[R[6]]]],[11,R[78],E,E,29,[[[R[26]]],[R[6]]]],[11,R[78],E,E,29,[[[R[26]]],[R[6]]]],[11,R[78],R[732],E,30,[[[R[26]]],[R[6]]]],[11,R[78],E,E,30,[[[R[26]]],[R[6]]]],[11,R[78],R[734],E,32,[[[R[26]]],[R[6]]]],[11,R[78],E,E,32,[[[R[26]]],[R[6]]]],[11,R[78],E,E,33,[[[R[26]]],[R[6]]]],[11,R[78],E,E,33,[[[R[26]]],[R[6]]]],[11,R[78],R[683],E,41,[[[R[26]]],[R[6]]]],[11,R[78],E,E,41,[[[R[26]]],[R[6]]]],[11,R[78],R[743],E,53,[[[R[26]]],[R[6]]]],[11,R[78],E,E,53,[[[R[26]]],[R[6]]]],[11,R[78],E,E,52,[[[R[26]]],[R[6]]]],[11,R[78],E,E,52,[[[R[26]]],[R[6]]]],[11,R[78],R[746],E,59,[[[R[26]]],[R[6]]]],[11,R[78],E,E,59,[[[R[26]]],[R[6]]]],[11,R[78],E,E,58,[[[R[26]]],[R[6]]]],[11,R[78],E,E,58,[[[R[26]]],[R[6]]]],[11,R[78],R[747],E,61,[[[R[26]]],[R[6]]]],[11,R[78],E,E,61,[[[R[26]]],[R[6]]]],[11,R[78],E,E,60,[[[R[26]]],[R[6]]]],[11,R[78],E,E,60,[[[R[26]]],[R[6]]]],[11,"hash",R[706],"@TODO dangerous when persisted! snowflake only guarantees…",5,[[["self"],["h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",R[737],E,37,[[["self"],["__h"]]]],[11,"hash",R[743],E,54,[[["self"],["__h"]]]],[11,"hash",R[654],E,35,[[["self"],["__h"]]]],[11,"hash",E,E,36,[[["self"],["__h"]]]],[11,"hash",R[746],E,59,[[["self"],["__h"]]]],[11,"poll",R[707],E,64,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[715],E,65,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[716],E,66,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[718],E,67,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[719],E,68,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[720],E,69,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[724],E,71,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[725],E,72,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[726],E,73,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[727],E,74,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[728],E,75,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[729],E,76,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[730],E,77,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[736],E,78,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[737],E,79,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[738],E,80,[[["self"],["pin"],[R[620]]],["poll"]]],[11,"poll",R[739],E,81,[[["self"],["pin"],[R[620]]],["poll"]]],[11,R[140],R[712],E,13,[[["self"]],[R[140]]]],[11,R[141],E,E,13,[[[R[140]]],[R[142]]]],[11,R[12],E,E,13,[[["self"]],[R[12]]]],[11,R[140],R[721],E,19,[[["self"]],[R[140]]]],[11,R[141],E,E,19,[[[R[140]]],[R[142]]]],[11,R[12],E,E,19,[[["self"]],[R[12]]]],[11,R[140],R[732],E,30,[[["self"]],[R[140]]]],[11,R[141],E,E,30,[[[R[140]]],[[R[6],[R[371]]],[R[371]]]]],[11,R[12],R[743],E,52,[[["self"]],[R[12]]]],[11,R[140],E,E,52,[[["self"]],[R[140]]]],[11,R[141],E,E,52,[[[R[140]]],[R[142]]]],[11,R[138],R[706],E,5,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,4,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,0,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,1,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,2,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,3,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[712],E,13,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,11,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[713],E,17,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,14,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,15,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[721],E,19,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[731],E,28,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,29,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[732],E,30,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[733],E,31,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[734],E,32,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,33,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[737],E,37,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[738],E,38,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[683],E,41,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,42,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[743],E,53,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,54,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,52,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[744],E,55,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[654],E,35,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[746],E,59,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,58,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[747],E,61,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,60,[[["self"],["__s"]],[R[6]]]],[11,R[139],R[712],E,13,[[["__d"]],[R[6]]]],[11,R[139],E,E,11,[[["__d"]],[R[6]]]],[11,R[139],R[721],E,19,[[["__d"]],[R[6]]]],[11,R[139],R[731],E,28,[[["__d"]],[R[6]]]],[11,R[139],E,E,29,[[["__d"]],[R[6]]]],[11,R[139],R[732],E,30,[[["__d"]],[R[6]]]],[11,R[139],R[733],E,31,[[["__d"]],[R[6]]]],[11,R[139],R[734],E,32,[[["__d"]],[R[6]]]],[11,R[139],E,E,33,[[["__d"]],[R[6]]]],[11,R[139],R[738],E,38,[[["__d"]],[R[6]]]],[11,R[139],R[683],E,41,[[["__d"]],[R[6]]]],[11,R[139],E,E,42,[[["__d"]],[R[6]]]],[11,R[139],R[743],E,53,[[["__d"]],[R[6]]]],[11,R[139],E,E,54,[[["__d"]],[R[6]]]],[11,R[139],E,E,52,[[["__d"]],[R[6]]]],[11,R[139],R[746],E,59,[[["__d"]],[R[6]]]],[11,R[139],E,E,58,[[["__d"]],[R[6]]]],[11,R[139],R[747],E,60,[[["__d"]],[R[6]]]],[11,R[139],E,E,61,[[["d"]],[[R[6],["signal"]],["signal"]]]],[11,"from_i64",R[671],E,39,[[["i64"]],[R[13]]]],[11,"from_u64",E,E,39,[[["u64"]],[R[13]]]],[11,"from_i64",R[683],E,40,[[["i64"]],[R[13]]]],[11,"from_u64",E,E,40,[[["u64"]],[R[13]]]],[11,"invoke_index",R[742],E,48,[[["self"],["usize"],[R[672]]],[R[304]]]]],"p":[[3,R[777]],[3,R[778]],[3,R[779]],[3,R[780]],[4,"Action"],[3,R[781]],[3,R[782]],[4,R[783]],[3,R[563]],[3,R[784]],[3,R[785]],[4,R[628]],[3,R[786]],[3,R[787]],[4,R[788]],[4,R[789]],[3,R[790]],[3,R[791]],[3,"Context"],[3,R[792]],[3,"DhtStore"],[8,R[793]],[3,"Observer"],[3,"Instance"],[3,R[794]],[8,"Logger"],[3,R[795]],[4,R[628]],[3,R[796]],[4,R[797]],[4,R[798]],[3,R[799]],[4,R[800]],[4,R[801]],[3,R[802]],[3,R[803]],[3,R[804]],[3,R[805]],[3,R[806]],[4,R[807]],[4,"Callback"],[4,R[808]],[4,R[809]],[3,R[810]],[3,R[811]],[3,R[812]],[3,R[813]],[3,"CallData"],[3,"Runtime"],[4,R[814]],[8,"Defn"],[3,R[815]],[3,R[816]],[4,R[817]],[3,R[818]],[4,R[819]],[8,R[820]],[3,R[821]],[3,R[822]],[4,R[823]],[3,R[824]],[4,"Signal"],[3,"State"],[3,R[825]],[3,R[826]],[3,R[827]],[3,R[828]],[3,R[829]],[3,R[830]],[3,R[831]],[3,R[832]],[3,R[833]],[3,R[834]],[3,R[835]],[3,R[836]],[3,R[837]],[3,R[838]],[3,R[839]],[3,R[840]],[3,R[841]],[3,R[842]],[3,R[843]]]};
searchIndex["holochain_core_api_c_binding"]={"doc":E,"i":[[5,"holochain_new","holochain_core_api_c_binding",E,N,[[]]],[5,"holochain_load",E,E,N,[[]]],[5,"holochain_start",E,E,N,[[],["bool"]]],[5,"holochain_stop",E,E,N,[[],["bool"]]],[5,"holochain_call",E,E,N,[[]]]],"p":[]};
searchIndex["holochain_core_types"]={"doc":"Holochain Core Types","i":[[0,R[69],R[14],"This module contains definitions of the ChainHeader…",N,N],[3,R[25],R[77],"ChainHeader of a source chain \"Item\" The address of the…",N,N],[5,"test_chain_header",E,R[8],N,[[],[R[9]]]],[5,"test_chain_header_with_sig",E,R[8],N,[[["str"]],[R[9]]]],[5,"test_provenances",E,E,N,[[["str"]],[[R[10]],["vec",[R[10]]]]]],[11,"new",E,"build a new ChainHeader from a chain, entry type and…",0,[[[R[11]],[R[68]],[R[12]],[R[13]]],["self"]]],[11,R[33],E,"entry_type getter",0,[[["self"]],[R[11]]]],[11,"timestamp",E,"timestamp getter",0,[[["self"]],[R[68]]]],[11,"link",E,"link getter",0,[[["self"]],[[R[12]],[R[13],[R[12]]]]]],[11,R[192],E,"entry_address getter",0,[[["self"]],[R[12]]]],[11,"link_same_type",E,"link_same_type getter",0,[[["self"]],[[R[12]],[R[13],[R[12]]]]]],[11,"link_update_delete",E,"link_update_delete getter",0,[[["self"]],[[R[12]],[R[13],[R[12]]]]]],[11,"provenances",E,"entry_signature getter",0,[[["self"]],["vec"]]],[0,R[23],R[14],"This module holds the relevant constants and an enum…",N,N],[4,R[17],R[81],"the CRUD status of a Pair is stored using an EAV, NOT in…",N,N],[13,"Live",E,E,1,N],[13,"Rejected",E,E,1,N],[13,"Deleted",E,E,1,N],[13,"Modified",E,E,1,N],[13,"Locked",E,"CRDT resolution in progress",1,N],[5,"create_crud_status_eav",E,"Create a new EAV with an entry address as the Entity,…",N,[[[R[12]],[R[114]]],[[R[15]],[R[16],[R[15]]]]]],[5,"create_crud_link_eav",E,"Create a new EAV with an old entry address as the Entity,…",N,[[[R[12]]],[[R[15]],[R[16],[R[15]]]]]],[0,"eav",R[14],E,N,N],[0,"eavi",R[19],"EAV stands for entity-attribute-value. It is a pattern…",N,N],[4,R[143],R[86],"All Attribute values are pre-defined here. If ever a…",N,N],[13,R[17],E,E,2,N],[13,"CrudLink",E,E,2,N],[13,"EntryHeader",E,E,2,N],[13,"Link",E,E,2,N],[13,R[24],E,E,2,N],[13,"LinkTag",E,E,2,N],[13,"RemovedLink",E,E,2,N],[13,"PendingEntry",E,E,2,N],[5,"new",E,E,N,[[[R[18]],[R[12]],["value"]],[[R[15]],[R[16],[R[15]]]]]],[5,"test_eav_entity",E,E,N,[[],["entry"]]],[5,"test_eav_attribute",E,E,N,[[],[R[18]]]],[5,"test_eav_value",E,E,N,[[],["entry"]]],[5,"test_eav",E,E,N,[[],[R[15]]]],[5,"test_eav_content",E,E,N,[[],[R[140]]]],[5,"test_eav_address",E,E,N,[[],[R[12]]]],[5,"eav_round_trip_test_runner",E,E,N,[[[R[18]]]]],[6,"Entity",E,"Address of AddressableContent representing the EAV entity",N,N],[6,"Value",E,"Address of AddressableContent representing the EAV value",N,N],[6,"Index",E,E,N,N],[6,"EntityAttributeValueIndex",E,"The basic struct for EntityAttributeValue triple,…",N,N],[6,R[20],E,E,N,N],[0,"query",R[19],E,N,N],[6,"EaviQuery","holochain_core_types::eav::query","Represents a set of filtering operations on the EAVI store.",N,N],[6,"EntityFilter",E,E,N,N],[6,"AttributeFilter",E,E,N,N],[6,"ValueFilter",E,E,N,N],[0,"storage",R[19],E,N,N],[3,R[144],R[88],E,N,N],[5,"increment_key_till_no_collision",E,E,N,[[[R[22],[R[15]]],[R[15]]],[[R[41],[R[15]]],[R[15]]]]],[8,R[20],E,"This provides a simple and flexible interface to define…",N,N],[10,"add_eavi",E,"Adds the given EntityAttributeValue to the…",3,[[["self"],[R[15]]],[[R[6],[R[13],R[21]]],[R[21]],[R[13],[R[15]]]]]],[10,R[108],E,"Fetch the set of EntityAttributeValues that match…",3,[[["self"],[R[109]]],[[R[6],[R[22],R[21]]],[R[22],[R[15]]],[R[21]]]]],[11,"new",E,E,4,[[],[R[127]]]],[0,"entry",R[14],"This module contains all the necessary definitions for…",N,N],[3,R[145],R[32],E,N,N],[12,"entry",E,E,5,N],[12,R[23],E,E,5,N],[12,"maybe_link_update_delete",E,E,5,N],[3,R[146],E,E,N,N],[12,"entry_with_meta",E,E,6,N],[12,R[195],E,E,6,N],[4,"Entry",E,"Structure holding actual data in a source chain \"Item\"…",N,N],[13,"App",E,E,7,N],[13,"Dna",E,E,7,N],[13,R[39],E,E,7,N],[13,R[34],E,E,7,N],[13,R[75],E,E,7,N],[13,R[24],E,E,7,N],[13,R[35],E,E,7,N],[13,R[25],E,E,7,N],[13,R[36],E,E,7,N],[13,R[27],E,E,7,N],[13,R[28],E,E,7,N],[5,"test_entry_value",E,"dummy entry value",N,[[],[R[26]]]],[5,"test_entry_content",E,E,N,[[],[R[140]]]],[5,"test_entry_value_a",E,"dummy entry content, same as test_entry_value()",N,[[],[R[26]]]],[5,"test_entry_value_b",E,"dummy entry content, differs from test_entry_value()",N,[[],[R[26]]]],[5,"test_entry_value_c",E,E,N,[[],[R[26]]]],[5,"test_sys_entry_value",E,E,N,[[],[R[40]]]],[5,"test_entry",E,"dummy entry",N,[[],["entry"]]],[5,"test_entry_with_value",E,E,N,[[["str"]],["entry"]]],[5,"expected_serialized_entry_content",E,E,N,[[],[R[26]]]],[5,"expected_entry_address",E,"the correct address for test_entry()",N,[[],[R[12]]]],[5,"test_entry_a",E,"dummy entry, same as test_entry()",N,[[],["entry"]]],[5,"test_entry_b",E,"dummy entry, differs from test_entry()",N,[[],["entry"]]],[5,"test_entry_c",E,E,N,[[],["entry"]]],[5,"test_entry_unique",E,"dummy entry with unique string content",N,[[],["entry"]]],[5,"test_sys_entry",E,E,N,[[],["entry"]]],[5,"test_sys_entry_address",E,E,N,[[],[R[12]]]],[5,"test_unpublishable_entry",E,E,N,[[],["entry"]]],[0,"cap_entries",E,E,N,N],[3,R[27],R[91],"System entry to hold a capability token claim for use as a…",N,N],[3,R[28],E,"System entry to hold a capabilities granted by the callee",N,N],[4,R[147],E,"Enum for CapabilityType. Public capabilities require…",N,N],[13,"Public",E,E,8,N],[13,"Transferable",E,E,8,N],[13,"Assigned",E,E,8,N],[4,R[148],E,"Enumeration of all Capabilities known and used by HC Core…",N,N],[13,"Public",E,"used for identifying the default public capability",9,N],[6,"CapTokenValue",E,E,N,N],[6,"CapFunctions",E,"a collection functions by zome name that are authorized…",N,N],[11,"as_str",E,E,9,[[["self"]],["str"]]],[11,"new",E,E,10,[[[R[12]],[R[29]],[R[0]]],["self"]]],[11,"token",E,E,10,[[["self"]],[R[29]]]],[11,"id",E,E,10,[[["self"]],[R[0]]]],[11,"grantor",E,E,10,[[["self"]],[R[12]]]],[11,"create",E,E,11,[[["vec",[R[12]]],[R[31]],[R[30]],["str"],[R[13],["vec"]]],[[R[21]],[R[6],[R[21]]]]]],[11,"id",E,E,11,[[["self"]],[R[0]]]],[11,"token",E,E,11,[[["self"]],[R[29]]]],[11,"cap_type",E,E,11,[[["self"]],[R[30]]]],[11,R[187],E,E,11,[[["self"]],[[R[13],["vec"]],["vec",[R[12]]]]]],[11,R[50],E,E,11,[[["self"]],[R[31]]]],[0,"deletion_entry",R[32],E,N,N],[3,R[149],R[92],E,N,N],[11,"new",E,E,12,[[[R[12]]],["self"]]],[11,"deleted_entry_address",E,E,12,[[],[R[12]]]],[0,R[33],R[32],E,N,N],[3,R[177],R[93],E,N,N],[4,R[150],E,E,N,N],[13,"App",E,E,13,N],[13,"Dna",E,E,13,N],[13,R[39],E,E,13,N],[13,R[34],E,E,13,N],[13,R[75],E,E,13,N],[13,R[24],E,E,13,N],[13,R[35],E,E,13,N],[13,R[25],E,E,13,N],[13,R[36],E,E,13,N],[13,R[28],E,E,13,N],[13,R[27],E,E,13,N],[5,"test_app_entry_type",E,"dummy entry type",N,[[],[R[37]]]],[5,"test_entry_type",E,E,N,[[],[R[11]]]],[5,"test_app_entry_type_a",E,"dummy entry type, same as test_type()",N,[[],[R[37]]]],[5,"test_entry_type_a",E,E,N,[[],[R[11]]]],[5,"test_app_entry_type_b",E,"dummy entry type, differs from test_type()",N,[[],[R[37]]]],[5,"test_entry_type_b",E,E,N,[[],[R[11]]]],[11,"is_app",E,E,13,[[["self"]],["bool"]]],[11,"is_sys",E,E,13,[[["self"]],["bool"]]],[11,"has_valid_app_name",E,"Checks entry_type_name is valid",13,[[["str"]],["bool"]]],[6,"AppEntryValue",R[32],E,N,N],[11,R[33],E,E,7,[[["self"]],[R[11]]]],[0,"error",R[14],"This module contains Error type definitions that are used…",N,N],[3,R[178],R[95],E,N,N],[3,R[151],E,"Holochain Core Error struct Any Error in Core should be…",N,N],[12,"kind",E,E,14,N],[12,"file",E,E,14,N],[12,"line",E,E,14,N],[3,R[152],E,E,N,N],[12,"ok",E,E,15,N],[12,"value",E,E,15,N],[12,"error",E,E,15,N],[4,"DnaError",E,E,N,N],[13,"ZomeNotFound",E,E,16,N],[13,"TraitNotFound",E,E,16,N],[13,"ZomeFunctionNotFound",E,E,16,N],[4,R[153],E,"Represents all possible values passed to/from wasmi…",N,N],[13,"Success",E,"@TODO make this unambiguous or remove Contextually…",17,N],[13,"Allocation",E,"A value that can be safely converted to a wasm allocation…",17,N],[13,"Failure",E,"A value that should be interpreted as an error Low bits…",17,N],[4,R[154],E,"Enum of all possible ERROR codes that a Zome API Function…",N,N],[13,"Unspecified",E,E,18,N],[13,"ArgumentDeserializationFailed",E,E,18,N],[13,"OutOfMemory",E,E,18,N],[13,"ReceivedWrongActionResult",E,E,18,N],[13,"CallbackFailed",E,E,18,N],[13,"RecursiveCallForbidden",E,E,18,N],[13,"ResponseSerializationFailed",E,E,18,N],[13,"NotAnAllocation",E,E,18,N],[13,"ZeroSizedAllocation",E,E,18,N],[13,"UnknownEntryType",E,E,18,N],[13,"MismatchWasmCallDataType",E,E,18,N],[13,"EntryNotFound",E,E,18,N],[13,"WorkflowFailed",E,E,18,N],[4,R[155],E,"TODO rename to CoreErrorKind Enum holding all Holochain…",N,N],[13,"ErrorGeneric",E,E,19,N],[13,"CryptoError",E,E,19,N],[13,R[692],E,E,19,N],[13,"LoggingError",E,E,19,N],[13,"DnaMissing",E,E,19,N],[13,"Dna",E,E,19,N],[13,"IoError",E,E,19,N],[13,"SerializationError",E,E,19,N],[13,"InvalidOperationOnSysEntry",E,E,19,N],[13,"CapabilityCheckFailed",E,E,19,N],[13,R[345],E,E,19,N],[13,"ValidationPending",E,E,19,N],[13,"Ribosome",E,E,19,N],[13,"RibosomeFailed",E,E,19,N],[13,"ConfigError",E,E,19,N],[13,"Timeout",E,E,19,N],[13,R[844],E,E,19,N],[13,"LifecycleError",E,E,19,N],[13,"DnaHashMismatch",E,E,19,N],[13,"EntryNotFoundLocally",E,E,19,N],[13,"EntryIsPrivate",E,E,19,N],[11,"from_error",E,E,17,[[[R[112]]],["self"]]],[11,"as_str",E,E,18,[[["self"]],["str"]]],[11,"from_code_int",E,E,18,[[["ribosomecodebits"]],["self"]]],[11,"from_return_code",E,E,18,[[[R[111]]],["self"]]],[6,R[179],E,"size of the integer that encodes ribosome codes",N,N],[6,R[180],E,"size of the integer that wasm sees",N,N],[6,"RibosomeCodeBits",E,"size of the integer that represents a ribosome code",N,N],[6,"HcResult",E,E,N,N],[11,"new",E,E,14,[[[R[21]]],["self"]]],[11,"new",E,E,19,[[["str"]],[R[21]]]],[11,"success",E,E,15,[[["into",[R[26]]],[R[26]]],[R[38]]]],[11,"failure",E,E,15,[[["into",[R[26]]],[R[26]]],[R[38]]]],[0,"agent",R[14],E,N,N],[3,R[39],R[96],"AgentId represents an agent in the Holochain framework.…",N,N],[12,"nick",E,"a nickname for referencing this agent",20,N],[12,"pub_sign_key",E,"the encoded public signing key of this agent (the magnifier)",20,N],[5,"test_agent_id",E,E,N,[[],[R[40]]]],[5,"test_agent_id_with_name",E,E,N,[[["str"]],[R[40]]]],[6,"Base32",E,E,N,N],[7,"GOOD_ID",E,E,N,N],[7,"BAD_ID",E,E,N,N],[7,"TOO_BAD_ID",E,E,N,N],[18,"FAKE_RAW_KEY",E,"A well-known key useful for testing and used by…",20,N],[11,"generate_fake",E,"generate an agent id with fake key",20,[[["str"]],["self"]]],[11,R[390],E,"initialize an Agent struct with `nick` and `key` that will…",20,[[["str"]],[R[41]]]],[11,"new",E,"initialize an Agent struct with `nick` and a HCID encoded…",20,[[["str"],["base32"]],["self"]]],[11,"decoded_key",E,"Get the key decoded with HCID",20,[[["self"]],[[R[41],[R[0]]],[R[0]]]]],[0,"bits_n_pieces",R[14],E,N,N],[5,"u32_high_bits","holochain_core_types::bits_n_pieces","returns the u16 high bits from a u32",N,[[["u32"]],["u16"]]],[5,"u32_low_bits",E,"returns the u16 low bits from a u32 by doing a lossy cast",N,[[["u32"]],["u16"]]],[5,"u32_split_bits",E,"splits the high and low bits of u32 into a tuple of u16,…",N,[[["u32"]]]],[5,"u32_merge_bits",E,"merges 2x u16 into a single u32",N,[[["u16"]],["u32"]]],[5,"u64_high_bits",E,E,N,[[["u64"]],["u32"]]],[5,"u64_low_bits",E,E,N,[[["u64"]],["u32"]]],[5,"u64_split_bits",E,E,N,[[["u64"]]]],[5,"u64_merge_bits",E,E,N,[[["u32"]],["u64"]]],[17,"U16_MAX",E,E,N,N],[17,"U32_MAX",E,E,N,N],[0,"chain_migrate",R[14],R[303],N,N],[3,R[36],R[97],E,N,N],[0,"dna",R[14],"dna is a library for working with holochain dna…",N,N],[3,"Dna",R[45],"Represents the top-level holochain dna object.",N,N],[12,"name",E,"The top-level \"name\" of a holochain application.",21,N],[12,R[53],E,"The top-level \"description\" of a holochain application.",21,N],[12,"version",E,"The semantic version of your holochain application.",21,N],[12,"uuid",E,"A unique identifier to distinguish your holochain…",21,N],[12,"dna_spec_version",E,"Which version of the holochain dna spec does this represent?",21,N],[12,R[48],E,"Any arbitrary application properties can be included in…",21,N],[12,"zomes",E,"An array of zomes associated with your holochain…",21,N],[0,"bridges",E,E,N,N],[3,"Bridge",R[42],"A bridge is the definition of a connection to another DNA…",N,N],[12,"presence",E,R[44],22,N],[12,"handle",E,"An arbitrary name of this bridge that is used as handle to…",22,N],[12,"reference",E,"Define what other DNA(s) to bridge to",22,N],[4,R[156],E,"This enum represents the two different ways of referring…",N,N],[13,"Address",E,"A bridge reference that defines another DNA statically by…",23,N],[12,R[185],R[43],E,23,N],[13,"Trait",R[42],"A bridge reference that defines another DNA loosely by…",23,N],[12,"traits",R[43],E,23,N],[4,R[157],R[42],R[44],N,N],[13,"Required",E,"A required bridge is a dependency to another DNA. This DNA…",24,N],[13,"Optional",E,"An optional bridge may be missing. This DNA's code can…",24,N],[0,R[186],R[45],E,N,N],[3,R[158],R[98],"a struct to hold the capability information needed to make…",N,N],[12,R[182],E,E,25,N],[12,R[10],E,E,25,N],[11,"new",E,E,25,[[[R[12]],[R[67]]],["self"]]],[0,R[54],R[45],"File holding all the structs for handling entry types…",N,N],[3,"LinksTo",R[99],"An individual object in a \"links_to\" array.",N,N],[12,"target_type",E,R[46],26,N],[12,R[47],E,"The type of this links_to entry",26,N],[3,R[159],E,"An a definition of a link from another type (including…",N,N],[12,"base_type",E,R[46],27,N],[12,R[47],E,"The link_type of this links_to entry",27,N],[3,R[160],E,"Represents an individual object in the \"zome\"…",N,N],[12,R[48],E,"Metdata associated with this entry def (e.g. description,…",28,N],[12,"sharing",E,"The sharing model of this entry type (public, private,…",28,N],[12,"links_to",E,"An array of link definitions associated with this entry type",28,N],[12,"linked_from",E,"An array of link definitions for links pointing to entries…",28,N],[4,"Sharing",E,"Enum for Zome EntryType \"sharing\" property.",N,N],[13,"Public",E,E,29,N],[13,"Private",E,E,29,N],[13,"Encrypted",E,E,29,N],[5,"serialize_entry_types",E,E,N,[[[R[49]],["s"]],[R[6]]]],[5,"deserialize_entry_types",E,E,N,[[["d"]],[[R[49]],[R[6],[R[49]]]]]],[11,R[845],E,E,29,[[],["bool"]]],[11,"new",E,"Allow sane defaults for `LinksTo::new()`.",26,[[],["self"]]],[11,"new",E,"Allow sane defaults for `LinkedFrom::new()`.",27,[[],["self"]]],[11,"new",E,"Allow sane defaults for `EntryType::new()`.",28,[[],["self"]]],[0,R[55],R[45],"File holding all the structs for handling function…",N,N],[3,R[161],R[100],"Represents the type declaration for zome function parameter",N,N],[12,"parameter_type",E,E,30,N],[12,"name",E,E,30,N],[3,R[162],E,"Represents a zome function declaration",N,N],[12,"name",E,"The name of this fn declaration.",31,N],[12,"inputs",E,E,31,N],[12,"outputs",E,E,31,N],[3,"TraitFns",E,"Represents a group of named functions in the Zomes's…",N,N],[12,R[50],E,R[51],32,N],[3,"Trait",E,"Represents an trait definition for bridging",N,N],[12,R[50],E,R[51],33,N],[11,"new",E,E,30,[[["into",[R[0]]],[R[0]]],[R[57]]]],[11,"new",E,"Allow sane defaults for `FnDecrlaration::new()`.",31,[[],["self"]]],[11,"new",E,"TraitFns Constructor",32,[[],["self"]]],[11,"new",E,"Trait Constructor",33,[[],["self"]]],[0,"traits",R[45],"Module for zome trait structures",N,N],[4,R[163],R[101],"Enumeration of all Traits known and used by HC Core…",N,N],[13,R[679],E,"Development placeholder, no production fn should use…",34,N],[13,"Public",E,"used for declaring functions that will auto-generate a…",34,N],[11,"as_str",E,E,34,[[["self"]],["str"]]],[0,"wasm",R[45],"holochain_core_types::dna::wasm is a module for managing…",N,N],[3,R[164],R[102],"Wrapper around wasmi::Module since it does not implement…",N,N],[3,"DnaWasm",E,"Represents web assembly code.",N,N],[12,"code",E,"The actual binary WebAssembly bytecode goes here.",35,N],[11,"new",E,E,36,[[["module"]],["self"]]],[11,"new",E,"Allow sane defaults for `DnaWasm::new()`.",35,[[],["self"]]],[11,"from_bytes",E,"Creates a new instance from given WASM binary",35,[[["vec",["u8"]],["u8"]],["self"]]],[11,"get_wasm_module",E,"This returns a parsed WASMi representation of the code,…",35,[[["self"]],[[R[21]],[R[6],[R[52],R[21]]],[R[52]]]]],[0,"zome",R[45],"holochain_core_types::dna::zome is a set of structs for…",N,N],[3,"Config",R[103],"Represents the \"config\" object on a \"zome\".",N,N],[3,"Zome",E,"Represents an individual \"zome\".",N,N],[12,R[53],E,"A description of this zome.",37,N],[12,"config",E,"Configuration associated with this zome. Note, this should…",37,N],[12,R[54],E,"An array of entry_types associated with this zome.",37,N],[12,"traits",E,"An array of traits defined in this zome.",37,N],[12,R[55],E,"An array of functions declared in this this zome.",37,N],[12,"code",E,"Validation code for this entry_type.",37,N],[12,"bridges",E,"A list of bridges to other DNAs that this DNA can use or…",37,N],[6,"ZomeEntryTypes",E,E,N,N],[6,"ZomeTraits",E,E,N,N],[6,"ZomeFnDeclarations",E,E,N,N],[11,"new",E,"Allow sane defaults for `Config::new()`.",38,[[],["self"]]],[11,"new",E,"Allow sane defaults for `Zome::new()`.",37,[[[R[56]],["config"],[R[56]],[R[61]],["str"]],["zome"]]],[11,R[63],E,E,37,[[["self"]],[["vec",["bridge"]],["bridge"]]]],[11,"add_fn_declaration",E,"Add a function declaration to a Zome",37,[[["self"],[R[57]],["vec",[R[57]]],[R[0]]]]],[11,"get_function",E,"Return a Function declaration from a Zome",37,[[["self"],["str"]],[[R[58]],[R[13],[R[58]]]]]],[11,"is_fn_public",E,E,37,[[["self"],["str"]],["bool"]]],[11,"new",R[45],"Create a new in-memory dna structure with some default…",21,[[],["self"]]],[11,"to_json_pretty",E,"Generate a pretty-printed json string from an in-memory…",21,[[["self"]],[[R[6],[R[0]]],[R[0]]]]],[11,"get_zome",E,"Return a Zome",21,[[["self"],["str"]],[[R[6],["zome",R[59]]],[R[59]],["zome"]]]],[11,"get_trait",E,"Return a Zome's TraitFns from a Zome and a Trait name.",21,[[["self"],["str"],["zome"]],[[R[13],[R[60]]],[R[60]]]]],[11,"get_function_with_zome_name",E,"Return a Zome Function declaration from a Zome name and…",21,[[["self"],["str"]],[[R[6],[R[58],R[59]]],[R[58]],[R[59]]]]],[11,"get_wasm_from_zome_name",E,"Find a Zome and return it's WASM bytecode",21,[[["self"],["into",[R[0]]],[R[0]]],[[R[13],[R[61]]],[R[61]]]]],[11,"get_trait_fns_with_zome_name",E,"Return a Zome's Trait functions from a Zome name and trait…",21,[[["self"],["str"]],[[R[6],[R[60],R[59]]],[R[60]],[R[59]]]]],[11,"get_zome_name_for_app_entry_type",E,"Return the name of the zome holding a specified app…",21,[[["self"],[R[37]]],[[R[13],[R[0]]],[R[0]]]]],[11,"get_entry_type_def",E,"Return the entry_type definition of a specified app…",21,[[["self"],["str"]],[[R[13],[R[62]]],[R[62]]]]],[11,"multihash",E,E,21,[[["self"]],[[R[21]],[R[6],["vec",R[21]]],["vec",["u8"]]]]],[11,R[63],E,E,21,[[["self"]],[["vec",["bridge"]],["bridge"]]]],[0,"link",R[14],"This module contains definitions for what a Link is in…",N,N],[3,"Link",R[66],E,N,N],[4,R[165],E,E,N,N],[13,"ADD",E,E,39,N],[13,"REMOVE",E,E,39,N],[4,R[166],E,E,N,N],[13,"Any",E,E,40,N],[13,"Exactly",E,E,40,N],[13,"Regex",E,E,40,N],[0,"link_data",E,E,N,N],[3,"LinkData",R[104],E,N,N],[12,R[64],E,E,41,N],[12,"link",E,E,41,N],[12,R[605],E,E,41,N],[11,"new_add",E,E,41,[[[R[9]],[R[40]],[R[12]],["str"]],["self"]]],[11,"new_delete",E,E,41,[[[R[9]],[R[40]],[R[12]],["str"]],["self"]]],[11,R[64],E,E,41,[[["self"]],[R[65]]]],[11,"link",E,E,41,[[["self"]],["link"]]],[11,"from_link",E,E,41,[[["link"],[R[9]],[R[40]],[R[65]]],["self"]]],[11,"add_from_link",E,E,41,[[["link"],[R[9]],[R[40]]],["self"]]],[11,"remove_from_link",E,E,41,[[["link"],[R[9]],[R[40]]],["self"]]],[0,"link_list",R[66],E,N,N],[3,R[35],R[105],E,N,N],[11,"new",E,E,42,[[],["self"]]],[11,"links",E,E,42,[[["self"]],["vec"]]],[11,"new",R[66],E,43,[[[R[12]],["str"]],["self"]]],[11,"base",E,E,43,[[["self"]],[R[12]]]],[11,"target",E,E,43,[[["self"]],[R[12]]]],[11,R[47],E,E,43,[[["self"]],[R[0]]]],[11,"tag",E,E,43,[[["self"]],[R[0]]]],[11,"add_entry",E,E,43,[[["self"],[R[9]],[R[40]]],["entry"]]],[11,R[346],E,E,43,[[["self"],[R[9]],[R[40]]],["entry"]]],[11,"to_regex_string",E,E,40,[[],[[R[6],[R[0],R[0]]],[R[0]]]]],[0,R[67],R[14],"The Signature type is defined here. They are used in…",N,N],[3,R[167],R[106],"Provenance is a tuple of initiating agent public key and…",N,N],[12,"0",E,E,44,N],[12,"1",E,E,44,N],[3,R[168],E,"Signature is a wrapper structure for a cryptographic…",N,N],[5,"test_signatures",E,E,N,[[],[[R[67]],["vec",[R[67]]]]]],[5,"test_signature",E,E,N,[[],[R[67]]]],[5,"test_signature_b",E,E,N,[[],[R[67]]]],[5,"test_signature_c",E,E,N,[[],[R[67]]]],[11,"new",E,"Creates a new provenance instance with source typically…",44,[[[R[12]],[R[67]]],["self"]]],[11,"source",E,E,44,[[["self"]],[R[12]]]],[11,R[67],E,E,44,[[["self"]],[R[67]]]],[11,"fake",E,E,45,[[],[R[67]]]],[0,"time",R[14],"The Iso8601 type is defined here. It is used in particular…",N,N],[3,"Timeout",R[107],"Represents a timeout for an HDK function. The usize…",N,N],[3,"Period",E,"A human-readable time Period, implemented as a…",N,N],[3,"Iso8601",E,"This struct represents datetime data recovered from a…",N,N],[5,"test_iso_8601",E,E,N,[[],[R[68]]]],[11,"new",E,E,46,[[["usize"]],["self"]]],[11,"new",E,E,47,[[["i64"],["u32"]],["self"]]],[0,"ugly",R[14],E,N,N],[5,"lax_send","holochain_core_types::ugly",E,N,[[["clone"],["debug"],["sender"],["str"]],["bool"]]],[5,"lax_send_sync",E,E,N,[[["clone"],["debug"],["sender"],["str"]],["bool"]]],[0,R[197],R[14],"This module defines structs that are used in the…",N,N],[3,R[169],R[70],E,N,N],[12,R[69],E,E,48,N],[12,R[347],E,E,48,N],[12,R[348],E,E,48,N],[12,"custom",E,E,48,N],[3,R[170],E,R[349],N,N],[12,"package",E,R[350],49,N],[12,R[351],E,R[352],49,N],[4,R[171],E,E,N,N],[13,"Entry",E,R[353],50,N],[13,R[354],E,R[355],50,N],[13,R[356],E,R[357],50,N],[13,R[358],E,R[359],50,N],[13,"Custom",E,R[360],50,N],[4,R[172],E,R[361],N,N],[13,"Create",E,R[362],51,N],[12,"entry",R[71],E,51,N],[12,R[72],E,E,51,N],[13,"Modify",R[70],R[363],51,N],[12,R[184],R[71],E,51,N],[12,R[73],E,E,51,N],[12,R[74],E,E,51,N],[12,R[72],E,E,51,N],[13,"Delete",R[70],R[364],51,N],[12,R[73],R[71],E,51,N],[12,R[74],E,E,51,N],[12,R[72],E,E,51,N],[4,R[173],R[70],R[365],N,N],[13,R[75],E,R[366],52,N],[12,"link",R[76],E,52,N],[12,R[72],E,E,52,N],[13,R[24],R[70],R[367],52,N],[12,"link",R[76],E,52,N],[12,R[72],E,E,52,N],[4,R[174],R[70],E,N,N],[13,"Chain",E,E,53,N],[13,"Dht",E,E,53,N],[13,"Meta",E,E,53,N],[4,R[175],E,E,N,N],[13,"Create",E,E,54,N],[13,"Modify",E,E,54,N],[13,"Delete",E,E,54,N],[4,R[176],E,E,N,N],[13,"Create",E,E,55,N],[13,"Delete",E,E,55,N],[11,R[368],E,E,48,[[[R[9]]],[R[125]]]],[11,"sources",E,R[369],49,[[["self"]],[[R[12]],["vec",[R[12]]]]]],[17,"GIT_HASH",R[14],E,N,N],[11,"from",R[77],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[82],E,E,0,[[["self"]],[T]]],[11,R[83],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[[U]],[R[6]]]],[11,R[79],E,E,0,[[],[R[6]]]],[11,R[89],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"]],[R[90]]]],[11,R[85],E,E,0,[[["self"]]]],[11,"from",R[81],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[82],E,E,1,[[["self"]],[T]]],[11,R[83],E,E,1,[[["self"],[T]]]],[11,R[78],E,E,1,[[[U]],[R[6]]]],[11,R[79],E,E,1,[[],[R[6]]]],[11,R[89],E,E,1,[[["self"]],[T]]],[11,R[80],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"]],[R[90]]]],[11,R[87],E,E,1,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,1,[[["self"]]]],[11,"from",R[86],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[94],E,E,2,[[["self"]],[R[0]]]],[11,R[82],E,E,2,[[["self"]],[T]]],[11,R[83],E,E,2,[[["self"],[T]]]],[11,R[78],E,E,2,[[[U]],[R[6]]]],[11,R[79],E,E,2,[[],[R[6]]]],[11,R[89],E,E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"]],[R[90]]]],[11,R[87],E,E,2,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,2,[[["self"]]]],[11,"from",R[88],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[82],E,E,4,[[["self"]],[T]]],[11,R[83],E,E,4,[[["self"],[T]]]],[11,R[78],E,E,4,[[[U]],[R[6]]]],[11,R[79],E,E,4,[[],[R[6]]]],[11,R[89],E,E,4,[[["self"]],[T]]],[11,R[80],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"]],[R[90]]]],[11,R[85],E,E,4,[[["self"]]]],[11,"from",R[32],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[82],E,E,5,[[["self"]],[T]]],[11,R[83],E,E,5,[[["self"],[T]]]],[11,R[78],E,E,5,[[[U]],[R[6]]]],[11,R[79],E,E,5,[[],[R[6]]]],[11,R[89],E,E,5,[[["self"]],[T]]],[11,R[80],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"]],[R[90]]]],[11,R[85],E,E,5,[[["self"]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[82],E,E,6,[[["self"]],[T]]],[11,R[83],E,E,6,[[["self"],[T]]]],[11,R[78],E,E,6,[[[U]],[R[6]]]],[11,R[79],E,E,6,[[],[R[6]]]],[11,R[89],E,E,6,[[["self"]],[T]]],[11,R[80],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"]],[R[90]]]],[11,R[85],E,E,6,[[["self"]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[82],E,E,7,[[["self"]],[T]]],[11,R[83],E,E,7,[[["self"],[T]]]],[11,R[78],E,E,7,[[[U]],[R[6]]]],[11,R[79],E,E,7,[[],[R[6]]]],[11,R[89],E,E,7,[[["self"]],[T]]],[11,R[80],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"]],[R[90]]]],[11,R[85],E,E,7,[[["self"]]]],[11,"from",R[91],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[82],E,E,10,[[["self"]],[T]]],[11,R[83],E,E,10,[[["self"],[T]]]],[11,R[78],E,E,10,[[[U]],[R[6]]]],[11,R[79],E,E,10,[[],[R[6]]]],[11,R[89],E,E,10,[[["self"]],[T]]],[11,R[80],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"]],[R[90]]]],[11,R[85],E,E,10,[[["self"]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[82],E,E,11,[[["self"]],[T]]],[11,R[83],E,E,11,[[["self"],[T]]]],[11,R[78],E,E,11,[[[U]],[R[6]]]],[11,R[79],E,E,11,[[],[R[6]]]],[11,R[89],E,E,11,[[["self"]],[T]]],[11,R[80],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"]],[R[90]]]],[11,R[85],E,E,11,[[["self"]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[82],E,E,8,[[["self"]],[T]]],[11,R[83],E,E,8,[[["self"],[T]]]],[11,R[78],E,E,8,[[[U]],[R[6]]]],[11,R[79],E,E,8,[[],[R[6]]]],[11,R[89],E,E,8,[[["self"]],[T]]],[11,R[80],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"]],[R[90]]]],[11,R[85],E,E,8,[[["self"]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[78],E,E,9,[[[U]],[R[6]]]],[11,R[79],E,E,9,[[],[R[6]]]],[11,R[89],E,E,9,[[["self"]],[T]]],[11,R[80],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"]],[R[90]]]],[11,"from",R[92],E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[82],E,E,12,[[["self"]],[T]]],[11,R[83],E,E,12,[[["self"],[T]]]],[11,R[78],E,E,12,[[[U]],[R[6]]]],[11,R[79],E,E,12,[[],[R[6]]]],[11,R[89],E,E,12,[[["self"]],[T]]],[11,R[80],E,E,12,[[["self"]],[T]]],[11,R[84],E,E,12,[[["self"]],[R[90]]]],[11,R[85],E,E,12,[[["self"]]]],[11,"from",R[93],E,56,[[[T]],[T]]],[11,"into",E,E,56,[[],[U]]],[11,R[94],E,E,56,[[["self"]],[R[0]]]],[11,R[82],E,E,56,[[["self"]],[T]]],[11,R[83],E,E,56,[[["self"],[T]]]],[11,R[78],E,E,56,[[[U]],[R[6]]]],[11,R[79],E,E,56,[[],[R[6]]]],[11,R[89],E,E,56,[[["self"]],[T]]],[11,R[80],E,E,56,[[["self"]],[T]]],[11,R[84],E,E,56,[[["self"]],[R[90]]]],[11,R[87],E,E,56,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,56,[[["self"]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[94],E,E,13,[[["self"]],[R[0]]]],[11,R[82],E,E,13,[[["self"]],[T]]],[11,R[83],E,E,13,[[["self"],[T]]]],[11,R[78],E,E,13,[[[U]],[R[6]]]],[11,R[79],E,E,13,[[],[R[6]]]],[11,R[89],E,E,13,[[["self"]],[T]]],[11,R[80],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"]],[R[90]]]],[11,R[87],E,E,13,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,13,[[["self"]]]],[11,"from",R[95],E,57,[[[T]],[T]]],[11,"into",E,E,57,[[],[U]]],[11,R[94],E,E,57,[[["self"]],[R[0]]]],[11,R[82],E,E,57,[[["self"]],[T]]],[11,R[83],E,E,57,[[["self"],[T]]]],[11,R[78],E,E,57,[[[U]],[R[6]]]],[11,R[79],E,E,57,[[],[R[6]]]],[11,R[89],E,E,57,[[["self"]],[T]]],[11,R[80],E,E,57,[[["self"]],[T]]],[11,R[84],E,E,57,[[["self"]],[R[90]]]],[11,R[85],E,E,57,[[["self"]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[94],E,E,14,[[["self"]],[R[0]]]],[11,R[82],E,E,14,[[["self"]],[T]]],[11,R[83],E,E,14,[[["self"],[T]]]],[11,R[78],E,E,14,[[[U]],[R[6]]]],[11,R[79],E,E,14,[[],[R[6]]]],[11,R[89],E,E,14,[[["self"]],[T]]],[11,R[80],E,E,14,[[["self"]],[T]]],[11,R[84],E,E,14,[[["self"]],[R[90]]]],[11,R[87],E,E,14,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,14,[[["self"]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[78],E,E,15,[[[U]],[R[6]]]],[11,R[79],E,E,15,[[],[R[6]]]],[11,R[89],E,E,15,[[["self"]],[T]]],[11,R[80],E,E,15,[[["self"]],[T]]],[11,R[84],E,E,15,[[["self"]],[R[90]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[94],E,E,16,[[["self"]],[R[0]]]],[11,R[82],E,E,16,[[["self"]],[T]]],[11,R[83],E,E,16,[[["self"],[T]]]],[11,R[78],E,E,16,[[[U]],[R[6]]]],[11,R[79],E,E,16,[[],[R[6]]]],[11,R[89],E,E,16,[[["self"]],[T]]],[11,R[80],E,E,16,[[["self"]],[T]]],[11,R[84],E,E,16,[[["self"]],[R[90]]]],[11,R[87],E,E,16,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,16,[[["self"]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[94],E,E,17,[[["self"]],[R[0]]]],[11,R[82],E,E,17,[[["self"]],[T]]],[11,R[83],E,E,17,[[["self"],[T]]]],[11,R[78],E,E,17,[[[U]],[R[6]]]],[11,R[79],E,E,17,[[],[R[6]]]],[11,R[89],E,E,17,[[["self"]],[T]]],[11,R[80],E,E,17,[[["self"]],[T]]],[11,R[84],E,E,17,[[["self"]],[R[90]]]],[11,R[85],E,E,17,[[["self"]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[94],E,E,18,[[["self"]],[R[0]]]],[11,R[82],E,E,18,[[["self"]],[T]]],[11,R[83],E,E,18,[[["self"],[T]]]],[11,R[78],E,E,18,[[[U]],[R[6]]]],[11,R[79],E,E,18,[[],[R[6]]]],[11,R[89],E,E,18,[[["self"]],[T]]],[11,R[80],E,E,18,[[["self"]],[T]]],[11,R[84],E,E,18,[[["self"]],[R[90]]]],[11,R[87],E,E,18,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,18,[[["self"]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[94],E,E,19,[[["self"]],[R[0]]]],[11,R[82],E,E,19,[[["self"]],[T]]],[11,R[83],E,E,19,[[["self"],[T]]]],[11,R[78],E,E,19,[[[U]],[R[6]]]],[11,R[79],E,E,19,[[],[R[6]]]],[11,R[89],E,E,19,[[["self"]],[T]]],[11,R[80],E,E,19,[[["self"]],[T]]],[11,R[84],E,E,19,[[["self"]],[R[90]]]],[11,R[87],E,E,19,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,19,[[["self"]]]],[11,"from",R[96],E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[82],E,E,20,[[["self"]],[T]]],[11,R[83],E,E,20,[[["self"],[T]]]],[11,R[78],E,E,20,[[[U]],[R[6]]]],[11,R[79],E,E,20,[[],[R[6]]]],[11,R[89],E,E,20,[[["self"]],[T]]],[11,R[80],E,E,20,[[["self"]],[T]]],[11,R[84],E,E,20,[[["self"]],[R[90]]]],[11,R[85],E,E,20,[[["self"]]]],[11,"from",R[97],E,58,[[[T]],[T]]],[11,"into",E,E,58,[[],[U]]],[11,R[82],E,E,58,[[["self"]],[T]]],[11,R[83],E,E,58,[[["self"],[T]]]],[11,R[78],E,E,58,[[[U]],[R[6]]]],[11,R[79],E,E,58,[[],[R[6]]]],[11,R[89],E,E,58,[[["self"]],[T]]],[11,R[80],E,E,58,[[["self"]],[T]]],[11,R[84],E,E,58,[[["self"]],[R[90]]]],[11,R[85],E,E,58,[[["self"]]]],[11,"from",R[45],E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[82],E,E,21,[[["self"]],[T]]],[11,R[83],E,E,21,[[["self"],[T]]]],[11,R[78],E,E,21,[[[U]],[R[6]]]],[11,R[79],E,E,21,[[],[R[6]]]],[11,R[89],E,E,21,[[["self"]],[T]]],[11,R[80],E,E,21,[[["self"]],[T]]],[11,R[84],E,E,21,[[["self"]],[R[90]]]],[11,R[85],E,E,21,[[["self"]]]],[11,"from",R[42],E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[82],E,E,22,[[["self"]],[T]]],[11,R[83],E,E,22,[[["self"],[T]]]],[11,R[78],E,E,22,[[[U]],[R[6]]]],[11,R[79],E,E,22,[[],[R[6]]]],[11,R[89],E,E,22,[[["self"]],[T]]],[11,R[80],E,E,22,[[["self"]],[T]]],[11,R[84],E,E,22,[[["self"]],[R[90]]]],[11,R[85],E,E,22,[[["self"]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[82],E,E,23,[[["self"]],[T]]],[11,R[83],E,E,23,[[["self"],[T]]]],[11,R[78],E,E,23,[[[U]],[R[6]]]],[11,R[79],E,E,23,[[],[R[6]]]],[11,R[89],E,E,23,[[["self"]],[T]]],[11,R[80],E,E,23,[[["self"]],[T]]],[11,R[84],E,E,23,[[["self"]],[R[90]]]],[11,R[85],E,E,23,[[["self"]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[82],E,E,24,[[["self"]],[T]]],[11,R[83],E,E,24,[[["self"],[T]]]],[11,R[78],E,E,24,[[[U]],[R[6]]]],[11,R[79],E,E,24,[[],[R[6]]]],[11,R[89],E,E,24,[[["self"]],[T]]],[11,R[80],E,E,24,[[["self"]],[T]]],[11,R[84],E,E,24,[[["self"]],[R[90]]]],[11,R[85],E,E,24,[[["self"]]]],[11,"from",R[98],E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[82],E,E,25,[[["self"]],[T]]],[11,R[83],E,E,25,[[["self"],[T]]]],[11,R[78],E,E,25,[[[U]],[R[6]]]],[11,R[79],E,E,25,[[],[R[6]]]],[11,R[89],E,E,25,[[["self"]],[T]]],[11,R[80],E,E,25,[[["self"]],[T]]],[11,R[84],E,E,25,[[["self"]],[R[90]]]],[11,R[87],E,E,25,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,25,[[["self"]]]],[11,"from",R[99],E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[82],E,E,26,[[["self"]],[T]]],[11,R[83],E,E,26,[[["self"],[T]]]],[11,R[78],E,E,26,[[[U]],[R[6]]]],[11,R[79],E,E,26,[[],[R[6]]]],[11,R[89],E,E,26,[[["self"]],[T]]],[11,R[80],E,E,26,[[["self"]],[T]]],[11,R[84],E,E,26,[[["self"]],[R[90]]]],[11,R[85],E,E,26,[[["self"]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[82],E,E,27,[[["self"]],[T]]],[11,R[83],E,E,27,[[["self"],[T]]]],[11,R[78],E,E,27,[[[U]],[R[6]]]],[11,R[79],E,E,27,[[],[R[6]]]],[11,R[89],E,E,27,[[["self"]],[T]]],[11,R[80],E,E,27,[[["self"]],[T]]],[11,R[84],E,E,27,[[["self"]],[R[90]]]],[11,R[85],E,E,27,[[["self"]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[82],E,E,28,[[["self"]],[T]]],[11,R[83],E,E,28,[[["self"],[T]]]],[11,R[78],E,E,28,[[[U]],[R[6]]]],[11,R[79],E,E,28,[[],[R[6]]]],[11,R[89],E,E,28,[[["self"]],[T]]],[11,R[80],E,E,28,[[["self"]],[T]]],[11,R[84],E,E,28,[[["self"]],[R[90]]]],[11,R[85],E,E,28,[[["self"]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[82],E,E,29,[[["self"]],[T]]],[11,R[83],E,E,29,[[["self"],[T]]]],[11,R[78],E,E,29,[[[U]],[R[6]]]],[11,R[79],E,E,29,[[],[R[6]]]],[11,R[89],E,E,29,[[["self"]],[T]]],[11,R[80],E,E,29,[[["self"]],[T]]],[11,R[84],E,E,29,[[["self"]],[R[90]]]],[11,R[85],E,E,29,[[["self"]]]],[11,"from",R[100],E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[82],E,E,30,[[["self"]],[T]]],[11,R[83],E,E,30,[[["self"],[T]]]],[11,R[78],E,E,30,[[[U]],[R[6]]]],[11,R[79],E,E,30,[[],[R[6]]]],[11,R[89],E,E,30,[[["self"]],[T]]],[11,R[80],E,E,30,[[["self"]],[T]]],[11,R[84],E,E,30,[[["self"]],[R[90]]]],[11,R[85],E,E,30,[[["self"]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[82],E,E,31,[[["self"]],[T]]],[11,R[83],E,E,31,[[["self"],[T]]]],[11,R[78],E,E,31,[[[U]],[R[6]]]],[11,R[79],E,E,31,[[],[R[6]]]],[11,R[89],E,E,31,[[["self"]],[T]]],[11,R[80],E,E,31,[[["self"]],[T]]],[11,R[84],E,E,31,[[["self"]],[R[90]]]],[11,R[85],E,E,31,[[["self"]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[82],E,E,32,[[["self"]],[T]]],[11,R[83],E,E,32,[[["self"],[T]]]],[11,R[78],E,E,32,[[[U]],[R[6]]]],[11,R[79],E,E,32,[[],[R[6]]]],[11,R[89],E,E,32,[[["self"]],[T]]],[11,R[80],E,E,32,[[["self"]],[T]]],[11,R[84],E,E,32,[[["self"]],[R[90]]]],[11,R[85],E,E,32,[[["self"]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[82],E,E,33,[[["self"]],[T]]],[11,R[83],E,E,33,[[["self"],[T]]]],[11,R[78],E,E,33,[[[U]],[R[6]]]],[11,R[79],E,E,33,[[],[R[6]]]],[11,R[89],E,E,33,[[["self"]],[T]]],[11,R[80],E,E,33,[[["self"]],[T]]],[11,R[84],E,E,33,[[["self"]],[R[90]]]],[11,R[85],E,E,33,[[["self"]]]],[11,"from",R[101],E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[78],E,E,34,[[[U]],[R[6]]]],[11,R[79],E,E,34,[[],[R[6]]]],[11,R[89],E,E,34,[[["self"]],[T]]],[11,R[80],E,E,34,[[["self"]],[T]]],[11,R[84],E,E,34,[[["self"]],[R[90]]]],[11,"from",R[102],E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[82],E,E,36,[[["self"]],[T]]],[11,R[83],E,E,36,[[["self"],[T]]]],[11,R[78],E,E,36,[[[U]],[R[6]]]],[11,R[79],E,E,36,[[],[R[6]]]],[11,R[89],E,E,36,[[["self"]],[T]]],[11,R[80],E,E,36,[[["self"]],[T]]],[11,R[84],E,E,36,[[["self"]],[R[90]]]],[11,R[87],E,E,36,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,36,[[["self"]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[82],E,E,35,[[["self"]],[T]]],[11,R[83],E,E,35,[[["self"],[T]]]],[11,R[78],E,E,35,[[[U]],[R[6]]]],[11,R[79],E,E,35,[[],[R[6]]]],[11,R[89],E,E,35,[[["self"]],[T]]],[11,R[80],E,E,35,[[["self"]],[T]]],[11,R[84],E,E,35,[[["self"]],[R[90]]]],[11,R[85],E,E,35,[[["self"]]]],[11,"from",R[103],E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[82],E,E,38,[[["self"]],[T]]],[11,R[83],E,E,38,[[["self"],[T]]]],[11,R[78],E,E,38,[[[U]],[R[6]]]],[11,R[79],E,E,38,[[],[R[6]]]],[11,R[89],E,E,38,[[["self"]],[T]]],[11,R[80],E,E,38,[[["self"]],[T]]],[11,R[84],E,E,38,[[["self"]],[R[90]]]],[11,R[85],E,E,38,[[["self"]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[82],E,E,37,[[["self"]],[T]]],[11,R[83],E,E,37,[[["self"],[T]]]],[11,R[78],E,E,37,[[[U]],[R[6]]]],[11,R[79],E,E,37,[[],[R[6]]]],[11,R[89],E,E,37,[[["self"]],[T]]],[11,R[80],E,E,37,[[["self"]],[T]]],[11,R[84],E,E,37,[[["self"]],[R[90]]]],[11,R[87],E,E,37,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,37,[[["self"]]]],[11,"from",R[66],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[82],E,E,43,[[["self"]],[T]]],[11,R[83],E,E,43,[[["self"],[T]]]],[11,R[78],E,E,43,[[[U]],[R[6]]]],[11,R[79],E,E,43,[[],[R[6]]]],[11,R[89],E,E,43,[[["self"]],[T]]],[11,R[80],E,E,43,[[["self"]],[T]]],[11,R[84],E,E,43,[[["self"]],[R[90]]]],[11,R[87],E,E,43,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,43,[[["self"]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[82],E,E,39,[[["self"]],[T]]],[11,R[83],E,E,39,[[["self"],[T]]]],[11,R[78],E,E,39,[[[U]],[R[6]]]],[11,R[79],E,E,39,[[],[R[6]]]],[11,R[89],E,E,39,[[["self"]],[T]]],[11,R[80],E,E,39,[[["self"]],[T]]],[11,R[84],E,E,39,[[["self"]],[R[90]]]],[11,R[85],E,E,39,[[["self"]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[78],E,E,40,[[[U]],[R[6]]]],[11,R[79],E,E,40,[[],[R[6]]]],[11,R[89],E,E,40,[[["self"]],[T]]],[11,R[80],E,E,40,[[["self"]],[T]]],[11,R[84],E,E,40,[[["self"]],[R[90]]]],[11,"from",R[104],E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[82],E,E,41,[[["self"]],[T]]],[11,R[83],E,E,41,[[["self"],[T]]]],[11,R[78],E,E,41,[[[U]],[R[6]]]],[11,R[79],E,E,41,[[],[R[6]]]],[11,R[89],E,E,41,[[["self"]],[T]]],[11,R[80],E,E,41,[[["self"]],[T]]],[11,R[84],E,E,41,[[["self"]],[R[90]]]],[11,R[85],E,E,41,[[["self"]]]],[11,"from",R[105],E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[82],E,E,42,[[["self"]],[T]]],[11,R[83],E,E,42,[[["self"],[T]]]],[11,R[78],E,E,42,[[[U]],[R[6]]]],[11,R[79],E,E,42,[[],[R[6]]]],[11,R[89],E,E,42,[[["self"]],[T]]],[11,R[80],E,E,42,[[["self"]],[T]]],[11,R[84],E,E,42,[[["self"]],[R[90]]]],[11,R[85],E,E,42,[[["self"]]]],[11,"from",R[106],E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[82],E,E,44,[[["self"]],[T]]],[11,R[83],E,E,44,[[["self"],[T]]]],[11,R[78],E,E,44,[[[U]],[R[6]]]],[11,R[79],E,E,44,[[],[R[6]]]],[11,R[89],E,E,44,[[["self"]],[T]]],[11,R[80],E,E,44,[[["self"]],[T]]],[11,R[84],E,E,44,[[["self"]],[R[90]]]],[11,R[87],E,E,44,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,44,[[["self"]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[82],E,E,45,[[["self"]],[T]]],[11,R[83],E,E,45,[[["self"],[T]]]],[11,R[78],E,E,45,[[[U]],[R[6]]]],[11,R[79],E,E,45,[[],[R[6]]]],[11,R[89],E,E,45,[[["self"]],[T]]],[11,R[80],E,E,45,[[["self"]],[T]]],[11,R[84],E,E,45,[[["self"]],[R[90]]]],[11,R[87],E,E,45,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,45,[[["self"]]]],[11,"from",R[107],E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[82],E,E,46,[[["self"]],[T]]],[11,R[83],E,E,46,[[["self"],[T]]]],[11,R[78],E,E,46,[[[U]],[R[6]]]],[11,R[79],E,E,46,[[],[R[6]]]],[11,R[89],E,E,46,[[["self"]],[T]]],[11,R[80],E,E,46,[[["self"]],[T]]],[11,R[84],E,E,46,[[["self"]],[R[90]]]],[11,R[87],E,E,46,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,46,[[["self"]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,"into",E,E,59,[[],[U]]],[11,R[94],E,E,59,[[["self"]],[R[0]]]],[11,R[82],E,E,59,[[["self"]],[T]]],[11,R[83],E,E,59,[[["self"],[T]]]],[11,R[78],E,E,59,[[[U]],[R[6]]]],[11,R[79],E,E,59,[[],[R[6]]]],[11,R[89],E,E,59,[[["self"]],[T]]],[11,R[80],E,E,59,[[["self"]],[T]]],[11,R[84],E,E,59,[[["self"]],[R[90]]]],[11,R[87],E,E,59,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,59,[[["self"]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[94],E,E,47,[[["self"]],[R[0]]]],[11,R[82],E,E,47,[[["self"]],[T]]],[11,R[83],E,E,47,[[["self"],[T]]]],[11,R[78],E,E,47,[[[U]],[R[6]]]],[11,R[79],E,E,47,[[],[R[6]]]],[11,R[89],E,E,47,[[["self"]],[T]]],[11,R[80],E,E,47,[[["self"]],[T]]],[11,R[84],E,E,47,[[["self"]],[R[90]]]],[11,R[87],E,E,47,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,47,[[["self"]]]],[11,"from",R[70],E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[82],E,E,48,[[["self"]],[T]]],[11,R[83],E,E,48,[[["self"],[T]]]],[11,R[78],E,E,48,[[[U]],[R[6]]]],[11,R[79],E,E,48,[[],[R[6]]]],[11,R[89],E,E,48,[[["self"]],[T]]],[11,R[80],E,E,48,[[["self"]],[T]]],[11,R[84],E,E,48,[[["self"]],[R[90]]]],[11,R[85],E,E,48,[[["self"]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[82],E,E,49,[[["self"]],[T]]],[11,R[83],E,E,49,[[["self"],[T]]]],[11,R[78],E,E,49,[[[U]],[R[6]]]],[11,R[79],E,E,49,[[],[R[6]]]],[11,R[89],E,E,49,[[["self"]],[T]]],[11,R[80],E,E,49,[[["self"]],[T]]],[11,R[84],E,E,49,[[["self"]],[R[90]]]],[11,R[85],E,E,49,[[["self"]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[82],E,E,50,[[["self"]],[T]]],[11,R[83],E,E,50,[[["self"],[T]]]],[11,R[78],E,E,50,[[[U]],[R[6]]]],[11,R[79],E,E,50,[[],[R[6]]]],[11,R[89],E,E,50,[[["self"]],[T]]],[11,R[80],E,E,50,[[["self"]],[T]]],[11,R[84],E,E,50,[[["self"]],[R[90]]]],[11,R[85],E,E,50,[[["self"]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[82],E,E,51,[[["self"]],[T]]],[11,R[83],E,E,51,[[["self"],[T]]]],[11,R[78],E,E,51,[[[U]],[R[6]]]],[11,R[79],E,E,51,[[],[R[6]]]],[11,R[89],E,E,51,[[["self"]],[T]]],[11,R[80],E,E,51,[[["self"]],[T]]],[11,R[84],E,E,51,[[["self"]],[R[90]]]],[11,R[85],E,E,51,[[["self"]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[82],E,E,52,[[["self"]],[T]]],[11,R[83],E,E,52,[[["self"],[T]]]],[11,R[78],E,E,52,[[[U]],[R[6]]]],[11,R[79],E,E,52,[[],[R[6]]]],[11,R[89],E,E,52,[[["self"]],[T]]],[11,R[80],E,E,52,[[["self"]],[T]]],[11,R[84],E,E,52,[[["self"]],[R[90]]]],[11,R[85],E,E,52,[[["self"]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,"into",E,E,53,[[],[U]]],[11,R[82],E,E,53,[[["self"]],[T]]],[11,R[83],E,E,53,[[["self"],[T]]]],[11,R[78],E,E,53,[[[U]],[R[6]]]],[11,R[79],E,E,53,[[],[R[6]]]],[11,R[89],E,E,53,[[["self"]],[T]]],[11,R[80],E,E,53,[[["self"]],[T]]],[11,R[84],E,E,53,[[["self"]],[R[90]]]],[11,R[85],E,E,53,[[["self"]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,"into",E,E,54,[[],[U]]],[11,R[82],E,E,54,[[["self"]],[T]]],[11,R[83],E,E,54,[[["self"],[T]]]],[11,R[78],E,E,54,[[[U]],[R[6]]]],[11,R[79],E,E,54,[[],[R[6]]]],[11,R[89],E,E,54,[[["self"]],[T]]],[11,R[80],E,E,54,[[["self"]],[T]]],[11,R[84],E,E,54,[[["self"]],[R[90]]]],[11,R[85],E,E,54,[[["self"]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,"into",E,E,55,[[],[U]]],[11,R[82],E,E,55,[[["self"]],[T]]],[11,R[83],E,E,55,[[["self"],[T]]]],[11,R[78],E,E,55,[[[U]],[R[6]]]],[11,R[79],E,E,55,[[],[R[6]]]],[11,R[89],E,E,55,[[["self"]],[T]]],[11,R[80],E,E,55,[[["self"]],[T]]],[11,R[84],E,E,55,[[["self"]],[R[90]]]],[11,R[85],E,E,55,[[["self"]]]],[11,"add_eavi",R[88],E,4,[[["self"],[R[15]]],[[R[6],[R[13],R[21]]],[R[21]],[R[13],[R[15]]]]]],[11,R[108],E,E,4,[[["self"],[R[109]]],[[R[6],[R[22],R[21]]],[R[22],[R[15]]],[R[21]]]]],[11,"from",R[95],E,19,[[["attributeerror"]],[R[21]]]],[11,"from",R[93],E,56,[[["str"]],["self"]]],[11,"from",E,E,56,[[[R[0]]],["self"]]],[11,"from",E,E,13,[[[R[37]]],["self"]]],[11,"from",E,E,13,[[[R[0]]],[R[11]]]],[11,"from",E,E,13,[[["str"]],[R[11]]]],[11,"from",R[14],E,60,[[[R[120]]],[R[110]]]],[11,"from",R[95],E,57,[[[R[110]]],["self"]]],[11,"from",R[14],E,60,[[[R[111]]],[R[110]]]],[11,"from",E,E,61,[[[R[111]]],["ribosomeruntimebits"]]],[11,"from",R[95],E,17,[[[R[110]]],["self"]]],[11,"from",E,E,17,[[[R[21]]],["self"]]],[11,"from",E,E,18,[[[R[21]]],[R[112]]]],[11,"from",E,E,19,[[[R[370]]],["self"]]],[11,"from",E,E,19,[[[R[371]]],["self"]]],[11,"from",E,E,19,[[[R[0]]],["self"]]],[11,"from",E,E,19,[[["str"]],["self"]]],[11,"from",E,E,19,[[["cryptoerror"]],["self"]]],[11,"from",E,E,19,[[["poisonerror"]],["self"]]],[11,"from",E,E,19,[[["ioerror"]],["self"]]],[11,"from",E,E,19,[[["serdeerror"]],["self"]]],[11,"from",E,E,19,[[["decodeerror"]],["self"]]],[11,"from",E,E,19,[[["utf8error"]],["self"]]],[11,"from",E,E,19,[[["futurecanceled"]],["self"]]],[11,"from",E,E,19,[[[R[966]]],["self"]]],[11,"from",E,E,19,[[["hciderror"]],["self"]]],[11,"from",R[106],E,45,[[["str"]],[R[67]]]],[11,"from",E,E,45,[[[R[0]]],[R[67]]]],[11,"from",R[107],E,46,[[["usize"]],[R[190]]]],[11,"from",E,E,46,[[["period"]],["self"]]],[11,"from",E,E,59,[[[R[372]]],["self"]]],[11,"from",E,E,59,[[[R[372]]],["self"]]],[11,"from",E,E,47,[[["i64"]],["self"]]],[11,"from",E,E,47,[[["u64"]],["self"]]],[11,"from",E,E,47,[[["i32"]],["self"]]],[11,"from",E,E,47,[[["u32"]],["self"]]],[11,"from",E,E,47,[[["datetime",[R[113]]],[R[113]]],[R[68]]]],[11,"from",E,E,47,[[["datetime"]],[R[68]]]],[11,"eq",R[77],E,0,[[["self"],[R[9]]],["bool"]]],[11,"eq",R[81],E,1,[[["self"],[R[114]]],["bool"]]],[11,"eq",R[86],E,2,[[["self"],[R[18]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[18]]],["bool"]]],[11,"eq",R[88],E,3,[[["self"],[R[615]]],["bool"]]],[11,"eq",R[91],E,8,[[["self"],[R[30]]],["bool"]]],[11,"eq",E,E,9,[[["self"],["reservedcapabilityid"]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[115]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[115]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[116]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[116]]],["bool"]]],[11,"eq",R[92],E,12,[[["self"],[R[117]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[117]]],["bool"]]],[11,"eq",R[93],E,56,[[["self"],[R[37]]],["bool"]]],[11,"ne",E,E,56,[[["self"],[R[37]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[11]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[11]]],["bool"]]],[11,"eq",R[32],E,7,[[["self"],["entry"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[118]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[118]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[119]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[119]]],["bool"]]],[11,"eq",R[95],E,16,[[["self"],[R[59]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[59]]],["bool"]]],[11,"eq",E,E,57,[[["self"],[R[120]]],["bool"]]],[11,"ne",E,E,57,[[["self"],[R[120]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[111]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[111]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[112]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[121]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[121]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[21]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[21]]],["bool"]]],[11,"eq",R[96],E,20,[[["self"],[R[40]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[40]]],["bool"]]],[11,"eq",R[42],E,22,[[["self"],["bridge"]],["bool"]]],[11,"ne",E,E,22,[[["self"],["bridge"]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[122]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[122]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[128]]],["bool"]]],[11,"eq",R[98],E,25,[[["self"],[R[123]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[123]]],["bool"]]],[11,"eq",R[99],E,29,[[["self"],["sharing"]],["bool"]]],[11,"eq",E,E,26,[[["self"],["linksto"]],["bool"]]],[11,"ne",E,E,26,[[["self"],["linksto"]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[124]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[124]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[62]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[62]]],["bool"]]],[11,"eq",R[100],E,30,[[["self"],[R[57]]],["bool"]]],[11,"ne",E,E,30,[[["self"],[R[57]]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[58]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[58]]],["bool"]]],[11,"eq",E,E,32,[[["self"],[R[60]]],["bool"]]],[11,"ne",E,E,32,[[["self"],[R[60]]],["bool"]]],[11,"eq",E,E,33,[[["self"],["trait"]],["bool"]]],[11,"ne",E,E,33,[[["self"],["trait"]],["bool"]]],[11,"eq",R[101],E,34,[[["self"],["reservedtraitnames"]],["bool"]]],[11,"eq",R[102],E,36,[[["self"],[R[52]]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[61]]],["bool"]]],[11,"eq",R[103],E,38,[[["self"],["config"]],["bool"]]],[11,"eq",E,E,37,[[["self"],["zome"]],["bool"]]],[11,"ne",E,E,37,[[["self"],["zome"]],["bool"]]],[11,"eq",R[45],E,21,[[["self"],["dna"]],["bool"]]],[11,"eq",R[104],E,41,[[["self"],[R[129]]],["bool"]]],[11,"ne",E,E,41,[[["self"],[R[129]]],["bool"]]],[11,"eq",R[105],E,42,[[["self"],[R[130]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[130]]],["bool"]]],[11,"eq",R[66],E,43,[[["self"],["link"]],["bool"]]],[11,"ne",E,E,43,[[["self"],["link"]],["bool"]]],[11,"eq",E,E,39,[[["self"],[R[65]]],["bool"]]],[11,"eq",R[106],E,44,[[["self"],[R[10]]],["bool"]]],[11,"ne",E,E,44,[[["self"],[R[10]]],["bool"]]],[11,"eq",E,E,45,[[["self"],[R[67]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[67]]],["bool"]]],[11,"eq",R[107],E,46,[[["self"],[R[190]]],["bool"]]],[11,"ne",E,E,46,[[["self"],[R[190]]],["bool"]]],[11,"eq",E,E,59,[[["self"],["period"]],["bool"]]],[11,"ne",E,E,59,[[["self"],["period"]],["bool"]]],[11,"eq",E,E,47,[[["self"],[R[68]]],["bool"]]],[11,"ne",E,E,47,[[["self"],[R[68]]],["bool"]]],[11,"eq",R[70],E,48,[[["self"],[R[125]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[125]]],["bool"]]],[11,"eq",E,E,50,[[["self"],[R[126]]],["bool"]]],[11,"ne",E,E,50,[[["self"],[R[126]]],["bool"]]],[11,"clone",R[77],E,0,[[["self"]],[R[9]]]],[11,"clone",R[81],E,1,[[["self"]],[R[114]]]],[11,"clone",R[86],E,2,[[["self"]],[R[18]]]],[11,"clone",R[88],E,4,[[["self"]],[R[127]]]],[11,"clone",R[91],E,8,[[["self"]],[R[30]]]],[11,"clone",E,E,10,[[["self"]],[R[115]]]],[11,"clone",E,E,11,[[["self"]],[R[116]]]],[11,"clone",R[92],E,12,[[["self"]],[R[117]]]],[11,"clone",R[93],E,56,[[["self"]],[R[37]]]],[11,"clone",E,E,13,[[["self"]],[R[11]]]],[11,"clone",R[32],E,7,[[["self"]],["entry"]]],[11,"clone",E,E,5,[[["self"]],[R[118]]]],[11,"clone",E,E,6,[[["self"]],[R[119]]]],[11,"clone",R[95],E,16,[[["self"]],[R[59]]]],[11,"clone",E,E,57,[[["self"]],[R[120]]]],[11,"clone",E,E,17,[[["self"]],[R[111]]]],[11,"clone",E,E,18,[[["self"]],[R[112]]]],[11,"clone",E,E,14,[[["self"]],[R[121]]]],[11,"clone",E,E,19,[[["self"]],[R[21]]]],[11,"clone",R[96],E,20,[[["self"]],[R[40]]]],[11,"clone",R[97],E,58,[[["self"]],["chainmigrate"]]],[11,"clone",R[42],E,22,[[["self"]],["bridge"]]],[11,"clone",E,E,23,[[["self"]],[R[122]]]],[11,"clone",E,E,24,[[["self"]],[R[128]]]],[11,"clone",R[98],E,25,[[["self"]],[R[123]]]],[11,"clone",R[99],E,29,[[["self"]],["sharing"]]],[11,"clone",E,E,26,[[["self"]],["linksto"]]],[11,"clone",E,E,27,[[["self"]],[R[124]]]],[11,"clone",E,E,28,[[["self"]],[R[62]]]],[11,"clone",R[100],E,30,[[["self"]],[R[57]]]],[11,"clone",E,E,31,[[["self"]],[R[58]]]],[11,"clone",E,E,32,[[["self"]],[R[60]]]],[11,"clone",E,E,33,[[["self"]],["trait"]]],[11,"clone",R[102],E,36,[[["self"]],[R[52]]]],[11,"clone",E,E,35,[[["self"]],[R[61]]]],[11,"clone",R[103],E,38,[[["self"]],["config"]]],[11,"clone",E,E,37,[[["self"]],["zome"]]],[11,"clone",R[45],E,21,[[["self"]],["dna"]]],[11,"clone",R[104],E,41,[[["self"]],[R[129]]]],[11,"clone",R[105],E,42,[[["self"]],[R[130]]]],[11,"clone",R[66],E,43,[[["self"]],["link"]]],[11,"clone",E,E,39,[[["self"]],[R[65]]]],[11,"clone",R[106],E,44,[[["self"]],[R[10]]]],[11,"clone",E,E,45,[[["self"]],[R[67]]]],[11,"clone",R[107],E,46,[[["self"]],[R[190]]]],[11,"clone",E,E,59,[[["self"]],["period"]]],[11,"clone",E,E,47,[[["self"]],[R[68]]]],[11,"clone",R[70],E,48,[[["self"]],[R[125]]]],[11,"clone",E,E,50,[[["self"]],[R[126]]]],[11,"clone",E,E,51,[[["self"]],[R[137]]]],[11,"clone",E,E,52,[[["self"]],[R[324]]]],[11,"clone",E,E,49,[[["self"]],[R[321]]]],[11,"clone",E,E,53,[[["self"]],[R[322]]]],[11,"clone",E,E,54,[[["self"]],[R[320]]]],[11,"clone",E,E,55,[[["self"]],[R[323]]]],[11,R[94],R[93],E,56,[[["self"]],[R[0]]]],[11,R[94],R[95],E,57,[[["self"]],[R[0]]]],[11,R[94],E,E,17,[[["self"]],[R[0]]]],[11,R[94],E,E,18,[[["self"]],[R[0]]]],[11,R[131],R[81],E,1,[[],[R[114]]]],[11,R[131],R[86],E,2,[[],["self"]]],[11,R[131],R[88],E,4,[[],[R[127]]]],[11,R[131],R[91],E,8,[[],[R[30]]]],[11,R[131],R[95],E,15,[[],[R[38]]]],[11,R[131],R[99],"Default zome entry_type sharing is \"public\"",29,[[],["self"]]],[11,R[131],E,R[132],26,[[],["self"]]],[11,R[131],E,R[132],27,[[],["self"]]],[11,R[131],E,E,28,[[],["self"]]],[11,R[131],R[100],"Defaults for a \"fn_declarations\" object.",31,[[],["self"]]],[11,R[131],E,E,32,[[],[R[60]]]],[11,R[131],E,E,33,[[],["trait"]]],[11,R[131],R[102],"Provide defaults for wasm entries in dna structs.",35,[[],["self"]]],[11,R[131],R[103],"Provide defaults for the \"zome\" \"config\" object.",38,[[],["self"]]],[11,R[131],E,"Provide defaults for an individual \"zome\".",37,[[],["self"]]],[11,R[131],R[45],"Provide defaults for a dna object.",21,[[],["self"]]],[11,R[131],R[107],E,46,[[],[R[190]]]],[11,R[131],R[70],E,49,[[],["self"]]],[11,R[131],E,E,53,[[],["self"]]],[11,R[131],E,E,54,[[],["self"]]],[11,R[133],R[81],E,1,[[["self"],[R[114]]],[[R[134]],[R[13],[R[134]]]]]],[11,R[133],R[86],E,2,[[["self"],[R[18]]],[[R[134]],[R[13],[R[134]]]]]],[11,"lt",E,E,2,[[["self"],[R[18]]],["bool"]]],[11,"le",E,E,2,[[["self"],[R[18]]],["bool"]]],[11,"gt",E,E,2,[[["self"],[R[18]]],["bool"]]],[11,"ge",E,E,2,[[["self"],[R[18]]],["bool"]]],[11,R[133],R[93],E,56,[[["self"],[R[37]]],[[R[134]],[R[13],[R[134]]]]]],[11,"lt",E,E,56,[[["self"],[R[37]]],["bool"]]],[11,"le",E,E,56,[[["self"],[R[37]]],["bool"]]],[11,"gt",E,E,56,[[["self"],[R[37]]],["bool"]]],[11,"ge",E,E,56,[[["self"],[R[37]]],["bool"]]],[11,R[133],E,E,13,[[["self"],[R[11]]],[[R[134]],[R[13],[R[134]]]]]],[11,"lt",E,E,13,[[["self"],[R[11]]],["bool"]]],[11,"le",E,E,13,[[["self"],[R[11]]],["bool"]]],[11,"gt",E,E,13,[[["self"],[R[11]]],["bool"]]],[11,"ge",E,E,13,[[["self"],[R[11]]],["bool"]]],[11,R[133],R[95],E,16,[[["self"],[R[59]]],[[R[134]],[R[13],[R[134]]]]]],[11,"lt",E,E,16,[[["self"],[R[59]]],["bool"]]],[11,"le",E,E,16,[[["self"],[R[59]]],["bool"]]],[11,"gt",E,E,16,[[["self"],[R[59]]],["bool"]]],[11,"ge",E,E,16,[[["self"],[R[59]]],["bool"]]],[11,R[133],E,E,18,[[["self"],[R[112]]],[[R[134]],[R[13],[R[134]]]]]],[11,R[133],E,E,19,[[["self"],[R[21]]],[[R[134]],[R[13],[R[134]]]]]],[11,"lt",E,E,19,[[["self"],[R[21]]],["bool"]]],[11,"le",E,E,19,[[["self"],[R[21]]],["bool"]]],[11,"gt",E,E,19,[[["self"],[R[21]]],["bool"]]],[11,"ge",E,E,19,[[["self"],[R[21]]],["bool"]]],[11,R[133],R[107],E,47,[[["self"],[R[68]]],[[R[134]],[R[13],[R[134]]]]]],[11,"lt",E,E,47,[[["self"],[R[68]]],["bool"]]],[11,"le",E,E,47,[[["self"],[R[68]]],["bool"]]],[11,"gt",E,E,47,[[["self"],[R[68]]],["bool"]]],[11,"ge",E,E,47,[[["self"],[R[68]]],["bool"]]],[11,"cmp",R[81],E,1,[[["self"],[R[114]]],[R[134]]]],[11,"cmp",R[93],E,56,[[["self"],[R[37]]],[R[134]]]],[11,"cmp",E,E,13,[[["self"],[R[11]]],[R[134]]]],[11,"cmp",R[95],E,16,[[["self"],[R[59]]],[R[134]]]],[11,"cmp",E,E,18,[[["self"],[R[112]]],[R[134]]]],[11,"cmp",E,E,19,[[["self"],[R[21]]],[R[134]]]],[11,"cmp",R[107],E,47,[[["self"],[R[68]]],[R[134]]]],[11,"deref",R[102],E,36,[[["self"]]]],[11,"fmt",R[86],E,2,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[93],E,13,[[["self"],[R[135]]],["fmtresult"]]],[11,"fmt",R[95],E,16,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,14,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,19,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[107],E,59,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,47,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[77],E,0,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[81],E,1,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[86],E,2,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[88],E,4,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[91],E,8,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,9,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,10,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,11,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[92],E,12,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[93],E,56,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,13,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[32],E,7,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,5,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,6,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[95],E,16,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,57,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,17,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,18,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,14,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,19,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,15,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[96],E,20,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[97],E,58,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[42],E,22,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,23,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,24,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[98],E,25,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[99],E,29,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,26,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,27,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,28,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[100],E,30,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,31,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,32,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,33,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[101],E,34,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[102],E,36,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,35,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[103],E,38,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,37,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[45],E,21,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[104],E,41,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[105],E,42,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[66],E,43,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,39,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[106],E,44,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,45,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[107],E,46,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,59,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,47,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[70],E,48,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,50,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,51,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,52,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,49,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,53,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,54,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,55,[[["self"],[R[135]]],[R[6]]]],[11,"sub",R[107],E,47,[[["d"]]]],[11,R[136],R[81],E,1,[[["str"]],[R[6]]]],[11,R[136],R[91],E,9,[[["str"]],[R[6]]]],[11,R[136],R[93],E,13,[[["str"]],[R[6]]]],[11,R[136],R[95],E,17,[[["str"]],[R[6]]]],[11,R[136],E,E,18,[[["str"]],[R[6]]]],[11,R[136],R[101],E,34,[[["str"]],[R[6]]]],[11,R[136],R[107],E,59,[[["str"]],[R[6]]]],[11,R[136],E,E,47,[[["str"]],[R[6]]]],[11,R[78],R[77],E,0,[[[R[26]]],[R[6]]]],[11,R[78],E,E,0,[[[R[26]]],[R[6]]]],[11,R[78],R[81],E,1,[[[R[26]]],[R[6]]]],[11,R[78],E,E,1,[[[R[26]]],[R[6]]]],[11,R[78],R[86],E,2,[[[R[26]]],[R[6]]]],[11,R[78],E,E,2,[[[R[26]]],[R[6]]]],[11,R[78],E,E,2,[[["str"]],[R[6]]]],[11,R[78],E,E,2,[[[R[0]]],[R[6]]]],[11,R[78],R[91],E,10,[[[R[26]]],[R[6]]]],[11,R[78],E,E,10,[[[R[26]]],[R[6]]]],[11,R[78],E,E,11,[[[R[26]]],[R[6]]]],[11,R[78],E,E,11,[[[R[26]]],[R[6]]]],[11,R[78],R[92],E,12,[[[R[26]]],[R[6]]]],[11,R[78],E,E,12,[[[R[26]]],[R[6]]]],[11,R[78],R[93],E,56,[[[R[26]]],[R[6]]]],[11,R[78],E,E,56,[[[R[26]]],[R[6]]]],[11,R[78],E,E,13,[[[R[26]]],[R[6]]]],[11,R[78],E,E,13,[[[R[26]]],[R[6]]]],[11,R[78],E,E,56,[[[R[11]]],[R[6]]]],[11,R[78],R[32],E,7,[[[R[26]]],[R[6]]]],[11,R[78],E,E,7,[[[R[26]]],[R[6]]]],[11,R[78],E,E,5,[[[R[26]]],[R[6]]]],[11,R[78],E,E,5,[[[R[26]]],[R[6]]]],[11,R[78],E,E,6,[[[R[26]]],[R[6]]]],[11,R[78],E,E,6,[[[R[26]]],[R[6]]]],[11,R[78],R[95],E,17,[[[R[26]]],[R[6]]]],[11,R[78],E,E,18,[[[R[26]]],[R[6]]]],[11,R[78],E,E,18,[[[R[26]]],[R[6]]]],[11,R[78],E,E,14,[[[R[26]]],[R[6]]]],[11,R[78],E,E,14,[[[R[26]]],[R[6]]]],[11,R[78],E,E,14,[[[R[38]]],[R[6]]]],[11,R[78],E,E,19,[[[R[26]]],[R[6]]]],[11,R[78],E,E,19,[[[R[26]]],[R[6]]]],[11,R[78],E,E,15,[[[R[26]]],[R[6]]]],[11,R[78],E,E,15,[[[R[26]]],[R[6]]]],[11,R[78],R[96],E,20,[[[R[26]]],[R[6]]]],[11,R[78],E,E,20,[[[R[26]]],[R[6]]]],[11,R[78],R[98],E,25,[[[R[26]]],[R[6]]]],[11,R[78],E,E,25,[[[R[26]]],[R[6]]]],[11,R[78],R[99],E,28,[[[R[26]]],[R[6]]]],[11,R[78],E,E,28,[[[R[26]]],[R[6]]]],[11,R[78],R[103],E,37,[[[R[26]]],[R[6]]]],[11,R[78],E,E,37,[[[R[26]]],[R[6]]]],[11,R[78],R[45],E,21,[[[R[26]]],[R[6]]]],[11,R[78],E,E,21,[[[R[26]]],[R[6]]]],[11,R[78],R[104],E,41,[[[R[26]]],[R[6]]]],[11,R[78],E,E,41,[[[R[26]]],[R[6]]]],[11,R[78],R[105],E,42,[[[R[26]]],[R[6]]]],[11,R[78],E,E,42,[[[R[26]]],[R[6]]]],[11,R[78],R[66],E,43,[[[R[26]]],[R[6]]]],[11,R[78],E,E,43,[[[R[26]]],[R[6]]]],[11,R[78],R[106],E,44,[[[R[26]]],[R[6]]]],[11,R[78],E,E,44,[[[R[26]]],[R[6]]]],[11,R[78],E,E,45,[[[R[26]]],[R[6]]]],[11,R[78],E,E,45,[[[R[26]]],[R[6]]]],[11,R[78],R[107],E,46,[[[R[26]]],[R[6]]]],[11,R[78],E,E,46,[[[R[26]]],[R[6]]]],[11,R[78],E,E,59,[[[R[26]]],[R[6]]]],[11,R[78],E,E,59,[[[R[26]]],[R[6]]]],[11,R[78],E,E,59,[[[R[0]]],[R[6]]]],[11,R[78],E,E,59,[[["str"]],[R[6]]]],[11,R[78],E,E,47,[[[R[26]]],[R[6]]]],[11,R[78],E,E,47,[[[R[26]]],[R[6]]]],[11,R[78],E,E,47,[[[R[0]]],[R[6]]]],[11,R[78],E,E,47,[[["str"]],[R[6]]]],[11,R[78],R[70],E,48,[[[R[26]]],[R[6]]]],[11,R[78],E,E,48,[[[R[26]]],[R[6]]]],[11,R[78],E,E,50,[[[R[26]]],[R[6]]]],[11,R[78],E,E,50,[[[R[26]]],[R[6]]]],[11,R[78],R[93],E,13,[[[R[137],["entry"]],["entry"]],[R[6]]]],[11,"add",R[107],E,47,[[["d"]]]],[11,"hash",R[86],E,2,[[["self"],["__h"]]]],[11,"hash",R[91],E,8,[[["self"],["__h"]]]],[11,"hash",R[93],E,56,[[["self"],["__h"]]]],[11,"hash",E,E,13,[[["self"],["__h"]]]],[11,"hash",R[95],E,16,[[["self"],["__h"]]]],[11,"hash",E,E,18,[[["self"],["__h"]]]],[11,"hash",E,E,14,[[["self"],["__h"]]]],[11,"hash",E,E,19,[[["self"],["__h"]]]],[11,"hash",R[42],E,22,[[["self"],["__h"]]]],[11,"hash",E,E,23,[[["self"],["__h"]]]],[11,"hash",E,E,24,[[["self"],["__h"]]]],[11,"hash",R[98],E,25,[[["self"],["__h"]]]],[11,"hash",R[99],E,29,[[["self"],["__h"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"hash",E,E,27,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",R[100],E,30,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__h"]]]],[11,"hash",E,E,32,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",R[102],E,35,[[["self"],["h"]]]],[11,"hash",R[103],E,38,[[["self"],["__h"]]]],[11,"hash",R[45],E,21,[[["self"],["h"]]]],[11,"hash",R[66],E,43,[[["self"],["__h"]]]],[11,"hash",R[106],E,44,[[["self"],["__h"]]]],[11,"hash",E,E,45,[[["self"],["__h"]]]],[11,"hash",R[107],E,46,[[["self"],["__h"]]]],[11,"hash",E,E,59,[[["self"],["__h"]]]],[11,"cause",R[95],E,14,[[["self"]],[[R[13],["error"]],["error"]]]],[11,R[138],R[77],E,0,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[81],E,1,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[86],E,2,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[91],E,8,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,10,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,11,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[92],E,12,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[93],E,56,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,13,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[32],E,7,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,5,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,6,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[95],E,16,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,18,[[["self"],["s"]],[R[6]]]],[11,R[138],E,E,14,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,19,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,15,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[96],E,20,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[97],E,58,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[42],E,22,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,23,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,24,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[98],E,25,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[99],E,29,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,26,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,27,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,28,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[100],E,30,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,31,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,32,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,33,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[102],E,35,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[103],E,38,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,37,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[45],E,21,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[104],E,41,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[105],E,42,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[66],E,43,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,39,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[106],E,44,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,45,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[107],E,46,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,59,[[["self"],["s"]],[R[6]]]],[11,R[138],E,E,47,[[["self"],["s"]],[R[6]]]],[11,R[138],R[70],E,48,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,50,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,51,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,52,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,49,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,53,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,54,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,55,[[["self"],["__s"]],[R[6]]]],[11,R[139],R[77],E,0,[[["__d"]],[R[6]]]],[11,R[139],R[81],E,1,[[["__d"]],[R[6]]]],[11,R[139],R[86],E,2,[[["__d"]],[R[6]]]],[11,R[139],R[91],E,8,[[["__d"]],[R[6]]]],[11,R[139],E,E,10,[[["__d"]],[R[6]]]],[11,R[139],E,E,11,[[["__d"]],[R[6]]]],[11,R[139],R[92],E,12,[[["__d"]],[R[6]]]],[11,R[139],R[93],E,56,[[["__d"]],[R[6]]]],[11,R[139],E,E,13,[[["__d"]],[R[6]]]],[11,R[139],R[32],E,7,[[["__d"]],[R[6]]]],[11,R[139],E,E,5,[[["__d"]],[R[6]]]],[11,R[139],E,E,6,[[["__d"]],[R[6]]]],[11,R[139],R[95],E,16,[[["__d"]],[R[6]]]],[11,R[139],E,E,18,[[["d"]],[R[6]]]],[11,R[139],E,E,14,[[["__d"]],[R[6]]]],[11,R[139],E,E,19,[[["__d"]],[R[6]]]],[11,R[139],E,E,15,[[["__d"]],[R[6]]]],[11,R[139],R[96],E,20,[[["__d"]],[R[6]]]],[11,R[139],R[97],E,58,[[["__d"]],[R[6]]]],[11,R[139],R[42],E,22,[[["__d"]],[R[6]]]],[11,R[139],E,E,23,[[["__d"]],[R[6]]]],[11,R[139],E,E,24,[[["__d"]],[R[6]]]],[11,R[139],R[98],E,25,[[["__d"]],[R[6]]]],[11,R[139],R[99],E,29,[[["__d"]],[R[6]]]],[11,R[139],E,E,26,[[["__d"]],[R[6]]]],[11,R[139],E,E,27,[[["__d"]],[R[6]]]],[11,R[139],E,E,28,[[["__d"]],[R[6]]]],[11,R[139],R[100],E,30,[[["__d"]],[R[6]]]],[11,R[139],E,E,31,[[["__d"]],[R[6]]]],[11,R[139],E,E,32,[[["__d"]],[R[6]]]],[11,R[139],E,E,33,[[["__d"]],[R[6]]]],[11,R[139],R[102],E,35,[[["__d"]],[R[6]]]],[11,R[139],R[103],E,38,[[["__d"]],[R[6]]]],[11,R[139],E,E,37,[[["__d"]],[R[6]]]],[11,R[139],R[45],E,21,[[["__d"]],[R[6]]]],[11,R[139],R[104],E,41,[[["__d"]],[R[6]]]],[11,R[139],R[105],E,42,[[["__d"]],[R[6]]]],[11,R[139],R[66],E,43,[[["__d"]],[R[6]]]],[11,R[139],E,E,39,[[["__d"]],[R[6]]]],[11,R[139],R[106],E,44,[[["__d"]],[R[6]]]],[11,R[139],E,E,45,[[["__d"]],[R[6]]]],[11,R[139],R[107],E,46,[[["__d"]],[R[6]]]],[11,R[139],E,E,59,[[["d"]],[R[6]]]],[11,R[139],E,E,47,[[["d"]],[R[6]]]],[11,R[139],R[70],E,48,[[["__d"]],[R[6]]]],[11,R[139],E,E,50,[[["__d"]],[R[6]]]],[11,R[139],E,E,51,[[["__d"]],[R[6]]]],[11,R[139],E,E,52,[[["__d"]],[R[6]]]],[11,R[139],E,E,49,[[["__d"]],[R[6]]]],[11,R[139],E,E,53,[[["__d"]],[R[6]]]],[11,R[139],E,E,54,[[["__d"]],[R[6]]]],[11,R[139],E,E,55,[[["__d"]],[R[6]]]],[11,R[140],R[77],E,0,[[["self"]],[R[140]]]],[11,R[141],E,E,0,[[[R[140]]],[R[142]]]],[11,R[140],R[81],E,1,[[["self"]],[R[140]]]],[11,R[141],E,E,1,[[[R[140]]],[R[142]]]],[11,R[12],R[32],E,7,[[["self"]],[R[12]]]],[11,R[140],E,E,7,[[["self"]],[R[140]]]],[11,R[141],E,E,7,[[[R[140]]],[["entry"],[R[142],["entry"]]]]],[11,R[12],R[96],"for an Agent, the address is their public base32 encoded…",20,[[["self"]],[R[12]]]],[11,R[140],E,"get the entry content",20,[[["self"]],[R[140]]]],[11,R[141],E,E,20,[[[R[140]]],[R[142]]]],[11,R[140],R[45],E,21,[[["self"]],[R[140]]]],[11,R[141],E,E,21,[[[R[140]]],[R[142]]]]],"p":[[3,R[25]],[4,R[17]],[4,R[143]],[8,R[20]],[3,R[144]],[3,R[145]],[3,R[146]],[4,"Entry"],[4,R[147]],[4,R[148]],[3,R[27]],[3,R[28]],[3,R[149]],[4,R[150]],[3,R[151]],[3,R[152]],[4,"DnaError"],[4,R[153]],[4,R[154]],[4,R[155]],[3,R[39]],[3,"Dna"],[3,"Bridge"],[4,R[156]],[4,R[157]],[3,R[158]],[3,"LinksTo"],[3,R[159]],[3,R[160]],[4,"Sharing"],[3,R[161]],[3,R[162]],[3,"TraitFns"],[3,"Trait"],[4,R[163]],[3,"DnaWasm"],[3,R[164]],[3,"Zome"],[3,"Config"],[4,R[165]],[4,R[166]],[3,"LinkData"],[3,R[35]],[3,"Link"],[3,R[167]],[3,R[168]],[3,"Timeout"],[3,"Iso8601"],[3,R[169]],[3,R[170]],[4,R[171]],[4,R[172]],[4,R[173]],[4,R[174]],[4,R[175]],[4,R[176]],[3,R[177]],[3,R[178]],[3,R[36]],[3,"Period"],[6,R[179]],[6,R[180]]]};
searchIndex["holochain_dna_c_binding"]={"doc":"This crate is an ffi wrapper to provide a c-compatible dna…","i":[[3,R[181],"holochain_dna_c_binding",E,N,N],[5,"holochain_dna_create",E,E,N,[[]]],[5,"holochain_dna_create_from_json",E,E,N,[[]]],[5,"holochain_dna_free",E,E,N,[[]]],[5,"holochain_dna_to_json",E,E,N,[[]]],[5,"holochain_dna_string_free",E,E,N,[[]]],[5,"holochain_dna_get_name",E,E,N,[[]]],[5,"holochain_dna_set_name",E,E,N,[[]]],[5,"holochain_dna_get_description",E,E,N,[[]]],[5,"holochain_dna_set_description",E,E,N,[[]]],[5,"holochain_dna_get_version",E,E,N,[[]]],[5,"holochain_dna_set_version",E,E,N,[[]]],[5,"holochain_dna_get_uuid",E,E,N,[[]]],[5,"holochain_dna_set_uuid",E,E,N,[[]]],[5,"holochain_dna_get_dna_spec_version",E,E,N,[[]]],[5,"holochain_dna_set_dna_spec_version",E,E,N,[[]]],[5,"holochain_dna_get_zome_names",E,E,N,[[]]],[5,"holochain_dna_free_zome_names",E,E,N,[[]]],[5,"holochain_dna_get_trait_names",E,E,N,[[]]],[5,"holochain_dna_get_function_names",E,E,N,[[]]],[5,"holochain_dna_get_function_parameters",E,E,N,[[]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[78],E,E,0,[[[U]],[R[6]]]],[11,R[79],E,E,0,[[],[R[6]]]],[11,R[89],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"]],[R[90]]]]],"p":[[3,R[181]]]};
searchIndex["holochain_dpki"]={"doc":"Provide a slightly higher-level abstraction over the raw…","i":[[3,R[427],R[384],E,N,N],[3,R[428],E,E,N,N],[0,"key_blob",E,E,N,N],[3,"KeyBlob",R[402],"The data includes a base64 encoded, json serialized string…",N,N],[12,R[382],E,E,0,N],[12,"seed_type",E,E,0,N],[12,"hint",E,E,0,N],[12,"data",E,"base64 encoded, json serialized string of the EncryptedData",0,N],[4,"BlobType",E,"Enum of all blobbable types",N,N],[13,"Seed",E,E,1,N],[13,R[385],E,E,1,N],[13,R[967],E,E,1,N],[13,R[968],E,E,1,N],[17,"KEYBUNDLE_BLOB_SIZE_ALIGNED",E,E,N,N],[17,"SIGNING_KEY_BLOB_SIZE_ALIGNED",E,E,N,N],[17,"ENCRYPTING_KEY_BLOB_SIZE_ALIGNED",E,E,N,N],[8,R[417],E,"Trait to implement in order to be blobbable into a KeyBlob",N,N],[10,R[382],E,E,2,[[],[R[411]]]],[10,R[408],E,E,2,[[],["usize"]]],[10,R[409],E,E,2,[[["secbuf"],[R[410]],[R[13],[R[383]]],[R[383]]],[R[41]]]],[10,"as_blob",E,E,2,[[["self"],["secbuf"],[R[13],[R[383]]],[R[383]],[R[0]]],[[R[410]],[R[41],[R[410]]]]]],[11,"finalize_blobbing",E,"Blobs a data buf",2,[[[R[13],[R[383]]],[R[383]],["secbuf"]],[[R[41],[R[0]]],[R[0]]]]],[11,"unblob",E,"Get the data buf back from a Blob",2,[[["secbuf"],[R[410]],[R[13],[R[383]]],[R[383]]],[["secbuf"],[R[41],["secbuf"]]]]],[0,"key_bundle",R[384],E,N,N],[3,R[385],R[403],"Struct holding all the keys generated by a seed",N,N],[12,"sign_keys",E,E,3,N],[12,"enc_keys",E,E,3,N],[11,"new",E,"create a new KeyBundle",3,[[[R[386]],[R[387]]],[R[41]]]],[11,R[388],E,"Derive the keys from a Seed",3,[[["seed"]],[R[41]]]],[11,"new_from_seed_buf",E,"Derive the keys from a 32 bytes seed buffer @param…",3,[[["secbuf"]],[R[41]]]],[11,"get_id",E,"get the identifier key",3,[[["self"]],["base32"]]],[11,"sign",E,R[391],3,[[["self"],["secbuf"]],[["secbuf"],[R[41],["secbuf"]]]]],[11,"encrypt",E,E,3,[[["self"],["secbuf"]],[["secbuf"],[R[41],["secbuf"]]]]],[11,"decrypt",E,E,3,[[["self"],["secbuf"]],[["secbuf"],[R[41],["secbuf"]]]]],[11,"verify",E,R[392],3,[[["self"],["secbuf"]],["bool"]]],[11,"is_same",E,E,3,[[["self"],[R[400]]],["bool"]]],[0,"keypair",R[384],E,N,N],[3,R[418],R[404],"KeyPair used for signing data",N,N],[12,"public",E,E,4,N],[12,"private",E,E,4,N],[3,R[419],E,"KeyPair used for encrypting data",N,N],[12,"public",E,E,5,N],[12,"private",E,E,5,N],[5,"generate_random_sign_keypair",E,E,N,[[],[[R[386]],[R[41],[R[386]]]]]],[5,"generate_random_enc_keypair",E,E,N,[[],[[R[387]],[R[41],[R[387]]]]]],[8,"KeyPair",E,E,N,N],[10,"public",E,E,6,[[["self"]],["base32"]]],[10,"private",E,E,6,[[["self"]],["secbuf"]]],[10,R[388],E,E,6,[[["secbuf"]],[R[41]]]],[10,R[415],E,E,6,[[["self"]],[R[41]]]],[10,"codec",E,E,6,[[],[R[414]]]],[11,"encode_pub_key",E,R[389],6,[[["secbuf"]],["base32"]]],[11,"decode_pub_key",E,R[389],6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_pub_key_into_secbuf",E,"Decode the public key from Base32 into a SecBuf",6,[[["self"]],["secbuf"]]],[11,"is_same",E,"Return true if the keys are equivalent",6,[[["self"]],["bool"]]],[11,"new",E,R[393],4,[[["base32"],["secbuf"]],["self"]]],[11,R[390],E,"Construct with a public key not already HCID encoded",4,[[["secbuf"],["secbuf"]],["self"]]],[11,"sign",E,R[391],4,[[["self"],["secbuf"]],[["secbuf"],[R[41],["secbuf"]]]]],[11,"verify",E,R[392],4,[[["self"],["secbuf"]],["bool"]]],[11,"new",E,R[393],5,[[["secbuf"],[R[0]]],["self"]]],[11,"new_with_secbuf",E,E,5,[[["secbuf"],["secbuf"]],["self"]]],[11,"encrypt",E,"encrypt some arbitrary data with the signing private key…",5,[[["self"],["secbuf"]],[R[41]]]],[11,"decrypt",E,"decrypt some arbitrary data with the signing private key…",5,[[["self"],["secbuf"]],[R[41]]]],[0,"password_encryption",R[384],E,N,N],[3,R[420],R[405],E,N,N],[12,"0",E,E,7,N],[12,"1",E,E,7,N],[12,"2",E,E,7,N],[6,"OpsLimit",E,E,N,N],[6,"MemLimit",E,E,N,N],[6,"PwHashAlgo",E,E,N,N],[0,"seed",R[384],E,N,N],[3,"Seed",R[406],E,N,N],[12,"kind",E,E,8,N],[12,"buf",E,E,8,N],[3,"RootSeed",E,E,N,N],[3,R[424],E,E,N,N],[3,R[425],E,E,N,N],[4,R[421],E,"Enum of all possible ways to initialize a Seed",N,N],[13,"Seed",E,E,9,N],[13,"Mnemonic",E,E,9,N],[4,"SeedType",E,"Enum of all the types of seeds",N,N],[13,"Root",E,"Root / Master seed",10,N],[13,"Revocation",E,"Revocation seed",10,N],[13,"Device",E,"Device seed",10,N],[13,R[394],E,"Derivative of a Device seed with a PIN",10,N],[13,"DNA",E,"DNA specific seed",10,N],[13,"OneShot",E,"Seed for a one use only key",10,N],[13,"Mock",E,"Seed used only in tests or mocks",10,N],[4,R[422],E,"Enum of all the different behaviors a Seed can have",N,N],[13,"Root",E,E,11,N],[13,"Device",E,E,11,N],[13,R[394],E,E,11,N],[8,R[423],E,"Common Trait for TypedSeeds",N,N],[10,"seed",E,E,12,[[["self"]],["seed"]]],[10,R[416],E,E,12,[[["self"]],["seed"]]],[11,"new",E,E,8,[[[R[395]],["secbuf"]],["self"]]],[11,"new_with_mnemonic",E,E,8,[[[R[395]],[R[0]]],[R[41]]]],[11,"new_with_initializer",E,"Construct this seed struct from a SeedInitializer @param…",8,[[["seedinitializer"],[R[395]]],["self"]]],[11,"into_typed",E,E,8,[[],[[R[41],[R[396]]],[R[396]]]]],[11,"get_mnemonic",E,"Generate a mnemonic for the seed.",8,[[["self"]],[[R[41],[R[0]]],[R[0]]]]],[11,"new",E,R[398],13,[[["secbuf"]],["self"]]],[11,"generate_device_seed",E,"Generate Device Seed @param {number} index - the index…",13,[[["self"],["u64"],[R[401]]],[[R[41],[R[397]]],[R[397]]]]],[11,"new",E,R[398],14,[[["secbuf"]],["self"]]],[11,"generate_device_pin_seed",E,"generate a device pin seed by applying pwhash of pin with…",14,[[["self"],["secbuf"],[R[13],[R[383]]],[R[383]]],[[R[41],[R[399]]],[R[399]]]]],[11,"new",E,R[398],15,[[["secbuf"]],["self"]]],[11,"generate_dna_key",E,"generate a DNA agent KeyBundle given an index based on…",15,[[["self"],["u64"]],[[R[400]],[R[41],[R[400]]]]]],[0,"utils",R[384],E,N,N],[3,R[426],R[407],E,N,N],[5,"verify",E,"Verify that an address signed some data",N,[[[R[67]],[R[12]],[R[0]]],[[R[41],["bool"]],["bool"]]]],[5,"verify_bufs",E,"Verify data that was signed @param {Base32}…",N,[[["base32"],["secbuf"]],[[R[41],["bool"]],["bool"]]]],[5,"generate_derived_seed_buf",E,"derive a seed from a source seed",N,[[["usize"],[R[401]],["secbuf"],["u64"]],[["secbuf"],[R[41],["secbuf"]]]]],[5,"generate_random_buf",E,"returns a random buf",N,[[["usize"]],["secbuf"]]],[5,"generate_random_seed_buf",E,"returns a random seed buf",N,[[],["secbuf"]]],[5,"encrypt_with_passphrase_buf",E,"encrypt and base64 encode a secbuf",N,[[[R[13],[R[383]]],[R[383]],["secbuf"]],[[R[41],[R[0]]],[R[0]]]]],[5,"decrypt_with_passphrase_buf",E,"unencode base64 and decrypt a passphrase encrypted blob",N,[[["usize"],["secbuf"],[R[13],[R[383]]],["str"],[R[383]]],[["secbuf"],[R[41],["secbuf"]]]]],[8,"Verify",E,"a trait for things that have a provenance that can be…",N,N],[10,"verify",E,E,16,[[["self"],[R[0]]],[[R[41],["bool"]],["bool"]]]],[11,"new",E,E,17,[[],["self"]]],[11,"to_sec_buf",E,E,17,[[["self"]],["secbuf"]]],[17,"CONTEXT_SIZE",R[384],E,N,N],[17,"SEED_SIZE",E,E,N,N],[17,"AGENT_ID_CTX",E,E,N,N],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[78],E,E,18,[[[U]],[R[6]]]],[11,R[79],E,E,18,[[],[R[6]]]],[11,R[89],E,E,18,[[["self"]],[T]]],[11,R[80],E,E,18,[[["self"]],[T]]],[11,R[84],E,E,18,[[["self"]],[R[90]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[78],E,E,19,[[[U]],[R[6]]]],[11,R[79],E,E,19,[[],[R[6]]]],[11,R[89],E,E,19,[[["self"]],[T]]],[11,R[80],E,E,19,[[["self"]],[T]]],[11,R[84],E,E,19,[[["self"]],[R[90]]]],[11,"from",R[402],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[78],E,E,0,[[[U]],[R[6]]]],[11,R[79],E,E,0,[[],[R[6]]]],[11,R[89],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"]],[R[90]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[82],E,E,1,[[["self"]],[T]]],[11,R[83],E,E,1,[[["self"],[T]]]],[11,R[78],E,E,1,[[[U]],[R[6]]]],[11,R[79],E,E,1,[[],[R[6]]]],[11,R[89],E,E,1,[[["self"]],[T]]],[11,R[80],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"]],[R[90]]]],[11,R[85],E,E,1,[[["self"]]]],[11,R[87],E,E,1,[[["self"],["k"]],["bool"]]],[11,"from",R[403],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[78],E,E,3,[[[U]],[R[6]]]],[11,R[79],E,E,3,[[],[R[6]]]],[11,R[89],E,E,3,[[["self"]],[T]]],[11,R[80],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"]],[R[90]]]],[11,"from",R[404],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[78],E,E,4,[[[U]],[R[6]]]],[11,R[79],E,E,4,[[],[R[6]]]],[11,R[89],E,E,4,[[["self"]],[T]]],[11,R[80],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"]],[R[90]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[78],E,E,5,[[[U]],[R[6]]]],[11,R[79],E,E,5,[[],[R[6]]]],[11,R[89],E,E,5,[[["self"]],[T]]],[11,R[80],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"]],[R[90]]]],[11,"from",R[405],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[82],E,E,7,[[["self"]],[T]]],[11,R[83],E,E,7,[[["self"],[T]]]],[11,R[78],E,E,7,[[[U]],[R[6]]]],[11,R[79],E,E,7,[[],[R[6]]]],[11,R[89],E,E,7,[[["self"]],[T]]],[11,R[80],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"]],[R[90]]]],[11,R[85],E,E,7,[[["self"]]]],[11,"from",R[406],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[78],E,E,8,[[[U]],[R[6]]]],[11,R[79],E,E,8,[[],[R[6]]]],[11,R[89],E,E,8,[[["self"]],[T]]],[11,R[80],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"]],[R[90]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[78],E,E,13,[[[U]],[R[6]]]],[11,R[79],E,E,13,[[],[R[6]]]],[11,R[89],E,E,13,[[["self"]],[T]]],[11,R[80],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"]],[R[90]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[78],E,E,14,[[[U]],[R[6]]]],[11,R[79],E,E,14,[[],[R[6]]]],[11,R[89],E,E,14,[[["self"]],[T]]],[11,R[80],E,E,14,[[["self"]],[T]]],[11,R[84],E,E,14,[[["self"]],[R[90]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[78],E,E,15,[[[U]],[R[6]]]],[11,R[79],E,E,15,[[],[R[6]]]],[11,R[89],E,E,15,[[["self"]],[T]]],[11,R[80],E,E,15,[[["self"]],[T]]],[11,R[84],E,E,15,[[["self"]],[R[90]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[78],E,E,9,[[[U]],[R[6]]]],[11,R[79],E,E,9,[[],[R[6]]]],[11,R[89],E,E,9,[[["self"]],[T]]],[11,R[80],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"]],[R[90]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[82],E,E,10,[[["self"]],[T]]],[11,R[83],E,E,10,[[["self"],[T]]]],[11,R[78],E,E,10,[[[U]],[R[6]]]],[11,R[79],E,E,10,[[],[R[6]]]],[11,R[89],E,E,10,[[["self"]],[T]]],[11,R[80],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"]],[R[90]]]],[11,R[85],E,E,10,[[["self"]]]],[11,R[87],E,E,10,[[["self"],["k"]],["bool"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[78],E,E,11,[[[U]],[R[6]]]],[11,R[79],E,E,11,[[],[R[6]]]],[11,R[89],E,E,11,[[["self"]],[T]]],[11,R[80],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"]],[R[90]]]],[11,"from",R[407],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[78],E,E,17,[[[U]],[R[6]]]],[11,R[79],E,E,17,[[],[R[6]]]],[11,R[89],E,E,17,[[["self"]],[T]]],[11,R[80],E,E,17,[[["self"]],[T]]],[11,R[84],E,E,17,[[["self"]],[R[90]]]],[11,R[382],R[406],E,8,[[],[R[411]]]],[11,R[408],E,E,8,[[],["usize"]]],[11,R[409],E,"Get the Seed from a Seed Blob @param {object} blob - the…",8,[[["secbuf"],[R[410]],[R[13],[R[383]]],[R[383]]],[R[41]]]],[11,"as_blob",E,"generate a persistence bundle with hint info @param…",8,[[["self"],["secbuf"],[R[13],[R[383]]],[R[383]],[R[0]]],[[R[410]],[R[41],[R[410]]]]]],[11,R[382],R[403],E,3,[[],[R[411]]]],[11,R[408],E,E,3,[[],["usize"]]],[11,"as_blob",E,R[412],3,[[["self"],["secbuf"],[R[13],[R[383]]],[R[383]],[R[0]]],[[R[410]],[R[41],[R[410]]]]]],[11,R[409],E,R[413],3,[[["secbuf"],[R[410]],[R[13],[R[383]]],[R[383]]],[[R[400]],[R[41],[R[400]]]]]],[11,R[382],R[404],E,4,[[],[R[411]]]],[11,R[408],E,E,4,[[],["usize"]]],[11,"as_blob",E,R[412],4,[[["self"],["secbuf"],[R[13],[R[383]]],[R[383]],[R[0]]],[[R[410]],[R[41],[R[410]]]]]],[11,R[409],E,R[413],4,[[["secbuf"],[R[410]],[R[13],[R[383]]],[R[383]]],[[R[386]],[R[41],[R[386]]]]]],[11,R[382],E,E,5,[[],[R[411]]]],[11,R[408],E,E,5,[[],["usize"]]],[11,"as_blob",E,R[412],5,[[["self"],["secbuf"],[R[13],[R[383]]],[R[383]],[R[0]]],[[R[410]],[R[41],[R[410]]]]]],[11,R[409],E,R[413],5,[[["secbuf"],[R[410]],[R[13],[R[383]]],[R[383]]],[[R[387]],[R[41],[R[387]]]]]],[11,"public",E,E,4,[[["self"]],[R[0]]]],[11,"private",E,E,4,[[["self"]],["secbuf"]]],[11,"codec",E,E,4,[[],[R[414]]]],[11,R[388],E,"derive the signing pair from a 32 byte seed buffer",4,[[["secbuf"]],[R[41]]]],[11,R[415],E,E,4,[[["self"]],[R[41]]]],[11,"public",E,E,5,[[["self"]],[R[0]]]],[11,"private",E,E,5,[[["self"]],["secbuf"]]],[11,"codec",E,E,5,[[],[R[414]]]],[11,R[388],E,"Derive the signing pair from a 32 byte seed buffer",5,[[["secbuf"]],[R[41]]]],[11,R[415],E,E,5,[[["self"]],[R[41]]]],[11,"seed",R[406],E,13,[[["self"]],["seed"]]],[11,R[416],E,E,13,[[["self"]],["seed"]]],[11,"seed",E,E,14,[[["self"]],["seed"]]],[11,R[416],E,E,14,[[["self"]],["seed"]]],[11,"seed",E,E,15,[[["self"]],["seed"]]],[11,R[416],E,E,15,[[["self"]],["seed"]]],[11,"eq",R[402],E,1,[[["self"],[R[411]]],["bool"]]],[11,"eq",R[406],E,10,[[["self"],[R[395]]],["bool"]]],[11,"clone",R[402],E,1,[[["self"]],[R[411]]]],[11,"clone",R[405],E,7,[[["self"]],[R[383]]]],[11,"clone",R[406],E,10,[[["self"]],[R[395]]]],[11,"deref",R[384],E,18,[[["self"]],[R[414]]]],[11,"deref",E,E,19,[[["self"]],[R[414]]]],[11,"fmt",R[402],E,1,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[406],E,10,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,8,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,13,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,14,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,15,[[["self"],[R[135]]],[R[6]]]],[11,R[331],R[384],E,18,[[["self"]]]],[11,R[331],E,E,19,[[["self"]]]],[11,R[138],R[402],E,0,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,1,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[406],E,10,[[["self"],["__s"]],[R[6]]]],[11,R[139],R[402],E,0,[[["__d"]],[R[6]]]],[11,R[139],E,E,1,[[["__d"]],[R[6]]]],[11,R[139],R[406],E,10,[[["__d"]],[R[6]]]]],"p":[[3,"KeyBlob"],[4,"BlobType"],[8,R[417]],[3,R[385]],[3,R[418]],[3,R[419]],[8,"KeyPair"],[3,R[420]],[3,"Seed"],[4,R[421]],[4,"SeedType"],[4,R[422]],[8,R[423]],[3,"RootSeed"],[3,R[424]],[3,R[425]],[8,"Verify"],[3,R[426]],[3,R[427]],[3,R[428]]]};
searchIndex["holochain_net"]={"doc":"holochain_net is a library that defines an abstract…","i":[[0,"tweetlog",R[430],E,N,N],[3,"TWEETLOG",R[455],E,N,N],[3,"Tweetlog",E,"Tweetlog singleton Holds a TweetLogger per Tag Creates a…",N,N],[3,R[502],E,"A facade for calling the singleton with a specific tag",N,N],[4,"LogLevel",E,E,N,N],[13,"Trace",E,E,0,N],[13,"Debug",E,E,0,N],[13,"Info",E,E,0,N],[13,"Warning",E,E,0,N],[13,"Error",E,E,0,N],[11,"to_char",E,E,0,[[[R[429]]],["char"]]],[11,"as_char",E,E,0,[[["self"]],["char"]]],[11,"new",E,E,1,[[],["self"]]],[11,"add",E,"Create internal TweetLogger for a Tag as well as a…",1,[[["self"],["str"]],["tweetproxy"]]],[11,"set",E,"Set the logging level, either globally, or for a tag",1,[[["self"],[R[13],[R[0]]],[R[429]],[R[0]]]]],[11,"reset_levels",E,"Clear any registered log levels",1,[[]]],[11,"listen",E,E,1,[[["self"]]]],[11,"listen_to_tag",E,E,1,[[["self"],["str"]]]],[11,"unlisten_all",E,"Clear any registered listener",1,[[]]],[11,"unlisten",E,"Clear any registered log listeners or levels",1,[[["self"],["str"]]]],[11,"should",E,"Check if a given level and tag would be logged",1,[[["self"],[R[13],[R[0]]],[R[429]],[R[0]]],["bool"]]],[11,T,E,E,1,[[["self"],["str"]]]],[11,"tt",E,E,1,[[["self"],["str"]]]],[11,"d",E,E,1,[[["self"],["str"]]]],[11,"dd",E,E,1,[[["self"],["str"]]]],[11,"i",E,E,1,[[["self"],["str"]]]],[11,"ii",E,E,1,[[["self"],["str"]]]],[11,"w",E,E,1,[[["self"],["str"]]]],[11,"ww",E,E,1,[[["self"],["str"]]]],[11,"e",E,E,1,[[["self"],["str"]]]],[11,"ee",E,E,1,[[["self"],["str"]]]],[11,"console",E,"println without displaying tag",1,[[[R[13],["str"]],[R[429]],["str"]]]],[11,"new",E,E,2,[[["str"]],["self"]]],[11,T,E,E,2,[[["self"],["str"]]]],[11,"d",E,E,2,[[["self"],["str"]]]],[11,"i",E,E,2,[[["self"],["str"]]]],[11,"w",E,E,2,[[["self"],["str"]]]],[11,"e",E,E,2,[[["self"],["str"]]]],[0,"connection",R[430],"Provides a lightweight concurrency abstraction for…",N,N],[0,"json_protocol",R[438],"This module provides a higher level interface to p2p /…",N,N],[3,R[503],R[456],E,N,N],[12,R[185],E,E,3,N],[12,R[431],E,E,3,N],[12,R[432],E,E,3,N],[12,"result_info",E,E,3,N],[3,R[504],E,E,N,N],[12,"state",E,E,4,N],[12,"id",E,E,4,N],[12,"bindings",E,E,4,N],[3,R[505],E,E,N,N],[12,"config",E,E,5,N],[3,R[506],E,E,N,N],[12,"peer_address",E,E,6,N],[3,"PeerData",E,E,N,N],[12,R[548],E,E,7,N],[3,R[507],E,E,N,N],[12,R[185],E,E,8,N],[12,R[431],E,E,8,N],[12,R[432],E,E,8,N],[12,"from_agent_id",E,E,8,N],[12,R[140],E,E,8,N],[3,R[508],E,E,N,N],[12,R[185],E,E,9,N],[12,R[548],E,E,9,N],[3,R[509],E,E,N,N],[12,"aspect_address",E,E,10,N],[12,R[846],E,E,10,N],[12,"aspect",E,E,10,N],[12,"publish_ts",E,E,10,N],[3,R[510],E,E,N,N],[12,R[192],E,E,11,N],[12,"aspect_list",E,E,11,N],[3,R[511],E,E,N,N],[12,R[185],E,E,12,N],[12,R[192],E,E,12,N],[12,R[431],E,E,12,N],[12,R[433],E,E,12,N],[12,"query",E,E,12,N],[3,R[512],E,E,N,N],[12,R[185],E,E,13,N],[12,R[192],E,E,13,N],[12,R[431],E,E,13,N],[12,R[433],E,E,13,N],[12,"responder_agent_id",E,E,13,N],[12,R[434],E,E,13,N],[3,R[513],E,E,N,N],[12,R[185],E,E,14,N],[12,R[435],E,E,14,N],[12,"entry",E,E,14,N],[3,R[514],E,E,N,N],[12,R[431],E,E,15,N],[12,R[185],E,E,15,N],[12,R[435],E,E,15,N],[12,R[192],E,E,15,N],[12,R[847],E,E,15,N],[3,R[515],E,E,N,N],[12,R[185],E,E,16,N],[12,R[435],E,"Request Entry from a specific Agent",16,N],[12,R[431],E,E,16,N],[12,R[192],E,E,16,N],[12,"aspect_address_list",E,E,16,N],[3,R[516],E,E,N,N],[12,R[185],E,E,17,N],[12,R[435],E,E,17,N],[12,R[431],E,E,17,N],[12,"entry",E,E,17,N],[3,R[517],E,E,N,N],[12,R[185],E,E,18,N],[12,R[435],E,"Request List from a specific Agent",18,N],[12,R[431],E,E,18,N],[3,R[518],E,E,N,N],[12,R[185],E,E,19,N],[12,R[435],E,E,19,N],[12,R[431],E,E,19,N],[12,"address_map",E,E,19,N],[4,R[519],E,"Enum holding all message types that serialize as json in…",N,N],[13,"SuccessResult",E,"Success response to a request (any message with an _id…",20,N],[13,"FailureResult",E,"Failure response to a request (any message with an _id…",20,N],[13,"TrackDna",E,"Order the p2p module to be part of the network of the…",20,N],[13,"UntrackDna",E,"Order the p2p module to leave the network of the specified…",20,N],[13,"Connect",E,"Request the network module to connect to a specific Peer.…",20,N],[13,"PeerConnected",E,"Notify that another Peer has connected to this Dna. This…",20,N],[13,"GetState",E,"Request the current state from the p2p module",20,N],[13,"GetStateResult",E,"p2p module's current state response.",20,N],[13,"GetDefaultConfig",E,"Request the default config from the p2p module",20,N],[13,"GetDefaultConfigResult",E,"the p2p module's default config response",20,N],[13,"SetConfig",E,"Set the p2p config",20,N],[13,"SendMessage",E,"Send a message to another peer on the network",20,N],[13,"SendMessageResult",E,"the response from a previous `SendMessage`",20,N],[13,"HandleSendMessage",E,"Request to handle a message another peer has sent us.",20,N],[13,"HandleSendMessageResult",E,"Core's response to a `HandleSendMessage`",20,N],[13,"HandleFetchEntry",E,"Another node, or the network module itself is requesting…",20,N],[13,"HandleFetchEntryResult",E,"Successful data response for a `HandleFetchEntry` request",20,N],[13,"PublishEntry",E,"Core's request to add an Entry to the DHT network. The…",20,N],[13,"HandleStoreEntryAspect",E,"Network request for Core to store an Entry in its DHT shard.",20,N],[13,"QueryEntry",E,"Request some info / data from a Entry",20,N],[13,"QueryEntryResult",E,E,20,N],[13,"HandleQueryEntry",E,E,20,N],[13,"HandleQueryEntryResult",E,E,20,N],[13,"HandleGetAuthoringEntryList",E,R[436],20,N],[13,"HandleGetAuthoringEntryListResult",E,E,20,N],[13,"HandleGetGossipingEntryList",E,R[436],20,N],[13,"HandleGetGossipingEntryListResult",E,E,20,N],[11,"get",E,"get an EntryAspectData from an EntryData",11,[[["self"],[R[12]]],[[R[437]],[R[13],[R[437]]]]]],[0,"net_connection",R[438],E,N,N],[3,R[521],R[457],"closure for processing a Protocol message received from…",N,N],[6,"NetShutdown",E,"closure for doing any clean up at shutdown of a NetWorker",N,N],[6,"NetWorkerFactory",E,"closure for instantiating a NetWorker from a NetHandler",N,N],[8,"NetSend",E,"Trait for sending a Protocol message to the network",N,N],[10,"send",E,E,21,[[["self"],[R[440]]],[R[439]]]],[8,R[520],E,"Trait that represents a worker thread that relays incoming…",N,N],[11,R[848],E,"The receiving method when NetSend's `send()` is called. It…",22,[[["self"],[R[440]]],[R[439]]]],[11,"tick",E,"Polls the p2p module for Protocol messages received from…",22,[[["self"]],[[R[439],["bool"]],["bool"]]]],[11,"stop",E,"stop the worker",22,[[["box"]],[R[439]]]],[11,R[454],E,"Getter of the connection's endpoint",22,[[["self"]],[[R[13],[R[0]]],[R[0]]]]],[11,"new",E,E,23,[[["box",["fnmut"]],["fnmut"]],[R[441]]]],[11,"handle",E,E,23,[[["self"],[R[439],[R[440]]],[R[440]]],[R[439]]]],[0,"net_connection_thread",R[438],E,N,N],[3,R[522],R[458],"Struct for holding a network connection running on a…",N,N],[12,R[454],E,E,24,N],[11,"new",E,"NetSendThread Constructor. Spawns a thread that will…",24,[[[R[442]],[R[443]],[R[441]]],[R[439]]]],[11,"stop",E,"stop the worker thread (join)",24,[[],[R[439]]]],[0,"net_relay",R[438],E,N,N],[3,R[523],R[459],"a simple pass-through NetSend instance this struct can be…",N,N],[11,"stop",E,E,25,[[],[R[439]]]],[11,"tick",E,"call tick to perform any worker upkeep",25,[[["self"]],[[R[439],["bool"]],["bool"]]]],[11,"new",E,"create a new NetSendRelay instance with given handler &…",25,[[[R[442]],[R[443]],[R[441]]],[R[439]]]],[0,R[440],R[438],"This module provides the core low-level protocol…",N,N],[3,R[524],R[460],R[444],N,N],[12,"name",E,E,26,N],[12,"data",E,E,26,N],[3,"PingData",E,R[445],N,N],[12,"sent",E,E,27,N],[3,"PongData",E,R[446],N,N],[12,"orig",E,E,28,N],[12,"recv",E,E,28,N],[4,"Protocol",E,"Low-level interface spec for communicating with the p2p…",N,N],[13,"NamedBinary",E,R[444],29,N],[13,"Json",E,"send/recv generic json as utf8 strings",29,N],[13,"Lib3hClient",E,"send/recv Lib3hClientProtocol message",29,N],[13,"Lib3hServer",E,"send/recv Lib3hServerProtocol message",29,N],[13,"Ping",E,R[445],29,N],[13,"Pong",E,R[446],29,N],[13,"P2pReady",E,"we have connected / configured the connection, ready for…",29,N],[13,"Shutdown",E,"Tell network module to shutdown",29,N],[13,"Terminated",E,"Network module is notifying IPC connected peers of…",29,N],[11,"is_named_binary",E,E,29,[[["self"]],["bool"]]],[11,"as_named_binary",E,E,29,[[["self"]],[R[473]]]],[11,"is_json",E,E,29,[[["self"]],["bool"]]],[11,"as_json",E,E,29,[[["self"]],[R[26]]]],[11,"is_ping",E,E,29,[[["self"]],["bool"]]],[11,"as_ping",E,E,29,[[["self"]],[R[495]]]],[11,"is_pong",E,E,29,[[["self"]],["bool"]]],[11,"as_pong",E,E,29,[[["self"]],[R[496]]]],[11,"as_json_string",E,"get a json string straight out of the Protocol enum",29,[[["self"]],[R[26]]]],[6,"NetResult",R[438],E,N,N],[0,"error",R[430],E,N,N],[4,R[525],R[461],E,N,N],[13,R[449],E,E,30,N],[12,"error","holochain_net::error::NetworkError",E,30,N],[0,"in_memory",R[430],"Module for the in-memory network module",N,N],[0,"memory_book",R[447],E,N,N],[5,"book_has_aspect","holochain_net::in_memory::memory_book",E,N,[[[R[12]],[R[544]],[R[0]]],["bool"]]],[5,"book_has_entry",E,E,N,[[[R[0]],[R[12]],[R[544]]],["bool"]]],[0,"memory_server",R[447],"provides in-memory p2p \"server\" for use in scenario…",N,N],[0,"memory_worker",E,"provides fake in-memory p2p worker for use in scenario…",N,N],[3,R[526],R[462],"a p2p worker for mocking in-memory scenario tests",N,N],[11,"new",E,"create a new memory worker connected to an in-memory server",31,[[[R[26]],[R[441]]],[R[439]]]],[0,"ipc",R[430],"IPC Abstraction for P2P networking",N,N],[3,R[448],R[451],"represents an error generated by a connection instance",N,N],[12,"0",E,E,32,N],[3,R[528],E,"A \"Transport\" implementation based off the websocket…",N,N],[4,R[527],E,"events that can be generated during a connection `poll()`",N,N],[13,R[448],E,E,33,N],[13,"Connect",E,E,33,N],[13,"Message",E,E,33,N],[13,"Close",E,E,33,N],[11,"new",E,E,32,[[[R[0]]],["self"]]],[11,"with_std_tcp_stream",E,"convenience constructor for creating a websocket…",34,[[],["self"]]],[11,"new",E,"create a new websocket \"Transport\" instance of type T",34,[[],["self"]]],[11,"wait_connect",E,"connect and wait for a Connect event response",34,[[["self"],["str"]],[[R[453],[R[0]]],[R[0]]]]],[0,"errors",E,"This module holds net_ipc custom error types.",N,N],[4,"IpcError",R[450],"net_ipc-specific error types",N,N],[13,"MissingDataError",E,"Translate an Option<_> unwrap into a Result::Err",35,N],[13,"Timeout",E,"Socket timeout",35,N],[13,R[449],E,"Otherwise undefined error message",35,N],[12,"error","holochain_net::ipc::errors::IpcError",E,35,N],[6,"Result",R[450],"Default result type for net_ipc modules that `use…",N,N],[0,"n3h",R[451],"check that n3h is in the path, or download it",N,N],[5,"get_verify_n3h","holochain_net::ipc::n3h","check for n3h in the path. if so, check its version if…",N,[[],[R[439]]]],[0,"spawn",R[451],"This is a helper function to manage spawning an IPC…",N,N],[3,R[529],R[463],E,N,N],[12,"kill",E,E,36,N],[12,"ipc_binding",E,E,36,N],[12,R[969],E,E,36,N],[5,"ipc_spawn",E,"Spawn a holochain networking ipc sub-process Will block…",N,[[["bool"],["usize"],[R[544],[R[0],R[0]]],[R[0]]],[[R[439],[R[452]]],[R[452]]]]],[17,"DEFAULT_TIMEOUT_MS",E,E,N,N],[0,"util",R[451],"This module holds util functions, such as constructing…",N,N],[5,"get_millis","holochain_net::ipc::util","helper to get milliseconds since the unix epoch as an f64",N,[[],["f64"]]],[6,"DidWork",R[451],"type name for a bool indicating if work was done during a…",N,N],[6,"TransportResult",E,"a result object whos error is a TransportError instance",N,N],[17,"DEFAULT_HEARTBEAT_MS",E,"how often should we send a heartbeat if we have not…",N,N],[17,"DEFAULT_HEARTBEAT_WAIT_MS",E,"when should we close a connection due to not receiving…",N,N],[8,R[530],E,"represents a pool of connections to remote nodes",N,N],[10,"connect",E,"establish a connection to a remote node",37,[[["self"],["str"]],[[R[453],[R[0]]],[R[0]]]]],[10,"close",E,"close an existing open connection",37,[[["self"],[R[0]]],[R[453]]]],[10,R[469],E,"close all existing open connections",37,[[["self"]],[R[453]]]],[10,R[470],E,R[471],37,[[["self"]],[["vec",[R[0]]],[R[453],["vec"]]]]],[10,"poll",E,"do some work... this should be called very frequently on…",37,[[["self"]],[R[453]]]],[10,"send",E,"send a payload to remote nodes",37,[[["self"]],[R[453]]]],[10,"send_all",E,"send a payload to all remote nodes",37,[[["self"]],[R[453]]]],[0,"ipc_net_worker",R[430],"provides a NetWorker implementation for backend IPC p2p…",N,N],[3,R[531],R[464],"a NetWorker talking to the network via another process…",N,N],[11,"new",E,"Public Constructor with config as a json string",38,[[[R[26]],[R[0]],[R[441]]],[R[439]]]],[0,"lib3h_worker",R[430],"provides worker that makes use of lib3h",N,N],[3,R[532],R[465],"A worker that makes use of lib3h / NetworkEngine. It…",N,N],[11,"new",E,"Create a new worker connected to the lib3h NetworkEngine",39,[[["realengineconfig"],[R[441]]],[R[439]]]],[0,R[612],R[430],E,N,N],[3,R[533],R[466],E,N,N],[12,"backend_kind",E,E,40,N],[12,"backend_config",E,E,40,N],[12,"maybe_end_user_config",E,E,40,N],[4,R[534],E,E,N,N],[13,"MEMORY",E,E,41,N],[13,"N3H",E,E,41,N],[13,"LIB3H",E,E,41,N],[4,R[535],E,E,N,N],[13,"Json",E,E,42,N],[13,"Lib3h",E,E,42,N],[11,"as_str",E,E,40,[[["self"]],[R[0]]]],[11,"new",E,E,40,[[[R[13],["value"]],[R[479]],[R[498]],["value"]],["self"]]],[11,"from_file",E,E,40,[[["str"]],["self"]]],[11,"default_lib3h",E,E,40,[[],["self"]]],[11,"default_ipc_spawn",E,E,40,[[],["self"]]],[11,"new_ipc_uri",E,E,40,[[[R[13],[R[0]]],["vec"],[R[0]]],["self"]]],[11,"default_ipc_uri",E,E,40,[[["str"],[R[13],["str"]]],["self"]]],[11,"new_with_memory_backend",E,E,40,[[["str"]],["self"]]],[11,"new_with_unique_memory_backend",E,E,40,[[],["self"]]],[11,"unique_memory_backend_json",E,E,40,[[],["value"]]],[11,"memory_backend_json",E,E,40,[[["str"]],["value"]]],[11,"default_end_user_config",E,E,40,[[],["value"]]],[11,"load_end_user_config",E,E,40,[[[R[13],[R[0]]],[R[0]]],["value"]]],[18,"DEFAULT_LIB3H_CONFIG",E,E,40,N],[18,"DEFAULT_N3H_SPAWN_CONFIG",E,E,40,N],[18,"DEFAULT_N3H_URI_CONFIG",E,E,40,N],[0,"p2p_network",R[430],"This module provides the main abstraction for differing…",N,N],[3,R[536],R[467],"Facade handling a p2p module responsable for the network…",N,N],[11,"new",E,"Constructor `config` is the configuration of the p2p…",43,[[[R[499]],[R[441]]],[R[439]]]],[11,"stop",E,"Stop the network connection (disconnect any sockets, join…",43,[[],[R[439]]]],[11,R[454],E,R[556],43,[[["self"]],[R[0]]]],[14,"log_t",R[430],E,N,N],[14,"log_d",E,E,N,N],[14,"log_i",E,E,N,N],[14,"log_w",E,E,N,N],[14,"log_e",E,E,N,N],[14,"log_tt",E,E,N,N],[14,"log_dd",E,E,N,N],[14,"log_ii",E,E,N,N],[14,"log_ww",E,E,N,N],[14,"log_ee",E,E,N,N],[14,"bail_generic",E,"Macro akin to `bail!()` but returns an…",N,N],[11,"from",R[455],E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[78],E,E,44,[[[U]],[R[6]]]],[11,R[79],E,E,44,[[],[R[6]]]],[11,R[89],E,E,44,[[["self"]],[T]]],[11,R[80],E,E,44,[[["self"]],[T]]],[11,R[84],E,E,44,[[["self"]],[R[90]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[78],E,E,1,[[[U]],[R[6]]]],[11,R[79],E,E,1,[[],[R[6]]]],[11,R[89],E,E,1,[[["self"]],[T]]],[11,R[80],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"]],[R[90]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[78],E,E,2,[[[U]],[R[6]]]],[11,R[79],E,E,2,[[],[R[6]]]],[11,R[89],E,E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"]],[R[90]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[82],E,E,0,[[["self"]],[T]]],[11,R[83],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[[U]],[R[6]]]],[11,R[79],E,E,0,[[],[R[6]]]],[11,R[89],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"]],[R[90]]]],[11,R[85],E,E,0,[[["self"]]]],[11,"from",R[456],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[82],E,E,3,[[["self"]],[T]]],[11,R[83],E,E,3,[[["self"],[T]]]],[11,R[78],E,E,3,[[[U]],[R[6]]]],[11,R[79],E,E,3,[[],[R[6]]]],[11,R[89],E,E,3,[[["self"]],[T]]],[11,R[80],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"]],[R[90]]]],[11,R[85],E,E,3,[[["self"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[82],E,E,4,[[["self"]],[T]]],[11,R[83],E,E,4,[[["self"],[T]]]],[11,R[78],E,E,4,[[[U]],[R[6]]]],[11,R[79],E,E,4,[[],[R[6]]]],[11,R[89],E,E,4,[[["self"]],[T]]],[11,R[80],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"]],[R[90]]]],[11,R[85],E,E,4,[[["self"]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[82],E,E,5,[[["self"]],[T]]],[11,R[83],E,E,5,[[["self"],[T]]]],[11,R[78],E,E,5,[[[U]],[R[6]]]],[11,R[79],E,E,5,[[],[R[6]]]],[11,R[89],E,E,5,[[["self"]],[T]]],[11,R[80],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"]],[R[90]]]],[11,R[85],E,E,5,[[["self"]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[82],E,E,6,[[["self"]],[T]]],[11,R[83],E,E,6,[[["self"],[T]]]],[11,R[78],E,E,6,[[[U]],[R[6]]]],[11,R[79],E,E,6,[[],[R[6]]]],[11,R[89],E,E,6,[[["self"]],[T]]],[11,R[80],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"]],[R[90]]]],[11,R[85],E,E,6,[[["self"]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[82],E,E,7,[[["self"]],[T]]],[11,R[83],E,E,7,[[["self"],[T]]]],[11,R[78],E,E,7,[[[U]],[R[6]]]],[11,R[79],E,E,7,[[],[R[6]]]],[11,R[89],E,E,7,[[["self"]],[T]]],[11,R[80],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"]],[R[90]]]],[11,R[85],E,E,7,[[["self"]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[82],E,E,8,[[["self"]],[T]]],[11,R[83],E,E,8,[[["self"],[T]]]],[11,R[78],E,E,8,[[[U]],[R[6]]]],[11,R[79],E,E,8,[[],[R[6]]]],[11,R[89],E,E,8,[[["self"]],[T]]],[11,R[80],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"]],[R[90]]]],[11,R[85],E,E,8,[[["self"]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[82],E,E,9,[[["self"]],[T]]],[11,R[83],E,E,9,[[["self"],[T]]]],[11,R[78],E,E,9,[[[U]],[R[6]]]],[11,R[79],E,E,9,[[],[R[6]]]],[11,R[89],E,E,9,[[["self"]],[T]]],[11,R[80],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"]],[R[90]]]],[11,R[85],E,E,9,[[["self"]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[82],E,E,10,[[["self"]],[T]]],[11,R[83],E,E,10,[[["self"],[T]]]],[11,R[78],E,E,10,[[[U]],[R[6]]]],[11,R[79],E,E,10,[[],[R[6]]]],[11,R[89],E,E,10,[[["self"]],[T]]],[11,R[80],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"]],[R[90]]]],[11,R[85],E,E,10,[[["self"]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[82],E,E,11,[[["self"]],[T]]],[11,R[83],E,E,11,[[["self"],[T]]]],[11,R[78],E,E,11,[[[U]],[R[6]]]],[11,R[79],E,E,11,[[],[R[6]]]],[11,R[89],E,E,11,[[["self"]],[T]]],[11,R[80],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"]],[R[90]]]],[11,R[85],E,E,11,[[["self"]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[82],E,E,12,[[["self"]],[T]]],[11,R[83],E,E,12,[[["self"],[T]]]],[11,R[78],E,E,12,[[[U]],[R[6]]]],[11,R[79],E,E,12,[[],[R[6]]]],[11,R[89],E,E,12,[[["self"]],[T]]],[11,R[80],E,E,12,[[["self"]],[T]]],[11,R[84],E,E,12,[[["self"]],[R[90]]]],[11,R[85],E,E,12,[[["self"]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[82],E,E,13,[[["self"]],[T]]],[11,R[83],E,E,13,[[["self"],[T]]]],[11,R[78],E,E,13,[[[U]],[R[6]]]],[11,R[79],E,E,13,[[],[R[6]]]],[11,R[89],E,E,13,[[["self"]],[T]]],[11,R[80],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"]],[R[90]]]],[11,R[85],E,E,13,[[["self"]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[82],E,E,14,[[["self"]],[T]]],[11,R[83],E,E,14,[[["self"],[T]]]],[11,R[78],E,E,14,[[[U]],[R[6]]]],[11,R[79],E,E,14,[[],[R[6]]]],[11,R[89],E,E,14,[[["self"]],[T]]],[11,R[80],E,E,14,[[["self"]],[T]]],[11,R[84],E,E,14,[[["self"]],[R[90]]]],[11,R[85],E,E,14,[[["self"]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[82],E,E,15,[[["self"]],[T]]],[11,R[83],E,E,15,[[["self"],[T]]]],[11,R[78],E,E,15,[[[U]],[R[6]]]],[11,R[79],E,E,15,[[],[R[6]]]],[11,R[89],E,E,15,[[["self"]],[T]]],[11,R[80],E,E,15,[[["self"]],[T]]],[11,R[84],E,E,15,[[["self"]],[R[90]]]],[11,R[85],E,E,15,[[["self"]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[82],E,E,16,[[["self"]],[T]]],[11,R[83],E,E,16,[[["self"],[T]]]],[11,R[78],E,E,16,[[[U]],[R[6]]]],[11,R[79],E,E,16,[[],[R[6]]]],[11,R[89],E,E,16,[[["self"]],[T]]],[11,R[80],E,E,16,[[["self"]],[T]]],[11,R[84],E,E,16,[[["self"]],[R[90]]]],[11,R[85],E,E,16,[[["self"]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[82],E,E,17,[[["self"]],[T]]],[11,R[83],E,E,17,[[["self"],[T]]]],[11,R[78],E,E,17,[[[U]],[R[6]]]],[11,R[79],E,E,17,[[],[R[6]]]],[11,R[89],E,E,17,[[["self"]],[T]]],[11,R[80],E,E,17,[[["self"]],[T]]],[11,R[84],E,E,17,[[["self"]],[R[90]]]],[11,R[85],E,E,17,[[["self"]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[82],E,E,18,[[["self"]],[T]]],[11,R[83],E,E,18,[[["self"],[T]]]],[11,R[78],E,E,18,[[[U]],[R[6]]]],[11,R[79],E,E,18,[[],[R[6]]]],[11,R[89],E,E,18,[[["self"]],[T]]],[11,R[80],E,E,18,[[["self"]],[T]]],[11,R[84],E,E,18,[[["self"]],[R[90]]]],[11,R[85],E,E,18,[[["self"]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[82],E,E,19,[[["self"]],[T]]],[11,R[83],E,E,19,[[["self"],[T]]]],[11,R[78],E,E,19,[[[U]],[R[6]]]],[11,R[79],E,E,19,[[],[R[6]]]],[11,R[89],E,E,19,[[["self"]],[T]]],[11,R[80],E,E,19,[[["self"]],[T]]],[11,R[84],E,E,19,[[["self"]],[R[90]]]],[11,R[85],E,E,19,[[["self"]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[82],E,E,20,[[["self"]],[T]]],[11,R[83],E,E,20,[[["self"],[T]]]],[11,R[78],E,E,20,[[[U]],[R[6]]]],[11,R[79],E,E,20,[[],[R[6]]]],[11,R[89],E,E,20,[[["self"]],[T]]],[11,R[80],E,E,20,[[["self"]],[T]]],[11,R[84],E,E,20,[[["self"]],[R[90]]]],[11,R[85],E,E,20,[[["self"]]]],[11,"from",R[457],E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[82],E,E,23,[[["self"]],[T]]],[11,R[83],E,E,23,[[["self"],[T]]]],[11,R[78],E,E,23,[[[U]],[R[6]]]],[11,R[79],E,E,23,[[],[R[6]]]],[11,R[89],E,E,23,[[["self"]],[T]]],[11,R[80],E,E,23,[[["self"]],[T]]],[11,R[84],E,E,23,[[["self"]],[R[90]]]],[11,R[85],E,E,23,[[["self"]]]],[11,"from",R[458],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[78],E,E,24,[[[U]],[R[6]]]],[11,R[79],E,E,24,[[],[R[6]]]],[11,R[89],E,E,24,[[["self"]],[T]]],[11,R[80],E,E,24,[[["self"]],[T]]],[11,R[84],E,E,24,[[["self"]],[R[90]]]],[11,"from",R[459],E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[78],E,E,25,[[[U]],[R[6]]]],[11,R[79],E,E,25,[[],[R[6]]]],[11,R[89],E,E,25,[[["self"]],[T]]],[11,R[80],E,E,25,[[["self"]],[T]]],[11,R[84],E,E,25,[[["self"]],[R[90]]]],[11,"from",R[460],E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[82],E,E,26,[[["self"]],[T]]],[11,R[83],E,E,26,[[["self"],[T]]]],[11,R[78],E,E,26,[[[U]],[R[6]]]],[11,R[79],E,E,26,[[],[R[6]]]],[11,R[89],E,E,26,[[["self"]],[T]]],[11,R[80],E,E,26,[[["self"]],[T]]],[11,R[84],E,E,26,[[["self"]],[R[90]]]],[11,R[85],E,E,26,[[["self"]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[82],E,E,27,[[["self"]],[T]]],[11,R[83],E,E,27,[[["self"],[T]]]],[11,R[78],E,E,27,[[[U]],[R[6]]]],[11,R[79],E,E,27,[[],[R[6]]]],[11,R[89],E,E,27,[[["self"]],[T]]],[11,R[80],E,E,27,[[["self"]],[T]]],[11,R[84],E,E,27,[[["self"]],[R[90]]]],[11,R[85],E,E,27,[[["self"]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[82],E,E,28,[[["self"]],[T]]],[11,R[83],E,E,28,[[["self"],[T]]]],[11,R[78],E,E,28,[[[U]],[R[6]]]],[11,R[79],E,E,28,[[],[R[6]]]],[11,R[89],E,E,28,[[["self"]],[T]]],[11,R[80],E,E,28,[[["self"]],[T]]],[11,R[84],E,E,28,[[["self"]],[R[90]]]],[11,R[85],E,E,28,[[["self"]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[82],E,E,29,[[["self"]],[T]]],[11,R[83],E,E,29,[[["self"],[T]]]],[11,R[78],E,E,29,[[[U]],[R[6]]]],[11,R[79],E,E,29,[[],[R[6]]]],[11,R[89],E,E,29,[[["self"]],[T]]],[11,R[80],E,E,29,[[["self"]],[T]]],[11,R[84],E,E,29,[[["self"]],[R[90]]]],[11,R[85],E,E,29,[[["self"]]]],[11,"from",R[461],E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[94],E,E,30,[[["self"]],[R[0]]]],[11,R[78],E,E,30,[[[U]],[R[6]]]],[11,R[79],E,E,30,[[],[R[6]]]],[11,R[89],E,E,30,[[["self"]],[T]]],[11,R[80],E,E,30,[[["self"]],[T]]],[11,R[84],E,E,30,[[["self"]],[R[90]]]],[11,"as_fail",E,E,30,[[["self"]],["fail"]]],[11,"from",R[462],E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[78],E,E,31,[[[U]],[R[6]]]],[11,R[79],E,E,31,[[],[R[6]]]],[11,R[89],E,E,31,[[["self"]],[T]]],[11,R[80],E,E,31,[[["self"]],[T]]],[11,R[84],E,E,31,[[["self"]],[R[90]]]],[11,"from",R[451],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[94],E,E,32,[[["self"]],[R[0]]]],[11,R[82],E,E,32,[[["self"]],[T]]],[11,R[83],E,E,32,[[["self"],[T]]]],[11,R[78],E,E,32,[[[U]],[R[6]]]],[11,R[79],E,E,32,[[],[R[6]]]],[11,R[89],E,E,32,[[["self"]],[T]]],[11,R[80],E,E,32,[[["self"]],[T]]],[11,R[84],E,E,32,[[["self"]],[R[90]]]],[11,"as_fail",E,E,32,[[["self"]],["fail"]]],[11,R[85],E,E,32,[[["self"]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[78],E,E,34,[[[U]],[R[6]]]],[11,R[79],E,E,34,[[],[R[6]]]],[11,R[89],E,E,34,[[["self"]],[T]]],[11,R[80],E,E,34,[[["self"]],[T]]],[11,R[84],E,E,34,[[["self"]],[R[90]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[82],E,E,33,[[["self"]],[T]]],[11,R[83],E,E,33,[[["self"],[T]]]],[11,R[78],E,E,33,[[[U]],[R[6]]]],[11,R[79],E,E,33,[[],[R[6]]]],[11,R[89],E,E,33,[[["self"]],[T]]],[11,R[80],E,E,33,[[["self"]],[T]]],[11,R[84],E,E,33,[[["self"]],[R[90]]]],[11,R[85],E,E,33,[[["self"]]]],[11,"from",R[450],E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[94],E,E,35,[[["self"]],[R[0]]]],[11,R[82],E,E,35,[[["self"]],[T]]],[11,R[83],E,E,35,[[["self"],[T]]]],[11,R[78],E,E,35,[[[U]],[R[6]]]],[11,R[79],E,E,35,[[],[R[6]]]],[11,R[89],E,E,35,[[["self"]],[T]]],[11,R[80],E,E,35,[[["self"]],[T]]],[11,R[84],E,E,35,[[["self"]],[R[90]]]],[11,"as_fail",E,E,35,[[["self"]],["fail"]]],[11,R[85],E,E,35,[[["self"]]]],[11,"from",R[463],E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[78],E,E,36,[[[U]],[R[6]]]],[11,R[79],E,E,36,[[],[R[6]]]],[11,R[89],E,E,36,[[["self"]],[T]]],[11,R[80],E,E,36,[[["self"]],[T]]],[11,R[84],E,E,36,[[["self"]],[R[90]]]],[11,"from",R[464],E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[78],E,E,38,[[[U]],[R[6]]]],[11,R[79],E,E,38,[[],[R[6]]]],[11,R[89],E,E,38,[[["self"]],[T]]],[11,R[80],E,E,38,[[["self"]],[T]]],[11,R[84],E,E,38,[[["self"]],[R[90]]]],[11,"from",R[465],E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[78],E,E,39,[[[U]],[R[6]]]],[11,R[79],E,E,39,[[],[R[6]]]],[11,R[89],E,E,39,[[["self"]],[T]]],[11,R[80],E,E,39,[[["self"]],[T]]],[11,R[84],E,E,39,[[["self"]],[R[90]]]],[11,"from",R[466],E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[82],E,E,40,[[["self"]],[T]]],[11,R[83],E,E,40,[[["self"],[T]]]],[11,R[78],E,E,40,[[[U]],[R[6]]]],[11,R[79],E,E,40,[[],[R[6]]]],[11,R[89],E,E,40,[[["self"]],[T]]],[11,R[80],E,E,40,[[["self"]],[T]]],[11,R[84],E,E,40,[[["self"]],[R[90]]]],[11,R[85],E,E,40,[[["self"]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[82],E,E,41,[[["self"]],[T]]],[11,R[83],E,E,41,[[["self"],[T]]]],[11,R[78],E,E,41,[[[U]],[R[6]]]],[11,R[79],E,E,41,[[],[R[6]]]],[11,R[89],E,E,41,[[["self"]],[T]]],[11,R[80],E,E,41,[[["self"]],[T]]],[11,R[84],E,E,41,[[["self"]],[R[90]]]],[11,R[87],E,E,41,[[["self"],["k"]],["bool"]]],[11,R[85],E,E,41,[[["self"]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[82],E,E,42,[[["self"]],[T]]],[11,R[83],E,E,42,[[["self"],[T]]]],[11,R[78],E,E,42,[[[U]],[R[6]]]],[11,R[79],E,E,42,[[],[R[6]]]],[11,R[89],E,E,42,[[["self"]],[T]]],[11,R[80],E,E,42,[[["self"]],[T]]],[11,R[84],E,E,42,[[["self"]],[R[90]]]],[11,R[85],E,E,42,[[["self"]]]],[11,"from",R[467],E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[78],E,E,43,[[[U]],[R[6]]]],[11,R[79],E,E,43,[[],[R[6]]]],[11,R[89],E,E,43,[[["self"]],[T]]],[11,R[80],E,E,43,[[["self"]],[T]]],[11,R[84],E,E,43,[[["self"]],[R[90]]]],[11,"send",R[458],"send a message to the worker within NetConnectionThread's…",24,[[["self"],[R[440]]],[R[439]]]],[11,"send",R[459],"send a message to the worker within this…",25,[[["self"],[R[440]]],[R[439]]]],[11,"send",R[467],R[562],43,[[["self"],[R[440]]],[R[439]]]],[11,R[848],R[462],"we got a message from holochain core forward to our…",31,[[["self"],[R[440]]],[R[439]]]],[11,"tick",E,"check for messages from our InMemoryServer",31,[[["self"]],[[R[439],["bool"]],["bool"]]]],[11,"stop",E,R[468],31,[[["box"]],[R[439]]]],[11,R[454],E,"Set server's name as worker's endpoint",31,[[["self"]],[[R[13],[R[0]]],[R[0]]]]],[11,"stop",R[464],R[468],38,[[["box"]],[R[439]]]],[11,R[848],E,"we got a message from holochain core (just forwards to the…",38,[[["self"],[R[440]]],[R[439]]]],[11,"tick",E,"do some upkeep on the internal worker IPC server state…",38,[[["self"]],[[R[439],["bool"]],["bool"]]]],[11,R[454],E,"Getter",38,[[["self"]],[[R[13],[R[0]]],[R[0]]]]],[11,R[848],R[465],"We got a message from core -> forward it to the…",39,[[["self"],[R[440]]],[R[439]]]],[11,"tick",E,"Check for messages from our NetworkEngine",39,[[["self"]],[[R[439],["bool"]],["bool"]]]],[11,R[454],E,"Set the advertise as worker's endpoint",39,[[["self"]],[[R[13],[R[0]]],[R[0]]]]],[11,"connect",R[451],"connect to a remote websocket service",34,[[["self"],["str"]],[[R[453],[R[0]]],[R[0]]]]],[11,"close",E,"close a currently tracked connection",34,[[["self"],[R[0]]],[R[453]]]],[11,R[469],E,"close all currently tracked connections",34,[[["self"]],[R[453]]]],[11,R[470],E,R[471],34,[[["self"]],[["vec",[R[0]]],[R[453],["vec"]]]]],[11,"poll",E,"this should be called frequently on the event loop looks…",34,[[["self"]],[R[453]]]],[11,"send",E,"send a message to one or more remote connected nodes",34,[[["self"]],[R[453]]]],[11,"send_all",E,"send a message to all remote nodes",34,[[["self"]],[R[453]]]],[11,"drop",R[462],E,31,[[["self"]]]],[11,"from",R[455],E,0,[[["char"]],["self"]]],[11,"from",R[460],E,29,[[[R[472]]],["self"]]],[11,"from",E,E,29,[[[R[472]]],["self"]]],[11,"from",E,E,26,[[[R[440]]],["self"]]],[11,"from",E,E,26,[[[R[440]]],["self"]]],[11,"from",E,E,29,[[[R[473]]],["self"]]],[11,"from",E,E,29,[[[R[473]]],["self"]]],[11,"from",E,E,29,[[["str"]],["self"]]],[11,"from",E,E,29,[[[R[0]]],["self"]]],[11,"from",E,E,29,[[[R[474]]],["self"]]],[11,"from",E,E,29,[[[R[474]]],["self"]]],[11,"from",E,E,29,[[[R[475]]],["self"]]],[11,"from",E,E,29,[[[R[475]]],["self"]]],[11,"from",R[451],E,32,[[["vec",[R[476]]],[R[476]]],["self"]]],[11,"from",E,E,32,[[["parseerror"]],["self"]]],[11,"from",E,E,32,[[["error"]],["self"]]],[11,"from",E,E,32,[[["error"]],["self"]]],[11,"from",E,E,32,[[[R[477]]],["self"]]],[11,"from",E,E,32,[[[R[477],[R[478]]],[R[478]]],["self"]]],[11,"from",R[466],E,41,[[[R[0]]],[R[479]]]],[11,"from",E,E,41,[[["str"]],[R[479]]]],[11,"eq",R[456],E,3,[[["self"],[R[480]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[480]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[481]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[481]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[482]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[482]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[483]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[483]]],["bool"]]],[11,"eq",E,E,7,[[["self"],[R[500]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[500]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[484]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[484]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[485]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[485]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[437]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[437]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[486]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[486]]],["bool"]]],[11,"eq",E,E,12,[[["self"],[R[487]]],["bool"]]],[11,"ne",E,E,12,[[["self"],[R[487]]],["bool"]]],[11,"eq",E,E,13,[[["self"],[R[488]]],["bool"]]],[11,"ne",E,E,13,[[["self"],[R[488]]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[489]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[489]]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[490]]],["bool"]]],[11,"ne",E,E,15,[[["self"],[R[490]]],["bool"]]],[11,"eq",E,E,16,[[["self"],[R[491]]],["bool"]]],[11,"ne",E,E,16,[[["self"],[R[491]]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[492]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[492]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[493]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[493]]],["bool"]]],[11,"eq",E,E,19,[[["self"],[R[494]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[494]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[472]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[472]]],["bool"]]],[11,"eq",R[457],E,23,[[["self"],[R[441]]],["bool"]]],[11,"eq",R[460],E,29,[[["self"],[R[440]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[440]]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[473]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[473]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[495]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[495]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[496]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[496]]],["bool"]]],[11,"eq",R[451],E,32,[[["self"],[R[476]]],["bool"]]],[11,"ne",E,E,32,[[["self"],[R[476]]],["bool"]]],[11,"eq",E,E,33,[[["self"],[R[497]]],["bool"]]],[11,"ne",E,E,33,[[["self"],[R[497]]],["bool"]]],[11,"eq",R[466],E,41,[[["self"],[R[479]]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[498]]],["bool"]]],[11,"ne",E,E,42,[[["self"],[R[498]]],["bool"]]],[11,"eq",E,E,40,[[["self"],[R[499]]],["bool"]]],[11,"ne",E,E,40,[[["self"],[R[499]]],["bool"]]],[11,"clone",R[455],E,0,[[["self"]],[R[429]]]],[11,"clone",R[456],E,3,[[["self"]],[R[480]]]],[11,"clone",E,E,4,[[["self"]],[R[481]]]],[11,"clone",E,E,5,[[["self"]],[R[482]]]],[11,"clone",E,E,6,[[["self"]],[R[483]]]],[11,"clone",E,E,7,[[["self"]],[R[500]]]],[11,"clone",E,E,8,[[["self"]],[R[484]]]],[11,"clone",E,E,9,[[["self"]],[R[485]]]],[11,"clone",E,E,10,[[["self"]],[R[437]]]],[11,"clone",E,E,11,[[["self"]],[R[486]]]],[11,"clone",E,E,12,[[["self"]],[R[487]]]],[11,"clone",E,E,13,[[["self"]],[R[488]]]],[11,"clone",E,E,14,[[["self"]],[R[489]]]],[11,"clone",E,E,15,[[["self"]],[R[490]]]],[11,"clone",E,E,16,[[["self"]],[R[491]]]],[11,"clone",E,E,17,[[["self"]],[R[492]]]],[11,"clone",E,E,18,[[["self"]],[R[493]]]],[11,"clone",E,E,19,[[["self"]],[R[494]]]],[11,"clone",E,E,20,[[["self"]],[R[472]]]],[11,"clone",R[457],E,23,[[["self"]],[R[441]]]],[11,"clone",R[460],E,29,[[["self"]],[R[440]]]],[11,"clone",E,E,26,[[["self"]],[R[473]]]],[11,"clone",E,E,27,[[["self"]],[R[495]]]],[11,"clone",E,E,28,[[["self"]],[R[496]]]],[11,"clone",R[451],E,32,[[["self"]],[R[476]]]],[11,"clone",E,E,33,[[["self"]],[R[497]]]],[11,"clone",R[450],E,35,[[["self"]],["ipcerror"]]],[11,"clone",R[466],E,41,[[["self"]],[R[479]]]],[11,"clone",E,E,42,[[["self"]],[R[498]]]],[11,"clone",E,E,40,[[["self"]],[R[499]]]],[11,R[131],R[456],E,3,[[],[R[480]]]],[11,R[131],E,E,4,[[],[R[481]]]],[11,R[131],E,E,5,[[],[R[482]]]],[11,R[131],E,E,6,[[],[R[483]]]],[11,R[131],E,E,7,[[],[R[500]]]],[11,R[131],E,E,8,[[],[R[484]]]],[11,R[131],E,E,9,[[],[R[485]]]],[11,R[131],E,E,10,[[],[R[437]]]],[11,R[131],E,E,11,[[],[R[486]]]],[11,R[131],E,E,12,[[],[R[487]]]],[11,R[131],E,E,13,[[],[R[488]]]],[11,R[131],E,E,14,[[],[R[489]]]],[11,R[131],E,E,15,[[],[R[490]]]],[11,"deref",R[455],E,44,[[["self"]],["rwlock"]]],[11,"fmt",R[461],E,30,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[451],E,32,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[450],E,35,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[455],E,0,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,2,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[456],E,3,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,4,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,5,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,6,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,7,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,8,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,9,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,10,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,11,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,12,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,13,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,14,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,15,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,16,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,17,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,18,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,19,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,20,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[457],E,23,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[460],E,29,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,26,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,27,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,28,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[461],E,30,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[451],E,32,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,33,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[450],E,35,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[466],E,41,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,42,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,40,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[467],E,43,[[["self"],[R[135]]],[R[6]]]],[11,R[136],R[466],E,41,[[["str"]],[R[6]]]],[11,R[136],E,E,40,[[["str"]],[R[6]]]],[11,R[78],R[456],E,3,[[[R[26]]],[R[6]]]],[11,R[78],E,E,3,[[[R[26]]],[R[6]]]],[11,R[78],E,E,4,[[[R[26]]],[R[6]]]],[11,R[78],E,E,4,[[[R[26]]],[R[6]]]],[11,R[78],E,E,5,[[[R[26]]],[R[6]]]],[11,R[78],E,E,5,[[[R[26]]],[R[6]]]],[11,R[78],E,E,6,[[[R[26]]],[R[6]]]],[11,R[78],E,E,6,[[[R[26]]],[R[6]]]],[11,R[78],E,E,7,[[[R[26]]],[R[6]]]],[11,R[78],E,E,7,[[[R[26]]],[R[6]]]],[11,R[78],E,E,8,[[[R[26]]],[R[6]]]],[11,R[78],E,E,8,[[[R[26]]],[R[6]]]],[11,R[78],E,E,9,[[[R[26]]],[R[6]]]],[11,R[78],E,E,9,[[[R[26]]],[R[6]]]],[11,R[78],E,E,10,[[[R[26]]],[R[6]]]],[11,R[78],E,E,10,[[[R[26]]],[R[6]]]],[11,R[78],E,E,11,[[[R[26]]],[R[6]]]],[11,R[78],E,E,11,[[[R[26]]],[R[6]]]],[11,R[78],E,E,12,[[[R[26]]],[R[6]]]],[11,R[78],E,E,12,[[[R[26]]],[R[6]]]],[11,R[78],E,E,13,[[[R[26]]],[R[6]]]],[11,R[78],E,E,13,[[[R[26]]],[R[6]]]],[11,R[78],E,E,14,[[[R[26]]],[R[6]]]],[11,R[78],E,E,14,[[[R[26]]],[R[6]]]],[11,R[78],E,E,15,[[[R[26]]],[R[6]]]],[11,R[78],E,E,15,[[[R[26]]],[R[6]]]],[11,R[78],E,E,16,[[[R[26]]],[R[6]]]],[11,R[78],E,E,16,[[[R[26]]],[R[6]]]],[11,R[78],E,E,17,[[[R[26]]],[R[6]]]],[11,R[78],E,E,17,[[[R[26]]],[R[6]]]],[11,R[78],E,E,18,[[[R[26]]],[R[6]]]],[11,R[78],E,E,18,[[[R[26]]],[R[6]]]],[11,R[78],E,E,19,[[[R[26]]],[R[6]]]],[11,R[78],E,E,19,[[[R[26]]],[R[6]]]],[11,R[78],E,E,20,[[[R[26]]],[R[6]]]],[11,R[78],E,E,20,[[[R[26]]],[R[6]]]],[11,R[78],E,E,20,[[[R[440]]],[["error"],[R[6],["error"]]]]],[11,R[78],E,E,20,[[[R[440]]],[["error"],[R[6],["error"]]]]],[11,R[78],R[466],E,41,[[[R[26]]],[R[6]]]],[11,R[78],E,E,41,[[[R[26]]],[R[6]]]],[11,R[78],E,E,42,[[[R[26]]],[R[6]]]],[11,R[78],E,E,42,[[[R[26]]],[R[6]]]],[11,R[78],E,E,40,[[[R[26]]],[R[6]]]],[11,R[78],E,E,40,[[[R[26]]],[R[6]]]],[11,R[53],R[451],E,32,[[["self"]],["str"]]],[11,"cause",E,E,32,[[["self"]],[["error"],[R[13],["error"]]]]],[11,"name",R[461],E,30,[[["self"]],[["str"],[R[13],["str"]]]]],[11,"cause",E,E,30,[[["self"]],[["fail"],[R[13],["fail"]]]]],[11,R[501],E,E,30,[[["self"]],[[R[501]],[R[13],[R[501]]]]]],[11,"name",R[450],E,35,[[["self"]],[["str"],[R[13],["str"]]]]],[11,"cause",E,E,35,[[["self"]],[["fail"],[R[13],["fail"]]]]],[11,R[501],E,E,35,[[["self"]],[[R[501]],[R[13],[R[501]]]]]],[11,R[138],R[456],E,3,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,4,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,5,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,6,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,7,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,8,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,9,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,10,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,11,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,12,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,13,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,14,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,15,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,16,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,17,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,18,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,19,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,20,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[457],E,23,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[460],E,26,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,27,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,28,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[466],E,41,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,42,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,40,[[["self"],["__s"]],[R[6]]]],[11,R[139],R[456],E,3,[[["__d"]],[R[6]]]],[11,R[139],E,E,4,[[["__d"]],[R[6]]]],[11,R[139],E,E,5,[[["__d"]],[R[6]]]],[11,R[139],E,E,6,[[["__d"]],[R[6]]]],[11,R[139],E,E,7,[[["__d"]],[R[6]]]],[11,R[139],E,E,8,[[["__d"]],[R[6]]]],[11,R[139],E,E,9,[[["__d"]],[R[6]]]],[11,R[139],E,E,10,[[["__d"]],[R[6]]]],[11,R[139],E,E,11,[[["__d"]],[R[6]]]],[11,R[139],E,E,12,[[["__d"]],[R[6]]]],[11,R[139],E,E,13,[[["__d"]],[R[6]]]],[11,R[139],E,E,14,[[["__d"]],[R[6]]]],[11,R[139],E,E,15,[[["__d"]],[R[6]]]],[11,R[139],E,E,16,[[["__d"]],[R[6]]]],[11,R[139],E,E,17,[[["__d"]],[R[6]]]],[11,R[139],E,E,18,[[["__d"]],[R[6]]]],[11,R[139],E,E,19,[[["__d"]],[R[6]]]],[11,R[139],E,E,20,[[["__d"]],[R[6]]]],[11,R[139],R[460],E,26,[[["__d"]],[R[6]]]],[11,R[139],E,E,27,[[["__d"]],[R[6]]]],[11,R[139],E,E,28,[[["__d"]],[R[6]]]],[11,R[139],R[466],E,41,[[["__d"]],[R[6]]]],[11,R[139],E,E,42,[[["__d"]],[R[6]]]],[11,R[139],E,E,40,[[["__d"]],[R[6]]]],[11,R[331],R[455],E,44,[[["self"]]]]],"p":[[4,"LogLevel"],[3,"Tweetlog"],[3,R[502]],[3,R[503]],[3,R[504]],[3,R[505]],[3,R[506]],[3,"PeerData"],[3,R[507]],[3,R[508]],[3,R[509]],[3,R[510]],[3,R[511]],[3,R[512]],[3,R[513]],[3,R[514]],[3,R[515]],[3,R[516]],[3,R[517]],[3,R[518]],[4,R[519]],[8,"NetSend"],[8,R[520]],[3,R[521]],[3,R[522]],[3,R[523]],[3,R[524]],[3,"PingData"],[3,"PongData"],[4,"Protocol"],[4,R[525]],[3,R[526]],[3,R[448]],[4,R[527]],[3,R[528]],[4,"IpcError"],[3,R[529]],[8,R[530]],[3,R[531]],[3,R[532]],[3,R[533]],[4,R[534]],[4,R[535]],[3,R[536]],[3,"TWEETLOG"]]};
searchIndex["holochain_test_bin"]={"doc":E,"i":[[3,R[565],R[540],E,N,N],[3,R[566],E,E,N,N],[3,R[567],E,E,N,N],[3,R[568],E,E,N,N],[3,R[569],E,E,N,N],[0,"predicate",E,E,N,N],[0,"basic_workflows",E,E,N,N],[5,"setup_one_node","holochain_test_bin::basic_workflows",R[537],N,[[[R[538]],[R[12]],["bool"]],[R[439]]]],[5,"setup_two_nodes",E,R[537],N,[[[R[538]],[R[12]],["bool"]],[R[439]]]],[5,R[541],E,E,N,[[[R[538]],["bool"]],[R[439]]]],[5,"dht_test",E,E,N,[[[R[538]],["bool"]],[R[439]]]],[5,"dht_two_aspects_test",E,E,N,[[[R[538]],["bool"]],[R[439]]]],[5,"no_setup_test",E,R[539],N,[[[R[538]],["bool"]],[R[439]]]],[5,"untrack_alex_test",E,R[539],N,[[[R[538]],["bool"]],[R[439]]]],[5,"untrack_billy_test",E,R[539],N,[[[R[538]],["bool"]],[R[439]]]],[5,"retrack_test",E,R[539],N,[[[R[538]],["bool"]],[R[439]]]],[5,"shutdown_test",E,"Send Protocol::Shutdown",N,[[[R[538]],["bool"]],[R[439]]]],[5,"no_aspect_test",E,"Entry with no Aspect case: Should no-op",N,[[[R[538]],["bool"]],[R[439]]]],[5,"two_authors_test",E,E,N,[[[R[538]],["bool"]],[R[439]]]],[0,"connection_workflows",R[540],E,N,N],[0,"constants",E,E,N,N],[3,R[570],R[558],"Agents",N,N],[3,R[571],E,E,N,N],[3,R[572],E,E,N,N],[3,R[573],E,"DNAs",N,N],[3,R[574],E,E,N,N],[3,R[575],E,E,N,N],[3,R[576],E,"Entries",N,N],[3,R[577],E,E,N,N],[3,R[578],E,E,N,N],[3,R[579],E,"Aspects",N,N],[3,R[580],E,E,N,N],[3,R[581],E,E,N,N],[3,R[582],E,E,N,N],[3,R[583],E,E,N,N],[3,R[584],E,E,N,N],[5,"generate_address",E,E,N,[[],[R[12]]]],[5,"generate_agent_id",E,E,N,[[["u32"]],[R[0]]]],[5,"generate_dna_id",E,E,N,[[["u32"]],[R[12]]]],[5,"generate_entry",E,E,N,[[["u32"]]]],[0,"lib3h_workflows",R[540],E,N,N],[5,"setup_two_lib3h_nodes","holochain_test_bin::lib3h_workflows",R[537],N,[[[R[538]],[R[12]],["bool"]],[R[439]]]],[5,R[541],E,E,N,[[[R[538]],["bool"]],[R[439]]]],[0,"multidna_workflows",R[540],E,N,N],[5,"multi_track","holochain_test_bin::multidna_workflows","Have multiple nodes track multiple dnas",N,[[[R[538]],["vec",[R[538]]]],[R[439]]]],[5,"multi_untrack",E,"Have multiple nodes untrack multiple dnas",N,[[[R[538]],["vec",[R[538]]]],[R[439]]]],[5,R[541],E,"Have 3 nodes. Each pair of nodes are tracking the same DNA…",N,[[[R[538]],["bool"]],[R[439]]]],[5,"dht_test",E,E,N,[[[R[538]],["bool"]],[R[439]]]],[0,"p2p_node",R[540],E,N,N],[0,R[604],R[545],E,N,N],[3,R[563],R[559],"Holds DNA-specific data",N,N],[11,"new",E,E,0,[[[R[12]]],["self"]]],[11,R[375],E,E,0,[[["self"],[R[12]]],[[R[13],[R[486]]],[R[486]]]]],[11,R[549],E,R[542],0,[[["self"],[R[486]]],[R[6]]]],[11,R[550],E,R[542],0,[[["self"],[R[486]]],[R[6]]]],[11,"author_aspect",E,R[543],0,[[["self"],[R[12]],[R[437]]],[R[6]]]],[11,"hold_aspect",E,R[543],0,[[["self"],[R[12]],[R[437]]],[R[6]]]],[11,"has_authored",E,E,0,[[["self"],[R[12]]],["bool"]]],[11,"has_stored",E,E,0,[[["self"],[R[12]]],["bool"]]],[11,"has",E,E,0,[[["self"],[R[12]]],["bool"]]],[11,R[546],E,E,0,[[["self"],[R[12]]],[[R[13],[R[437]]],[R[437]]]]],[11,"get_authored_store",E,E,0,[[["self"]],[[R[12]],[R[544],[R[12],R[544]]],[R[544],[R[12],R[437]]]]]],[11,"get_stored_store",E,E,0,[[["self"]],[[R[12]],[R[544],[R[12],R[544]]],[R[544],[R[12],R[437]]]]]],[11,R[185],E,E,0,[[["self"]],[R[12]]]],[0,"create_config",R[545],E,N,N],[0,"entry_store",E,E,N,N],[3,R[564],R[560],E,N,N],[12,"store",E,E,1,N],[11,"new",E,E,1,[[],["self"]]],[11,"has",E,"Check if this value is already stored",1,[[["self"],[R[12]]],["bool"]]],[11,"insert_entry",E,E,1,[[["self"],[R[486]]]]],[11,"insert_aspect",E,E,1,[[["self"],[R[12]],[R[437]]]]],[11,"get",E,R[547],1,[[["self"],[R[12]]],[[R[13],[R[486]]],[R[486]]]]],[11,R[546],E,R[547],1,[[["self"],[R[12]]],[[R[13],[R[437]]],[R[437]]]]],[0,"test_node",R[545],E,N,N],[3,"TestNode",R[561],"Conductor Mock of one agent with multiple DNAs",N,N],[12,"config",E,E,2,N],[12,R[548],E,E,2,N],[12,"current_dna",E,E,2,N],[12,"logger",E,E,2,N],[12,"p2p_binding",E,E,2,N],[11,"count_recv_json_messages",E,"Return number of JsonProtocol message this node has received",2,[[["self"]],["usize"]]],[11,"find_recv_json_msg",E,"Return the ith JSON message that this node has received…",2,[[["self"],["box",["fn"]],["usize"],["fn"]],[[R[472]],[R[13],[R[472]]]]]],[11,"track_current_dna",E,E,2,[[["self"]],[R[439]]]],[11,"track_dna",E,E,2,[[["self"],[R[12]],["bool"]],[R[439]]]],[11,"untrack_current_dna",E,E,2,[[["self"]],[R[439]]]],[11,"untrack_dna",E,E,2,[[["self"],[R[12]]],[R[439]]]],[11,"is_tracking",E,E,2,[[["self"],[R[12]]],["bool"]]],[11,"set_current_dna",E,E,2,[[["self"],[R[12]]]]],[11,R[549],E,E,2,[[["self"],[R[12]],["vec",["vec"]],["vec",["u8"]],["bool"]],[R[439]]]],[11,R[550],E,E,2,[[["self"],[R[12]],["vec",["vec"]],["vec",["u8"]]],[R[439]]]],[11,"request_entry",E,"Node asks for some entry on the network.",2,[[["self"],[R[12]]],[R[487]]]],[11,"reply_to_HandleQueryEntry",E,E,2,[[["self"],[R[487]]],[[R[6],[R[488],R[480]]],[R[480]],[R[488]]]]],[11,"reply_to_HandleFetchEntry",E,E,2,[[["self"],[R[491]]],[[R[492]],[R[480]],[R[6],[R[492],R[480]]]]]],[11,R[849],E,R[551],2,[[["self"],[R[12]],["vec",["u8"]],["u8"]],[R[0]]]],[11,"send_reponse_json",E,R[551],2,[[["self"],[R[484]],["vec",["u8"]],["u8"]]]],[11,"send_reponse_lib3h",E,R[551],2,[[["self"],[R[754]],["value"]]]],[11,"reply_to_HandleGetAuthoringEntryList",E,"Reply to a HandleGetAuthoringEntryList request",2,[[["self"],[R[493]]],[R[439]]]],[11,"reply_to_first_HandleGetAuthoringEntryList",E,"Look for the first HandleGetAuthoringEntryList request…",2,[[["self"]]]],[11,"reply_to_HandleGetHoldingEntryList",E,"Reply to a HandleGetHoldingEntryList request",2,[[["self"],[R[493]]],[R[439]]]],[11,"reply_to_first_HandleGetHoldingEntryList",E,"Look for the first HandleGetHoldingEntryList request…",2,[[["self"]]]],[11,"new_with_config",E,"Private constructor",2,[[[R[12]],[R[13],["tempdir"]],["tempdir"],[R[499]]],["self"]]],[11,"is_network_ready",E,E,2,[[["self"]],["bool"]]],[11,"new_with_unique_memory_network",E,"Constructor for an in-memory P2P Network",2,[[[R[12]]],["self"]]],[11,"new_with_uri_ipc_network",E,R[552],2,[[[R[12]],["str"]],["self"]]],[11,"new_with_lib3h",E,R[552],2,[[[R[12]],[R[13],[R[0]]],["vec",[R[0]]],[R[13],["str"]],["str"],[R[0]]],["self"]]],[11,"new_with_spawn_ipc_network",E,"Constructor for an IPC node that spawns and uses a n3h…",2,[[[R[12]],[R[13],[R[0]]],["vec",[R[0]]],[R[13],["str"]],["str"],[R[0]]],["self"]]],[11,"try_recv",E,E,2,[[["self"]],[[R[440]],[R[439],[R[440]]]]]],[11,"try_recv_json",E,R[553],2,[[["self"]],[[R[439],[R[472]]],[R[472]]]]],[11,"try_recv_lib3h",E,R[553],2,[[["self"]],[[R[475]],[R[439],[R[475]]]]]],[11,"listen",E,"recv messages until timeout is reached returns the number…",2,[[["self"],["usize"]],["usize"]]],[11,"wait_HandleFetchEntry_and_reply",E,R[554],2,[[["self"]],["bool"]]],[11,"wait_HandleQueryEntry_and_reply",E,R[554],2,[[["self"]],["bool"]]],[11,"wait_json_with_timeout",E,R[555],2,[[["self"],["box",["fn"]],["usize"],["fn"]],[[R[472]],[R[13],[R[472]]]]]],[11,"wait_json",E,R[555],2,[[["self"],["box",["fn"]],["fn"]],[[R[472]],[R[13],[R[472]]]]]],[11,"wait_lib3h",E,R[555],2,[[["self"],["box",["fn"]],["fn"]],[[R[13],[R[475]]],[R[475]]]]],[11,"wait_lib3h_with_timeout",E,R[555],2,[[["self"],["usize"],["box",["fn"]],["fn"]],[[R[13],[R[475]]],[R[475]]]]],[11,"stop",E,E,2,[[]]],[11,R[454],E,R[556],2,[[["self"]],[R[0]]]],[0,"publish_hold_workflows",R[540],E,N,N],[5,"empty_publish_entry_list_test","holochain_test_bin::publish_hold_workflows",E,N,[[[R[538]],["bool"]],[R[439]]]],[5,"publish_entry_list_test",E,R[557],N,[[[R[538]],["bool"]],[R[439]]]],[5,"double_publish_entry_list_test",E,R[557],N,[[[R[538]],["bool"]],[R[439]]]],[5,"hold_list_test",E,"Reply with some meta in hold_meta_list",N,[[[R[538]],["bool"]],[R[439]]]],[5,"many_aspects_test",E,"Reply some data in publish_meta_list",N,[[[R[538]],["bool"]],[R[439]]]],[0,"three_workflows",R[540],E,N,N],[5,"setup_three_nodes","holochain_test_bin::three_workflows",R[537],N,[[[R[538]],[R[12]],["bool"]],[R[439]]]],[5,"hold_and_publish_test",E,"Reply with some data in hold_list",N,[[[R[538]],["bool"]],[R[439]]]],[5,"publish_entry_stress_test",E,E,N,[[[R[538]],["bool"]],[R[439]]]],[11,"from",R[540],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[78],E,E,3,[[[U]],[R[6]]]],[11,R[79],E,E,3,[[],[R[6]]]],[11,R[89],E,E,3,[[["self"]],[T]]],[11,R[80],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"]],[R[90]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[78],E,E,4,[[[U]],[R[6]]]],[11,R[79],E,E,4,[[],[R[6]]]],[11,R[89],E,E,4,[[["self"]],[T]]],[11,R[80],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"]],[R[90]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[78],E,E,5,[[[U]],[R[6]]]],[11,R[79],E,E,5,[[],[R[6]]]],[11,R[89],E,E,5,[[["self"]],[T]]],[11,R[80],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"]],[R[90]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[78],E,E,6,[[[U]],[R[6]]]],[11,R[79],E,E,6,[[],[R[6]]]],[11,R[89],E,E,6,[[["self"]],[T]]],[11,R[80],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"]],[R[90]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[78],E,E,7,[[[U]],[R[6]]]],[11,R[79],E,E,7,[[],[R[6]]]],[11,R[89],E,E,7,[[["self"]],[T]]],[11,R[80],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"]],[R[90]]]],[11,"from",R[558],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[78],E,E,8,[[[U]],[R[6]]]],[11,R[79],E,E,8,[[],[R[6]]]],[11,R[89],E,E,8,[[["self"]],[T]]],[11,R[80],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"]],[R[90]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[78],E,E,9,[[[U]],[R[6]]]],[11,R[79],E,E,9,[[],[R[6]]]],[11,R[89],E,E,9,[[["self"]],[T]]],[11,R[80],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"]],[R[90]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[78],E,E,10,[[[U]],[R[6]]]],[11,R[79],E,E,10,[[],[R[6]]]],[11,R[89],E,E,10,[[["self"]],[T]]],[11,R[80],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"]],[R[90]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[78],E,E,11,[[[U]],[R[6]]]],[11,R[79],E,E,11,[[],[R[6]]]],[11,R[89],E,E,11,[[["self"]],[T]]],[11,R[80],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"]],[R[90]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[78],E,E,12,[[[U]],[R[6]]]],[11,R[79],E,E,12,[[],[R[6]]]],[11,R[89],E,E,12,[[["self"]],[T]]],[11,R[80],E,E,12,[[["self"]],[T]]],[11,R[84],E,E,12,[[["self"]],[R[90]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[78],E,E,13,[[[U]],[R[6]]]],[11,R[79],E,E,13,[[],[R[6]]]],[11,R[89],E,E,13,[[["self"]],[T]]],[11,R[80],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"]],[R[90]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[78],E,E,14,[[[U]],[R[6]]]],[11,R[79],E,E,14,[[],[R[6]]]],[11,R[89],E,E,14,[[["self"]],[T]]],[11,R[80],E,E,14,[[["self"]],[T]]],[11,R[84],E,E,14,[[["self"]],[R[90]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[78],E,E,15,[[[U]],[R[6]]]],[11,R[79],E,E,15,[[],[R[6]]]],[11,R[89],E,E,15,[[["self"]],[T]]],[11,R[80],E,E,15,[[["self"]],[T]]],[11,R[84],E,E,15,[[["self"]],[R[90]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[78],E,E,16,[[[U]],[R[6]]]],[11,R[79],E,E,16,[[],[R[6]]]],[11,R[89],E,E,16,[[["self"]],[T]]],[11,R[80],E,E,16,[[["self"]],[T]]],[11,R[84],E,E,16,[[["self"]],[R[90]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[78],E,E,17,[[[U]],[R[6]]]],[11,R[79],E,E,17,[[],[R[6]]]],[11,R[89],E,E,17,[[["self"]],[T]]],[11,R[80],E,E,17,[[["self"]],[T]]],[11,R[84],E,E,17,[[["self"]],[R[90]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[78],E,E,18,[[[U]],[R[6]]]],[11,R[79],E,E,18,[[],[R[6]]]],[11,R[89],E,E,18,[[["self"]],[T]]],[11,R[80],E,E,18,[[["self"]],[T]]],[11,R[84],E,E,18,[[["self"]],[R[90]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[78],E,E,19,[[[U]],[R[6]]]],[11,R[79],E,E,19,[[],[R[6]]]],[11,R[89],E,E,19,[[["self"]],[T]]],[11,R[80],E,E,19,[[["self"]],[T]]],[11,R[84],E,E,19,[[["self"]],[R[90]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[78],E,E,20,[[[U]],[R[6]]]],[11,R[79],E,E,20,[[],[R[6]]]],[11,R[89],E,E,20,[[["self"]],[T]]],[11,R[80],E,E,20,[[["self"]],[T]]],[11,R[84],E,E,20,[[["self"]],[R[90]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[78],E,E,21,[[[U]],[R[6]]]],[11,R[79],E,E,21,[[],[R[6]]]],[11,R[89],E,E,21,[[["self"]],[T]]],[11,R[80],E,E,21,[[["self"]],[T]]],[11,R[84],E,E,21,[[["self"]],[R[90]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[78],E,E,22,[[[U]],[R[6]]]],[11,R[79],E,E,22,[[],[R[6]]]],[11,R[89],E,E,22,[[["self"]],[T]]],[11,R[80],E,E,22,[[["self"]],[T]]],[11,R[84],E,E,22,[[["self"]],[R[90]]]],[11,"from",R[559],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[78],E,E,0,[[[U]],[R[6]]]],[11,R[79],E,E,0,[[],[R[6]]]],[11,R[89],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"]],[R[90]]]],[11,"from",R[560],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[78],E,E,1,[[[U]],[R[6]]]],[11,R[79],E,E,1,[[],[R[6]]]],[11,R[89],E,E,1,[[["self"]],[T]]],[11,R[80],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"]],[R[90]]]],[11,"from",R[561],E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[78],E,E,2,[[[U]],[R[6]]]],[11,R[79],E,E,2,[[],[R[6]]]],[11,R[89],E,E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"]],[R[90]]]],[11,"deref",R[558],E,8,[[["self"]],[R[12]]]],[11,"deref",E,E,9,[[["self"]],[R[12]]]],[11,"deref",E,E,10,[[["self"]],[R[12]]]],[11,"deref",E,E,11,[[["self"]],[R[12]]]],[11,"deref",E,E,12,[[["self"]],[R[12]]]],[11,"deref",E,E,13,[[["self"]],[R[12]]]],[11,"deref",E,E,14,[[["self"]],[R[12]]]],[11,"deref",E,E,15,[[["self"]],[R[12]]]],[11,"deref",E,E,16,[[["self"]],[R[12]]]],[11,"deref",E,E,17,[[["self"]],["vec"]]],[11,"deref",E,E,18,[[["self"]],["vec"]]],[11,"deref",E,E,19,[[["self"]],["vec"]]],[11,"deref",E,E,20,[[["self"]],[R[12]]]],[11,"deref",E,E,21,[[["self"]],[R[12]]]],[11,"deref",E,E,22,[[["self"]],[R[12]]]],[11,"deref",R[540],E,3,[[["self"]],["vec"]]],[11,"deref",E,E,4,[[["self"]],["vec"]]],[11,"deref",E,E,5,[[["self"]],["vec"]]],[11,"deref",E,E,6,[[["self"]],["vec"]]],[11,"deref",E,E,7,[[["self"]],["vec"]]],[11,R[331],R[558],E,8,[[["self"]]]],[11,R[331],E,E,9,[[["self"]]]],[11,R[331],E,E,10,[[["self"]]]],[11,R[331],E,E,11,[[["self"]]]],[11,R[331],E,E,12,[[["self"]]]],[11,R[331],E,E,13,[[["self"]]]],[11,R[331],E,E,14,[[["self"]]]],[11,R[331],E,E,15,[[["self"]]]],[11,R[331],E,E,16,[[["self"]]]],[11,R[331],E,E,17,[[["self"]]]],[11,R[331],E,E,18,[[["self"]]]],[11,R[331],E,E,19,[[["self"]]]],[11,R[331],E,E,20,[[["self"]]]],[11,R[331],E,E,21,[[["self"]]]],[11,R[331],E,E,22,[[["self"]]]],[11,R[331],R[540],E,3,[[["self"]]]],[11,R[331],E,E,4,[[["self"]]]],[11,R[331],E,E,5,[[["self"]]]],[11,R[331],E,E,6,[[["self"]]]],[11,R[331],E,E,7,[[["self"]]]],[11,"send",R[561],R[562],2,[[["self"],[R[440]]],[R[439]]]]],"p":[[3,R[563]],[3,R[564]],[3,"TestNode"],[3,R[565]],[3,R[566]],[3,R[567]],[3,R[568]],[3,R[569]],[3,R[570]],[3,R[571]],[3,R[572]],[3,R[573]],[3,R[574]],[3,R[575]],[3,R[576]],[3,R[577]],[3,R[578]],[3,R[579]],[3,R[580]],[3,R[581]],[3,R[582]],[3,R[583]],[3,R[584]]]};
searchIndex["holochain_wasm_utils"]={"doc":"Library holding necessary code for the Ribosome that is…","i":[[5,"wasm_target_dir",R[200],E,N,[[[R[4]]],[R[4]]]],[0,"api_serialization",E,"ignore api_serialization because it is nothing but structs…",N,N],[3,R[252],R[188],R[183],N,N],[12,"instance_handle",E,E,0,N],[12,R[644],E,E,0,N],[12,R[182],E,E,0,N],[12,"fn_name",E,E,0,N],[12,"fn_args",E,E,0,N],[3,R[253],E,R[183],N,N],[12,R[184],E,E,1,N],[12,R[12],E,E,1,N],[3,R[254],E,E,N,N],[12,"dna_name",E,E,2,N],[12,R[185],E,E,2,N],[12,"agent_id_str",E,E,2,N],[12,"agent_address",E,E,2,N],[12,"agent_initial_hash",E,E,2,N],[12,"agent_latest_hash",E,E,2,N],[12,R[850],E,E,2,N],[12,"cap_request",E,E,2,N],[12,R[48],E,E,2,N],[0,R[186],E,"This module holds structs for all arguments and return…",N,N],[3,R[255],R[210],E,N,N],[12,"id",E,E,3,N],[12,"cap_type",E,E,3,N],[12,R[187],E,E,3,N],[12,R[50],E,E,3,N],[3,R[256],E,E,N,N],[12,"id",E,E,4,N],[12,"grantor",E,E,4,N],[12,"token",E,E,4,N],[0,R[373],R[188],E,N,N],[3,R[257],R[211],"Structure used to specify additional options to a…",N,N],[12,R[10],E,E,5,N],[3,R[258],E,"The arguments required to execute a commit_entry_result()…",N,N],[12,"entry",E,E,6,N],[12,R[196],E,E,6,N],[3,R[259],E,"Represents any useful information to return after entries…",N,N],[12,R[12],E,E,7,N],[11,"new",E,E,5,[[["vec",[R[10]]],[R[10]]],["self"]]],[11,R[10],E,E,5,[[["self"]],[["vec",[R[10]]],[R[10]]]]],[11,"new",E,E,6,[[["entry"],[R[189]]],["self"]]],[11,"entry",E,E,6,[[["self"]],["entry"]]],[11,R[196],E,E,6,[[["self"]],[R[189]]]],[11,"new",E,E,7,[[[R[12]]],["self"]]],[11,R[12],E,E,7,[[["self"]],[R[12]]]],[0,"crypto",R[188],E,N,N],[3,R[260],R[212],E,N,N],[12,R[199],E,E,8,N],[12,"method",E,E,8,N],[4,R[261],E,E,N,N],[13,"Sign",E,E,9,N],[13,"Encrypt",E,E,9,N],[13,"Decrypt",E,E,9,N],[0,R[374],R[188],E,N,N],[3,R[262],R[213],"Struct for input data received when invoke_emit_signal is…",N,N],[12,"name",E,E,10,N],[12,R[851],E,E,10,N],[0,R[375],R[188],E,N,N],[3,R[263],R[214],"Structure used to specify what should be returned to a…",N,N],[12,R[193],E,E,11,N],[12,"entry",E,E,11,N],[12,R[195],E,E,11,N],[12,R[190],E,E,11,N],[3,R[264],E,E,N,N],[12,R[12],E,E,12,N],[12,R[196],E,E,12,N],[3,R[265],E,E,N,N],[12,R[12],E,E,13,N],[12,R[33],E,E,13,N],[12,R[23],E,E,13,N],[3,R[266],E,"Structure that holds data returned from a get entry…",N,N],[12,"meta",E,E,14,N],[12,"entry",E,E,14,N],[12,R[195],E,E,14,N],[3,R[267],E,"Structure that holds a whole crud status history if the…",N,N],[12,"items",E,E,15,N],[12,"crud_links",E,E,15,N],[3,R[268],E,E,N,N],[12,R[6],E,E,16,N],[4,R[269],E,E,N,N],[13,"Initial",E,E,17,N],[13,"Latest",E,E,17,N],[13,"All",E,E,17,N],[4,R[270],E,E,N,N],[13,"Single",E,E,18,N],[13,"All",E,E,18,N],[11,"new",E,E,11,[[[R[190]],[R[191]],["bool"]],["self"]]],[11,"new",E,E,14,[[[R[13]]],["self"]]],[11,"new",E,E,15,[[],["self"]]],[11,"push",E,E,15,[[["self"],[R[118]],[R[9]],["vec",[R[9]]]]]],[11,"new",E,E,16,[[[R[191]],[R[13]]],["self"]]],[11,"found",E,E,16,[[["self"]],["bool"]]],[11,"clear",E,"clears the entry result to be equivalent to not found",16,[[["self"]]]],[11,"push",E,"adds an item to history, or if Single, writes over the…",16,[[["self"],[R[118]],[R[9]],["vec",[R[9]]]]]],[11,"latest",E,"returns the entry searched for. Note that if the…",16,[[["self"]],[["entry"],[R[13],["entry"]]]]],[0,R[376],R[188],E,N,N],[3,R[271],R[215],E,N,N],[12,R[192],E,E,19,N],[12,R[47],E,E,19,N],[12,"tag",E,E,19,N],[12,R[196],E,E,19,N],[3,R[272],E,E,N,N],[12,R[193],E,E,20,N],[12,R[195],E,E,20,N],[12,R[190],E,E,20,N],[3,R[273],E,E,N,N],[12,R[12],E,E,21,N],[12,R[195],E,E,21,N],[12,"tag",E,E,21,N],[12,"status",E,E,21,N],[3,R[275],E,E,N,N],[4,R[274],E,E,N,N],[13,"Live",E,E,22,N],[13,"Deleted",E,E,22,N],[13,"All",E,E,22,N],[11,"new",E,E,23,[[["vec",[R[194]]],[R[194]]],[R[307]]]],[11,"addresses",E,E,23,[[["self"]],[["vec",[R[12]]],[R[12]]]]],[0,R[875],R[188],E,N,N],[3,R[276],R[216],E,N,N],[12,"ids",E,E,24,N],[3,R[277],E,E,N,N],[12,"dst_id",E,E,25,N],[12,"size",E,E,25,N],[3,R[278],E,E,N,N],[12,"src_id",E,E,26,N],[12,"dst_id",E,E,26,N],[12,R[620],E,E,26,N],[12,"index",E,E,26,N],[3,R[279],E,E,N,N],[12,"src_id",E,E,27,N],[12,"dst_id",E,E,27,N],[12,"key_type",E,E,27,N],[3,R[280],E,E,N,N],[12,"src_id",E,E,28,N],[12,R[199],E,E,28,N],[3,R[281],E,E,N,N],[12,"src_id",E,E,29,N],[4,"KeyType",E,E,N,N],[13,"Signing",E,E,30,N],[13,R[970],E,E,30,N],[0,R[377],R[188],E,N,N],[3,R[282],R[217],E,N,N],[12,"base",E,E,31,N],[12,"target",E,E,31,N],[12,R[47],E,E,31,N],[12,"tag",E,E,31,N],[11,"to_link",E,E,31,[[["self"]],["link"]]],[0,"query",R[188],E,N,N],[3,R[283],R[218],E,N,N],[12,"entry_type_names",E,E,32,N],[12,R[196],E,E,32,N],[3,R[284],E,E,N,N],[12,"start",E,E,33,N],[12,"limit",E,E,33,N],[12,R[195],E,E,33,N],[12,"entries",E,E,33,N],[4,R[285],E,E,N,N],[13,"QueryName",E,E,34,N],[13,"QueryList",E,E,34,N],[4,R[286],E,E,N,N],[13,R[852],E,E,35,N],[13,"Headers",E,E,35,N],[13,"Entries",E,E,35,N],[13,"HeadersWithEntries",E,E,35,N],[0,R[848],R[188],E,N,N],[3,R[287],R[219],E,N,N],[12,"from",E,E,36,N],[12,R[199],E,E,36,N],[0,"send",R[188],E,N,N],[3,"SendArgs",R[220],R[183],N,N],[12,"to_agent",E,E,37,N],[12,R[199],E,E,37,N],[12,R[196],E,E,37,N],[3,R[288],E,E,N,N],[12,"0",E,E,38,N],[0,"sign",R[188],E,N,N],[3,"SignArgs",R[221],E,N,N],[12,R[199],E,E,39,N],[3,R[289],E,E,N,N],[12,"payloads",E,E,40,N],[3,R[290],E,E,N,N],[12,"pub_key",E,E,41,N],[12,"signatures",E,E,41,N],[0,R[197],R[188],E,N,N],[3,R[291],R[222],E,N,N],[12,R[72],E,E,42,N],[3,R[292],E,E,N,N],[12,R[33],E,E,43,N],[12,R[47],E,E,43,N],[12,R[198],E,E,43,N],[3,R[293],E,E,N,N],[12,R[33],E,E,44,N],[12,"link",E,E,44,N],[12,R[198],E,E,44,N],[12,R[72],E,E,44,N],[4,R[294],E,E,N,N],[13,"To",E,E,45,N],[13,"From",E,E,45,N],[0,R[378],R[188],E,N,N],[3,R[295],R[223],E,N,N],[12,R[10],E,E,46,N],[12,R[199],E,E,46,N],[17,R[379],R[188],E,N,N],[0,"macros",R[200],E,N,N],[0,"memory",E,E,N,N],[0,"allocation",R[201],E,N,N],[3,"Offset",R[202],E,N,N],[3,"Length",E,E,N,N],[3,R[297],E,E,N,N],[4,R[296],E,E,N,N],[13,"OutOfBounds",E,"(de)allocation is either too large or implies negative…",47,N],[13,"ZeroLength",E,"cannot allocate zero data",47,N],[13,"BadStackAlignment",E,"(de)allocation must occur at the top of the stack",47,N],[13,"Serialization",E,"writes can fail to serialize data before allocation occurs…",47,N],[6,"AllocationResult",E,E,N,N],[11,"max",E,E,48,[[],[R[205]]]],[11,"new",E,E,48,[[["length"],["offset"]],[R[203]]]],[11,"offset",E,E,48,[[],["offset"]]],[11,"length",E,E,48,[[],["length"]]],[0,"read",R[201],E,N,N],[11,"read_to_string",R[202],"Retrieve a stored string from an allocation. Return error…",48,[[],[R[0]]]],[0,"ribosome",R[201],E,N,N],[5,"return_code_for_allocation_result","holochain_wasm_utils::memory::ribosome","Equivalent to From for RibosomeEncodedValue not possible…",N,[[[R[203]]],[R[111]]]],[5,"load_ribosome_encoded_string",E,E,N,[[[R[110]]],[[R[6],[R[0],R[21]]],[R[21]],[R[0]]]]],[5,"load_ribosome_encoded_json",E,E,N,[[[R[110]]],[["tryfrom",[R[26]]],[R[26]],[R[21]],[R[6],[R[21]]]]]],[11,R[204],R[202],E,47,[[["self"]],[R[110]]]],[11,R[251],E,"equivalent to TryFrom for WasmAllocation not implemented…",48,[[[R[110]]],[R[203]]]],[11,R[204],E,E,48,[[],[R[110]]]],[0,"stack",R[201],E,N,N],[3,"Top",R[208],E,N,N],[3,R[298],E,E,N,N],[11,"max",E,E,49,[[],[R[205]]]],[11,"min",E,E,49,[[],[R[225]]]],[11,"new",E,E,49,[[],[R[244]]]],[11,"next_allocation",E,E,49,[[["length"]],[[R[6],[R[207],R[206]]],[R[206]],[R[207]]]]],[11,"allocate",E,E,49,[[["self"],[R[207]]],[["top"],[R[206]],[R[6],["top",R[206]]]]]],[11,"deallocate",E,E,49,[[["self"],[R[207]]],[["top"],[R[206]],[R[6],["top",R[206]]]]]],[11,"top",E,E,49,[[],["top"]]],[0,"write",R[201],E,N,N],[11,"write_string",R[208],"Write a string in wasm memory according to stack state.",49,[[["self"],["str"]],[R[203]]]],[11,R[380],E,"Write a data struct as a json string in wasm memory…",49,[[["self"],["tryinto",[R[26]]],[R[26]]],[R[203]]]],[6,R[299],R[201],"offsets, lengths, etc.",N,N],[6,R[300],E,"encodes allocations as 2x MemoryInt in high/low bits etc.…",N,N],[14,"zome_assert",R[200],R[209],N,N],[14,"ribosome_success",E,E,N,N],[14,"ribosome_error_code",E,R[209],N,N],[14,"core_error",E,"Macro for creating a CoreError from a HolochainError on…",N,N],[14,"core_error_generic",E,"Macro for creating a generic CoreError on the spot with…",N,N],[11,"from",R[188],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[82],E,E,0,[[["self"]],[T]]],[11,R[83],E,E,0,[[["self"],[T]]]],[11,R[78],E,E,0,[[[U]],[R[6]]]],[11,R[79],E,E,0,[[],[R[6]]]],[11,R[89],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"]],[T]]],[11,R[84],E,E,0,[[["self"]],[R[90]]]],[11,R[85],E,E,0,[[["self"]]]],[11,R[87],E,E,0,[[["self"],["k"]],["bool"]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[82],E,E,1,[[["self"]],[T]]],[11,R[83],E,E,1,[[["self"],[T]]]],[11,R[78],E,E,1,[[[U]],[R[6]]]],[11,R[79],E,E,1,[[],[R[6]]]],[11,R[89],E,E,1,[[["self"]],[T]]],[11,R[80],E,E,1,[[["self"]],[T]]],[11,R[84],E,E,1,[[["self"]],[R[90]]]],[11,R[85],E,E,1,[[["self"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[82],E,E,2,[[["self"]],[T]]],[11,R[83],E,E,2,[[["self"],[T]]]],[11,R[78],E,E,2,[[[U]],[R[6]]]],[11,R[79],E,E,2,[[],[R[6]]]],[11,R[89],E,E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[["self"]],[T]]],[11,R[84],E,E,2,[[["self"]],[R[90]]]],[11,R[85],E,E,2,[[["self"]]]],[11,"from",R[210],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[78],E,E,3,[[[U]],[R[6]]]],[11,R[79],E,E,3,[[],[R[6]]]],[11,R[89],E,E,3,[[["self"]],[T]]],[11,R[80],E,E,3,[[["self"]],[T]]],[11,R[84],E,E,3,[[["self"]],[R[90]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[78],E,E,4,[[[U]],[R[6]]]],[11,R[79],E,E,4,[[],[R[6]]]],[11,R[89],E,E,4,[[["self"]],[T]]],[11,R[80],E,E,4,[[["self"]],[T]]],[11,R[84],E,E,4,[[["self"]],[R[90]]]],[11,"from",R[211],E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[82],E,E,5,[[["self"]],[T]]],[11,R[83],E,E,5,[[["self"],[T]]]],[11,R[78],E,E,5,[[[U]],[R[6]]]],[11,R[79],E,E,5,[[],[R[6]]]],[11,R[89],E,E,5,[[["self"]],[T]]],[11,R[80],E,E,5,[[["self"]],[T]]],[11,R[84],E,E,5,[[["self"]],[R[90]]]],[11,R[85],E,E,5,[[["self"]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[78],E,E,6,[[[U]],[R[6]]]],[11,R[79],E,E,6,[[],[R[6]]]],[11,R[89],E,E,6,[[["self"]],[T]]],[11,R[80],E,E,6,[[["self"]],[T]]],[11,R[84],E,E,6,[[["self"]],[R[90]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[82],E,E,7,[[["self"]],[T]]],[11,R[83],E,E,7,[[["self"],[T]]]],[11,R[78],E,E,7,[[[U]],[R[6]]]],[11,R[79],E,E,7,[[],[R[6]]]],[11,R[89],E,E,7,[[["self"]],[T]]],[11,R[80],E,E,7,[[["self"]],[T]]],[11,R[84],E,E,7,[[["self"]],[R[90]]]],[11,R[85],E,E,7,[[["self"]]]],[11,"from",R[212],E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[82],E,E,8,[[["self"]],[T]]],[11,R[83],E,E,8,[[["self"],[T]]]],[11,R[78],E,E,8,[[[U]],[R[6]]]],[11,R[79],E,E,8,[[],[R[6]]]],[11,R[89],E,E,8,[[["self"]],[T]]],[11,R[80],E,E,8,[[["self"]],[T]]],[11,R[84],E,E,8,[[["self"]],[R[90]]]],[11,R[85],E,E,8,[[["self"]]]],[11,R[87],E,E,8,[[["self"],["k"]],["bool"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[82],E,E,9,[[["self"]],[T]]],[11,R[83],E,E,9,[[["self"],[T]]]],[11,R[78],E,E,9,[[[U]],[R[6]]]],[11,R[79],E,E,9,[[],[R[6]]]],[11,R[89],E,E,9,[[["self"]],[T]]],[11,R[80],E,E,9,[[["self"]],[T]]],[11,R[84],E,E,9,[[["self"]],[R[90]]]],[11,R[85],E,E,9,[[["self"]]]],[11,R[87],E,E,9,[[["self"],["k"]],["bool"]]],[11,"from",R[213],E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[82],E,E,10,[[["self"]],[T]]],[11,R[83],E,E,10,[[["self"],[T]]]],[11,R[78],E,E,10,[[[U]],[R[6]]]],[11,R[79],E,E,10,[[],[R[6]]]],[11,R[89],E,E,10,[[["self"]],[T]]],[11,R[80],E,E,10,[[["self"]],[T]]],[11,R[84],E,E,10,[[["self"]],[R[90]]]],[11,R[85],E,E,10,[[["self"]]]],[11,R[87],E,E,10,[[["self"],["k"]],["bool"]]],[11,"from",R[214],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[82],E,E,11,[[["self"]],[T]]],[11,R[83],E,E,11,[[["self"],[T]]]],[11,R[78],E,E,11,[[[U]],[R[6]]]],[11,R[79],E,E,11,[[],[R[6]]]],[11,R[89],E,E,11,[[["self"]],[T]]],[11,R[80],E,E,11,[[["self"]],[T]]],[11,R[84],E,E,11,[[["self"]],[R[90]]]],[11,R[85],E,E,11,[[["self"]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[78],E,E,12,[[[U]],[R[6]]]],[11,R[79],E,E,12,[[],[R[6]]]],[11,R[89],E,E,12,[[["self"]],[T]]],[11,R[80],E,E,12,[[["self"]],[T]]],[11,R[84],E,E,12,[[["self"]],[R[90]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[82],E,E,13,[[["self"]],[T]]],[11,R[83],E,E,13,[[["self"],[T]]]],[11,R[78],E,E,13,[[[U]],[R[6]]]],[11,R[79],E,E,13,[[],[R[6]]]],[11,R[89],E,E,13,[[["self"]],[T]]],[11,R[80],E,E,13,[[["self"]],[T]]],[11,R[84],E,E,13,[[["self"]],[R[90]]]],[11,R[85],E,E,13,[[["self"]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[82],E,E,14,[[["self"]],[T]]],[11,R[83],E,E,14,[[["self"],[T]]]],[11,R[78],E,E,14,[[[U]],[R[6]]]],[11,R[79],E,E,14,[[],[R[6]]]],[11,R[89],E,E,14,[[["self"]],[T]]],[11,R[80],E,E,14,[[["self"]],[T]]],[11,R[84],E,E,14,[[["self"]],[R[90]]]],[11,R[85],E,E,14,[[["self"]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[82],E,E,15,[[["self"]],[T]]],[11,R[83],E,E,15,[[["self"],[T]]]],[11,R[78],E,E,15,[[[U]],[R[6]]]],[11,R[79],E,E,15,[[],[R[6]]]],[11,R[89],E,E,15,[[["self"]],[T]]],[11,R[80],E,E,15,[[["self"]],[T]]],[11,R[84],E,E,15,[[["self"]],[R[90]]]],[11,R[85],E,E,15,[[["self"]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[82],E,E,16,[[["self"]],[T]]],[11,R[83],E,E,16,[[["self"],[T]]]],[11,R[78],E,E,16,[[[U]],[R[6]]]],[11,R[79],E,E,16,[[],[R[6]]]],[11,R[89],E,E,16,[[["self"]],[T]]],[11,R[80],E,E,16,[[["self"]],[T]]],[11,R[84],E,E,16,[[["self"]],[R[90]]]],[11,R[85],E,E,16,[[["self"]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[82],E,E,17,[[["self"]],[T]]],[11,R[83],E,E,17,[[["self"],[T]]]],[11,R[78],E,E,17,[[[U]],[R[6]]]],[11,R[79],E,E,17,[[],[R[6]]]],[11,R[89],E,E,17,[[["self"]],[T]]],[11,R[80],E,E,17,[[["self"]],[T]]],[11,R[84],E,E,17,[[["self"]],[R[90]]]],[11,R[85],E,E,17,[[["self"]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[82],E,E,18,[[["self"]],[T]]],[11,R[83],E,E,18,[[["self"],[T]]]],[11,R[78],E,E,18,[[[U]],[R[6]]]],[11,R[79],E,E,18,[[],[R[6]]]],[11,R[89],E,E,18,[[["self"]],[T]]],[11,R[80],E,E,18,[[["self"]],[T]]],[11,R[84],E,E,18,[[["self"]],[R[90]]]],[11,R[85],E,E,18,[[["self"]]]],[11,"from",R[215],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[82],E,E,19,[[["self"]],[T]]],[11,R[83],E,E,19,[[["self"],[T]]]],[11,R[78],E,E,19,[[[U]],[R[6]]]],[11,R[79],E,E,19,[[],[R[6]]]],[11,R[89],E,E,19,[[["self"]],[T]]],[11,R[80],E,E,19,[[["self"]],[T]]],[11,R[84],E,E,19,[[["self"]],[R[90]]]],[11,R[85],E,E,19,[[["self"]]]],[11,R[87],E,E,19,[[["self"],["k"]],["bool"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[82],E,E,20,[[["self"]],[T]]],[11,R[83],E,E,20,[[["self"],[T]]]],[11,R[78],E,E,20,[[[U]],[R[6]]]],[11,R[79],E,E,20,[[],[R[6]]]],[11,R[89],E,E,20,[[["self"]],[T]]],[11,R[80],E,E,20,[[["self"]],[T]]],[11,R[84],E,E,20,[[["self"]],[R[90]]]],[11,R[85],E,E,20,[[["self"]]]],[11,R[87],E,E,20,[[["self"],["k"]],["bool"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[78],E,E,21,[[[U]],[R[6]]]],[11,R[79],E,E,21,[[],[R[6]]]],[11,R[89],E,E,21,[[["self"]],[T]]],[11,R[80],E,E,21,[[["self"]],[T]]],[11,R[84],E,E,21,[[["self"]],[R[90]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[78],E,E,23,[[[U]],[R[6]]]],[11,R[79],E,E,23,[[],[R[6]]]],[11,R[89],E,E,23,[[["self"]],[T]]],[11,R[80],E,E,23,[[["self"]],[T]]],[11,R[84],E,E,23,[[["self"]],[R[90]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[82],E,E,22,[[["self"]],[T]]],[11,R[83],E,E,22,[[["self"],[T]]]],[11,R[78],E,E,22,[[[U]],[R[6]]]],[11,R[79],E,E,22,[[],[R[6]]]],[11,R[89],E,E,22,[[["self"]],[T]]],[11,R[80],E,E,22,[[["self"]],[T]]],[11,R[84],E,E,22,[[["self"]],[R[90]]]],[11,R[85],E,E,22,[[["self"]]]],[11,R[87],E,E,22,[[["self"],["k"]],["bool"]]],[11,"from",R[216],E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[82],E,E,24,[[["self"]],[T]]],[11,R[83],E,E,24,[[["self"],[T]]]],[11,R[78],E,E,24,[[[U]],[R[6]]]],[11,R[79],E,E,24,[[],[R[6]]]],[11,R[89],E,E,24,[[["self"]],[T]]],[11,R[80],E,E,24,[[["self"]],[T]]],[11,R[84],E,E,24,[[["self"]],[R[90]]]],[11,R[85],E,E,24,[[["self"]]]],[11,R[87],E,E,24,[[["self"],["k"]],["bool"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[82],E,E,25,[[["self"]],[T]]],[11,R[83],E,E,25,[[["self"],[T]]]],[11,R[78],E,E,25,[[[U]],[R[6]]]],[11,R[79],E,E,25,[[],[R[6]]]],[11,R[89],E,E,25,[[["self"]],[T]]],[11,R[80],E,E,25,[[["self"]],[T]]],[11,R[84],E,E,25,[[["self"]],[R[90]]]],[11,R[85],E,E,25,[[["self"]]]],[11,R[87],E,E,25,[[["self"],["k"]],["bool"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[82],E,E,26,[[["self"]],[T]]],[11,R[83],E,E,26,[[["self"],[T]]]],[11,R[78],E,E,26,[[[U]],[R[6]]]],[11,R[79],E,E,26,[[],[R[6]]]],[11,R[89],E,E,26,[[["self"]],[T]]],[11,R[80],E,E,26,[[["self"]],[T]]],[11,R[84],E,E,26,[[["self"]],[R[90]]]],[11,R[85],E,E,26,[[["self"]]]],[11,R[87],E,E,26,[[["self"],["k"]],["bool"]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[82],E,E,27,[[["self"]],[T]]],[11,R[83],E,E,27,[[["self"],[T]]]],[11,R[78],E,E,27,[[[U]],[R[6]]]],[11,R[79],E,E,27,[[],[R[6]]]],[11,R[89],E,E,27,[[["self"]],[T]]],[11,R[80],E,E,27,[[["self"]],[T]]],[11,R[84],E,E,27,[[["self"]],[R[90]]]],[11,R[85],E,E,27,[[["self"]]]],[11,R[87],E,E,27,[[["self"],["k"]],["bool"]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[82],E,E,28,[[["self"]],[T]]],[11,R[83],E,E,28,[[["self"],[T]]]],[11,R[78],E,E,28,[[[U]],[R[6]]]],[11,R[79],E,E,28,[[],[R[6]]]],[11,R[89],E,E,28,[[["self"]],[T]]],[11,R[80],E,E,28,[[["self"]],[T]]],[11,R[84],E,E,28,[[["self"]],[R[90]]]],[11,R[85],E,E,28,[[["self"]]]],[11,R[87],E,E,28,[[["self"],["k"]],["bool"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[82],E,E,29,[[["self"]],[T]]],[11,R[83],E,E,29,[[["self"],[T]]]],[11,R[78],E,E,29,[[[U]],[R[6]]]],[11,R[79],E,E,29,[[],[R[6]]]],[11,R[89],E,E,29,[[["self"]],[T]]],[11,R[80],E,E,29,[[["self"]],[T]]],[11,R[84],E,E,29,[[["self"]],[R[90]]]],[11,R[85],E,E,29,[[["self"]]]],[11,R[87],E,E,29,[[["self"],["k"]],["bool"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[82],E,E,30,[[["self"]],[T]]],[11,R[83],E,E,30,[[["self"],[T]]]],[11,R[78],E,E,30,[[[U]],[R[6]]]],[11,R[79],E,E,30,[[],[R[6]]]],[11,R[89],E,E,30,[[["self"]],[T]]],[11,R[80],E,E,30,[[["self"]],[T]]],[11,R[84],E,E,30,[[["self"]],[R[90]]]],[11,R[85],E,E,30,[[["self"]]]],[11,R[87],E,E,30,[[["self"],["k"]],["bool"]]],[11,"from",R[217],E,31,[[[T]],[T]]],[11,"into",E,E,31,[[],[U]]],[11,R[78],E,E,31,[[[U]],[R[6]]]],[11,R[79],E,E,31,[[],[R[6]]]],[11,R[89],E,E,31,[[["self"]],[T]]],[11,R[80],E,E,31,[[["self"]],[T]]],[11,R[84],E,E,31,[[["self"]],[R[90]]]],[11,"from",R[218],E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[78],E,E,32,[[[U]],[R[6]]]],[11,R[79],E,E,32,[[],[R[6]]]],[11,R[89],E,E,32,[[["self"]],[T]]],[11,R[80],E,E,32,[[["self"]],[T]]],[11,R[84],E,E,32,[[["self"]],[R[90]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[78],E,E,33,[[[U]],[R[6]]]],[11,R[79],E,E,33,[[],[R[6]]]],[11,R[89],E,E,33,[[["self"]],[T]]],[11,R[80],E,E,33,[[["self"]],[T]]],[11,R[84],E,E,33,[[["self"]],[R[90]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,R[82],E,E,34,[[["self"]],[T]]],[11,R[83],E,E,34,[[["self"],[T]]]],[11,R[78],E,E,34,[[[U]],[R[6]]]],[11,R[79],E,E,34,[[],[R[6]]]],[11,R[89],E,E,34,[[["self"]],[T]]],[11,R[80],E,E,34,[[["self"]],[T]]],[11,R[84],E,E,34,[[["self"]],[R[90]]]],[11,R[85],E,E,34,[[["self"]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[82],E,E,35,[[["self"]],[T]]],[11,R[83],E,E,35,[[["self"],[T]]]],[11,R[78],E,E,35,[[[U]],[R[6]]]],[11,R[79],E,E,35,[[],[R[6]]]],[11,R[89],E,E,35,[[["self"]],[T]]],[11,R[80],E,E,35,[[["self"]],[T]]],[11,R[84],E,E,35,[[["self"]],[R[90]]]],[11,R[85],E,E,35,[[["self"]]]],[11,"from",R[219],E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[78],E,E,36,[[[U]],[R[6]]]],[11,R[79],E,E,36,[[],[R[6]]]],[11,R[89],E,E,36,[[["self"]],[T]]],[11,R[80],E,E,36,[[["self"]],[T]]],[11,R[84],E,E,36,[[["self"]],[R[90]]]],[11,"from",R[220],E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[82],E,E,37,[[["self"]],[T]]],[11,R[83],E,E,37,[[["self"],[T]]]],[11,R[78],E,E,37,[[[U]],[R[6]]]],[11,R[79],E,E,37,[[],[R[6]]]],[11,R[89],E,E,37,[[["self"]],[T]]],[11,R[80],E,E,37,[[["self"]],[T]]],[11,R[84],E,E,37,[[["self"]],[R[90]]]],[11,R[85],E,E,37,[[["self"]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[82],E,E,38,[[["self"]],[T]]],[11,R[83],E,E,38,[[["self"],[T]]]],[11,R[78],E,E,38,[[[U]],[R[6]]]],[11,R[79],E,E,38,[[],[R[6]]]],[11,R[89],E,E,38,[[["self"]],[T]]],[11,R[80],E,E,38,[[["self"]],[T]]],[11,R[84],E,E,38,[[["self"]],[R[90]]]],[11,R[85],E,E,38,[[["self"]]]],[11,"from",R[221],E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[82],E,E,39,[[["self"]],[T]]],[11,R[83],E,E,39,[[["self"],[T]]]],[11,R[78],E,E,39,[[[U]],[R[6]]]],[11,R[79],E,E,39,[[],[R[6]]]],[11,R[89],E,E,39,[[["self"]],[T]]],[11,R[80],E,E,39,[[["self"]],[T]]],[11,R[84],E,E,39,[[["self"]],[R[90]]]],[11,R[85],E,E,39,[[["self"]]]],[11,R[87],E,E,39,[[["self"],["k"]],["bool"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[82],E,E,40,[[["self"]],[T]]],[11,R[83],E,E,40,[[["self"],[T]]]],[11,R[78],E,E,40,[[[U]],[R[6]]]],[11,R[79],E,E,40,[[],[R[6]]]],[11,R[89],E,E,40,[[["self"]],[T]]],[11,R[80],E,E,40,[[["self"]],[T]]],[11,R[84],E,E,40,[[["self"]],[R[90]]]],[11,R[85],E,E,40,[[["self"]]]],[11,R[87],E,E,40,[[["self"],["k"]],["bool"]]],[11,"from",E,E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[82],E,E,41,[[["self"]],[T]]],[11,R[83],E,E,41,[[["self"],[T]]]],[11,R[78],E,E,41,[[[U]],[R[6]]]],[11,R[79],E,E,41,[[],[R[6]]]],[11,R[89],E,E,41,[[["self"]],[T]]],[11,R[80],E,E,41,[[["self"]],[T]]],[11,R[84],E,E,41,[[["self"]],[R[90]]]],[11,R[85],E,E,41,[[["self"]]]],[11,R[87],E,E,41,[[["self"],["k"]],["bool"]]],[11,"from",R[222],E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[82],E,E,42,[[["self"]],[T]]],[11,R[83],E,E,42,[[["self"],[T]]]],[11,R[78],E,E,42,[[[U]],[R[6]]]],[11,R[79],E,E,42,[[],[R[6]]]],[11,R[89],E,E,42,[[["self"]],[T]]],[11,R[80],E,E,42,[[["self"]],[T]]],[11,R[84],E,E,42,[[["self"]],[R[90]]]],[11,R[85],E,E,42,[[["self"]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,"into",E,E,43,[[],[U]]],[11,R[82],E,E,43,[[["self"]],[T]]],[11,R[83],E,E,43,[[["self"],[T]]]],[11,R[78],E,E,43,[[[U]],[R[6]]]],[11,R[79],E,E,43,[[],[R[6]]]],[11,R[89],E,E,43,[[["self"]],[T]]],[11,R[80],E,E,43,[[["self"]],[T]]],[11,R[84],E,E,43,[[["self"]],[R[90]]]],[11,R[85],E,E,43,[[["self"]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,"into",E,E,44,[[],[U]]],[11,R[82],E,E,44,[[["self"]],[T]]],[11,R[83],E,E,44,[[["self"],[T]]]],[11,R[78],E,E,44,[[[U]],[R[6]]]],[11,R[79],E,E,44,[[],[R[6]]]],[11,R[89],E,E,44,[[["self"]],[T]]],[11,R[80],E,E,44,[[["self"]],[T]]],[11,R[84],E,E,44,[[["self"]],[R[90]]]],[11,R[85],E,E,44,[[["self"]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,"into",E,E,45,[[],[U]]],[11,R[82],E,E,45,[[["self"]],[T]]],[11,R[83],E,E,45,[[["self"],[T]]]],[11,R[78],E,E,45,[[[U]],[R[6]]]],[11,R[79],E,E,45,[[],[R[6]]]],[11,R[89],E,E,45,[[["self"]],[T]]],[11,R[80],E,E,45,[[["self"]],[T]]],[11,R[84],E,E,45,[[["self"]],[R[90]]]],[11,R[85],E,E,45,[[["self"]]]],[11,"from",R[223],E,46,[[[T]],[T]]],[11,"into",E,E,46,[[],[U]]],[11,R[82],E,E,46,[[["self"]],[T]]],[11,R[83],E,E,46,[[["self"],[T]]]],[11,R[78],E,E,46,[[[U]],[R[6]]]],[11,R[79],E,E,46,[[],[R[6]]]],[11,R[89],E,E,46,[[["self"]],[T]]],[11,R[80],E,E,46,[[["self"]],[T]]],[11,R[84],E,E,46,[[["self"]],[R[90]]]],[11,R[85],E,E,46,[[["self"]]]],[11,R[87],E,E,46,[[["self"],["k"]],["bool"]]],[11,"from",R[202],E,50,[[[T]],[T]]],[11,"into",E,E,50,[[],[U]]],[11,R[82],E,E,50,[[["self"]],[T]]],[11,R[83],E,E,50,[[["self"],[T]]]],[11,R[78],E,E,50,[[[U]],[R[6]]]],[11,R[79],E,E,50,[[],[R[6]]]],[11,R[89],E,E,50,[[["self"]],[T]]],[11,R[80],E,E,50,[[["self"]],[T]]],[11,R[84],E,E,50,[[["self"]],[R[90]]]],[11,R[85],E,E,50,[[["self"]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,"into",E,E,51,[[],[U]]],[11,R[82],E,E,51,[[["self"]],[T]]],[11,R[83],E,E,51,[[["self"],[T]]]],[11,R[78],E,E,51,[[[U]],[R[6]]]],[11,R[79],E,E,51,[[],[R[6]]]],[11,R[89],E,E,51,[[["self"]],[T]]],[11,R[80],E,E,51,[[["self"]],[T]]],[11,R[84],E,E,51,[[["self"]],[R[90]]]],[11,R[85],E,E,51,[[["self"]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,"into",E,E,48,[[],[U]]],[11,R[82],E,E,48,[[["self"]],[T]]],[11,R[83],E,E,48,[[["self"],[T]]]],[11,R[78],E,E,48,[[[U]],[R[6]]]],[11,R[79],E,E,48,[[],[R[6]]]],[11,R[89],E,E,48,[[["self"]],[T]]],[11,R[80],E,E,48,[[["self"]],[T]]],[11,R[84],E,E,48,[[["self"]],[R[90]]]],[11,R[85],E,E,48,[[["self"]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[82],E,E,47,[[["self"]],[T]]],[11,R[83],E,E,47,[[["self"],[T]]]],[11,R[78],E,E,47,[[[U]],[R[6]]]],[11,R[79],E,E,47,[[],[R[6]]]],[11,R[89],E,E,47,[[["self"]],[T]]],[11,R[80],E,E,47,[[["self"]],[T]]],[11,R[84],E,E,47,[[["self"]],[R[90]]]],[11,R[85],E,E,47,[[["self"]]]],[11,"from",R[208],E,52,[[[T]],[T]]],[11,"into",E,E,52,[[],[U]]],[11,R[82],E,E,52,[[["self"]],[T]]],[11,R[83],E,E,52,[[["self"],[T]]]],[11,R[78],E,E,52,[[[U]],[R[6]]]],[11,R[79],E,E,52,[[],[R[6]]]],[11,R[89],E,E,52,[[["self"]],[T]]],[11,R[80],E,E,52,[[["self"]],[T]]],[11,R[84],E,E,52,[[["self"]],[R[90]]]],[11,R[85],E,E,52,[[["self"]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,"into",E,E,49,[[],[U]]],[11,R[82],E,E,49,[[["self"]],[T]]],[11,R[83],E,E,49,[[["self"],[T]]]],[11,R[78],E,E,49,[[[U]],[R[6]]]],[11,R[79],E,E,49,[[],[R[6]]]],[11,R[89],E,E,49,[[["self"]],[T]]],[11,R[80],E,E,49,[[["self"]],[T]]],[11,R[84],E,E,49,[[["self"]],[R[90]]]],[11,R[85],E,E,49,[[["self"]]]],[11,"from",R[218],E,34,[[[R[11]]],[R[224]]]],[11,"from",E,E,34,[[[R[0]]],[R[224]]]],[11,"from",E,E,34,[[["str"]],[R[224]]]],[11,"from",E,E,34,[[["vec",[R[0]]],[R[0]]],[R[224]]]],[11,"from",E,E,34,[[["vec",["str"]],["str"]],[R[224]]]],[11,"from",R[200],E,53,[[["offset"]],["self"]]],[11,"from",E,E,54,[[["offset"]],["self"]]],[11,"from",R[202],E,50,[[[R[225]]],["self"]]],[11,"from",R[200],E,53,[[["length"]],["self"]]],[11,"from",E,E,54,[[["length"]],["self"]]],[11,"from",R[202],E,51,[[[R[225]]],["self"]]],[11,"from",R[200],E,53,[[["top"]],["self"]]],[11,"from",E,E,54,[[["top"]],["self"]]],[11,"eq",R[188],E,0,[[["self"],[R[226]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[226]]],["bool"]]],[11,"eq",R[211],E,5,[[["self"],[R[189]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[189]]],["bool"]]],[11,"eq",R[212],E,8,[[["self"],[R[227]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[227]]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[245]]],["bool"]]],[11,"eq",R[213],E,10,[[["self"],[R[228]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[228]]],["bool"]]],[11,"eq",R[214],E,17,[[["self"],[R[191]]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[229]]],["bool"]]],[11,"ne",E,E,11,[[["self"],[R[229]]],["bool"]]],[11,"eq",R[215],E,19,[[["self"],[R[230]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[230]]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[246]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[231]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[231]]],["bool"]]],[11,"eq",R[216],E,24,[[["self"],[R[232]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[232]]],["bool"]]],[11,"eq",E,E,25,[[["self"],[R[233]]],["bool"]]],[11,"ne",E,E,25,[[["self"],[R[233]]],["bool"]]],[11,"eq",E,E,26,[[["self"],[R[234]]],["bool"]]],[11,"ne",E,E,26,[[["self"],[R[234]]],["bool"]]],[11,"eq",E,E,30,[[["self"],["keytype"]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[235]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[235]]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[236]]],["bool"]]],[11,"ne",E,E,28,[[["self"],[R[236]]],["bool"]]],[11,"eq",E,E,29,[[["self"],[R[237]]],["bool"]]],[11,"ne",E,E,29,[[["self"],[R[237]]],["bool"]]],[11,"eq",R[218],E,34,[[["self"],[R[224]]],["bool"]]],[11,"ne",E,E,34,[[["self"],[R[224]]],["bool"]]],[11,"eq",E,E,35,[[["self"],[R[238]]],["bool"]]],[11,"ne",E,E,35,[[["self"],[R[238]]],["bool"]]],[11,"eq",R[220],E,37,[[["self"],[R[247]]],["bool"]]],[11,"ne",E,E,37,[[["self"],[R[247]]],["bool"]]],[11,"eq",E,E,38,[[["self"],[R[239]]],["bool"]]],[11,"ne",E,E,38,[[["self"],[R[239]]],["bool"]]],[11,"eq",R[221],E,39,[[["self"],[R[248]]],["bool"]]],[11,"ne",E,E,39,[[["self"],[R[248]]],["bool"]]],[11,"eq",E,E,40,[[["self"],[R[240]]],["bool"]]],[11,"ne",E,E,40,[[["self"],[R[240]]],["bool"]]],[11,"eq",E,E,41,[[["self"],[R[241]]],["bool"]]],[11,"ne",E,E,41,[[["self"],[R[241]]],["bool"]]],[11,"eq",R[188],E,1,[[["self"],[R[242]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[242]]],["bool"]]],[11,"eq",R[222],E,45,[[["self"],[R[249]]],["bool"]]],[11,"eq",R[223],E,46,[[["self"],[R[243]]],["bool"]]],[11,"ne",E,E,46,[[["self"],[R[243]]],["bool"]]],[11,"eq",R[202],E,50,[[["self"],["offset"]],["bool"]]],[11,"ne",E,E,50,[[["self"],["offset"]],["bool"]]],[11,"eq",E,E,51,[[["self"],["length"]],["bool"]]],[11,"ne",E,E,51,[[["self"],["length"]],["bool"]]],[11,"eq",E,E,47,[[["self"],[R[206]]],["bool"]]],[11,"eq",E,E,48,[[["self"],[R[207]]],["bool"]]],[11,"ne",E,E,48,[[["self"],[R[207]]],["bool"]]],[11,"eq",R[208],E,52,[[["self"],["top"]],["bool"]]],[11,"ne",E,E,52,[[["self"],["top"]],["bool"]]],[11,"eq",E,E,49,[[["self"],[R[244]]],["bool"]]],[11,"ne",E,E,49,[[["self"],[R[244]]],["bool"]]],[11,"clone",R[188],E,0,[[["self"]],[R[226]]]],[11,"clone",R[211],E,5,[[["self"]],[R[189]]]],[11,"clone",E,E,7,[[["self"]],[R[305]]]],[11,"clone",R[212],E,8,[[["self"]],[R[227]]]],[11,"clone",E,E,9,[[["self"]],[R[245]]]],[11,"clone",R[213],E,10,[[["self"]],[R[228]]]],[11,"clone",R[214],E,17,[[["self"]],[R[191]]]],[11,"clone",E,E,11,[[["self"]],[R[229]]]],[11,"clone",E,E,13,[[["self"]],["entryresultmeta"]]],[11,"clone",E,E,14,[[["self"]],["getentryresultitem"]]],[11,"clone",E,E,15,[[["self"]],[R[250]]]],[11,"clone",E,E,18,[[["self"]],["getentryresulttype"]]],[11,"clone",E,E,16,[[["self"]],[R[306]]]],[11,"clone",R[215],E,19,[[["self"]],[R[230]]]],[11,"clone",E,E,22,[[["self"]],[R[246]]]],[11,"clone",E,E,20,[[["self"]],[R[231]]]],[11,"clone",R[216],E,24,[[["self"]],[R[232]]]],[11,"clone",E,E,25,[[["self"]],[R[233]]]],[11,"clone",E,E,26,[[["self"]],[R[234]]]],[11,"clone",E,E,30,[[["self"]],["keytype"]]],[11,"clone",E,E,27,[[["self"]],[R[235]]]],[11,"clone",E,E,28,[[["self"]],[R[236]]]],[11,"clone",E,E,29,[[["self"]],[R[237]]]],[11,"clone",R[218],E,34,[[["self"]],[R[224]]]],[11,"clone",E,E,35,[[["self"]],[R[238]]]],[11,"clone",R[220],E,37,[[["self"]],[R[247]]]],[11,"clone",E,E,38,[[["self"]],[R[239]]]],[11,"clone",R[221],E,39,[[["self"]],[R[248]]]],[11,"clone",E,E,40,[[["self"]],[R[240]]]],[11,"clone",E,E,41,[[["self"]],[R[241]]]],[11,"clone",R[188],E,1,[[["self"]],[R[242]]]],[11,"clone",R[222],E,42,[[["self"]],[R[327]]]],[11,"clone",E,E,45,[[["self"]],[R[249]]]],[11,"clone",E,E,43,[[["self"]],[R[326]]]],[11,"clone",E,E,44,[[["self"]],[R[325]]]],[11,"clone",R[223],E,46,[[["self"]],[R[243]]]],[11,"clone",R[188],E,2,[[["self"]],["zomeapiglobals"]]],[11,"clone",R[202],E,50,[[["self"]],["offset"]]],[11,"clone",E,E,51,[[["self"]],["length"]]],[11,"clone",E,E,47,[[["self"]],[R[206]]]],[11,"clone",E,E,48,[[["self"]],[R[207]]]],[11,"clone",R[208],E,52,[[["self"]],["top"]]],[11,"clone",E,E,49,[[["self"]],[R[244]]]],[11,R[131],R[188],E,0,[[],[R[226]]]],[11,R[131],R[210],E,3,[[],["commitcapabilitygrantargs"]]],[11,R[131],E,E,4,[[],["commitcapabilityclaimargs"]]],[11,R[131],R[211],"The default CommitEntryOptions has no additional provenance.",5,[[],["self"]]],[11,R[131],R[214],E,17,[[],["self"]]],[11,R[131],E,E,11,[[],["self"]]],[11,R[131],E,E,15,[[],[R[250]]]],[11,R[131],R[215],E,19,[[],[R[230]]]],[11,R[131],E,E,22,[[],["self"]]],[11,R[131],E,E,20,[[],["self"]]],[11,R[131],R[217],E,31,[[],["linkentriesargs"]]],[11,R[131],R[218],E,34,[[],[R[224]]]],[11,R[131],E,E,32,[[],["queryargs"]]],[11,R[131],E,E,33,[[],[R[381]]]],[11,R[131],R[221],E,39,[[],[R[248]]]],[11,R[131],E,E,40,[[],[R[240]]]],[11,R[131],R[208],E,52,[[],["top"]]],[11,R[131],E,E,49,[[],[R[244]]]],[11,"fmt",R[188],E,0,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[210],E,3,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,4,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[211],E,5,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,6,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,7,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[212],E,8,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,9,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[213],E,10,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[214],E,17,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,11,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,12,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,13,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,14,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,15,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,18,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,16,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[215],E,19,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,22,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,20,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,21,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,23,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[216],E,24,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,25,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,26,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,30,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,27,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,28,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,29,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[217],E,31,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[218],E,34,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,32,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,33,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,35,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[219],E,36,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[220],E,37,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,38,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[221],E,39,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,40,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,41,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[188],E,1,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[222],E,42,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,45,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,43,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,44,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[223],E,46,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[188],E,2,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[202],E,50,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,51,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,47,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,48,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",R[208],E,52,[[["self"],[R[135]]],[R[6]]]],[11,"fmt",E,E,49,[[["self"],[R[135]]],[R[6]]]],[11,R[78],R[188],E,0,[[[R[26]]],[R[6]]]],[11,R[78],E,E,0,[[[R[26]]],[R[6]]]],[11,R[78],R[210],E,3,[[[R[26]]],[R[6]]]],[11,R[78],E,E,3,[[[R[26]]],[R[6]]]],[11,R[78],E,E,4,[[[R[26]]],[R[6]]]],[11,R[78],E,E,4,[[[R[26]]],[R[6]]]],[11,R[78],R[211],E,5,[[[R[26]]],[R[6]]]],[11,R[78],E,E,5,[[[R[26]]],[R[6]]]],[11,R[78],E,E,6,[[[R[26]]],[R[6]]]],[11,R[78],E,E,6,[[[R[26]]],[R[6]]]],[11,R[78],E,E,7,[[[R[26]]],[R[6]]]],[11,R[78],E,E,7,[[[R[26]]],[R[6]]]],[11,R[78],R[212],E,8,[[[R[26]]],[R[6]]]],[11,R[78],E,E,8,[[[R[26]]],[R[6]]]],[11,R[78],E,E,9,[[[R[26]]],[R[6]]]],[11,R[78],E,E,9,[[[R[26]]],[R[6]]]],[11,R[78],R[213],E,10,[[[R[26]]],[R[6]]]],[11,R[78],E,E,10,[[[R[26]]],[R[6]]]],[11,R[78],R[214],E,17,[[[R[26]]],[R[6]]]],[11,R[78],E,E,17,[[[R[26]]],[R[6]]]],[11,R[78],E,E,11,[[[R[26]]],[R[6]]]],[11,R[78],E,E,11,[[[R[26]]],[R[6]]]],[11,R[78],E,E,12,[[[R[26]]],[R[6]]]],[11,R[78],E,E,12,[[[R[26]]],[R[6]]]],[11,R[78],E,E,13,[[[R[26]]],[R[6]]]],[11,R[78],E,E,13,[[[R[26]]],[R[6]]]],[11,R[78],E,E,14,[[[R[26]]],[R[6]]]],[11,R[78],E,E,14,[[[R[26]]],[R[6]]]],[11,R[78],E,E,15,[[[R[26]]],[R[6]]]],[11,R[78],E,E,15,[[[R[26]]],[R[6]]]],[11,R[78],E,E,18,[[[R[26]]],[R[6]]]],[11,R[78],E,E,18,[[[R[26]]],[R[6]]]],[11,R[78],E,E,16,[[[R[26]]],[R[6]]]],[11,R[78],E,E,16,[[[R[26]]],[R[6]]]],[11,R[78],R[215],E,19,[[[R[26]]],[R[6]]]],[11,R[78],E,E,19,[[[R[26]]],[R[6]]]],[11,R[78],E,E,22,[[[R[26]]],[R[6]]]],[11,R[78],E,E,22,[[[R[26]]],[R[6]]]],[11,R[78],E,E,20,[[[R[26]]],[R[6]]]],[11,R[78],E,E,20,[[[R[26]]],[R[6]]]],[11,R[78],E,E,21,[[[R[26]]],[R[6]]]],[11,R[78],E,E,21,[[[R[26]]],[R[6]]]],[11,R[78],E,E,23,[[[R[26]]],[R[6]]]],[11,R[78],E,E,23,[[[R[26]]],[R[6]]]],[11,R[78],R[216],E,24,[[[R[26]]],[R[6]]]],[11,R[78],E,E,24,[[[R[26]]],[R[6]]]],[11,R[78],E,E,25,[[[R[26]]],[R[6]]]],[11,R[78],E,E,25,[[[R[26]]],[R[6]]]],[11,R[78],E,E,26,[[[R[26]]],[R[6]]]],[11,R[78],E,E,26,[[[R[26]]],[R[6]]]],[11,R[78],E,E,30,[[[R[26]]],[R[6]]]],[11,R[78],E,E,30,[[[R[26]]],[R[6]]]],[11,R[78],E,E,27,[[[R[26]]],[R[6]]]],[11,R[78],E,E,27,[[[R[26]]],[R[6]]]],[11,R[78],E,E,28,[[[R[26]]],[R[6]]]],[11,R[78],E,E,28,[[[R[26]]],[R[6]]]],[11,R[78],E,E,29,[[[R[26]]],[R[6]]]],[11,R[78],E,E,29,[[[R[26]]],[R[6]]]],[11,R[78],R[217],E,31,[[[R[26]]],[R[6]]]],[11,R[78],E,E,31,[[[R[26]]],[R[6]]]],[11,R[78],R[218],E,34,[[[R[26]]],[R[6]]]],[11,R[78],E,E,34,[[[R[26]]],[R[6]]]],[11,R[78],E,E,32,[[[R[26]]],[R[6]]]],[11,R[78],E,E,32,[[[R[26]]],[R[6]]]],[11,R[78],E,E,33,[[[R[26]]],[R[6]]]],[11,R[78],E,E,33,[[[R[26]]],[R[6]]]],[11,R[78],E,E,35,[[[R[26]]],[R[6]]]],[11,R[78],E,E,35,[[[R[26]]],[R[6]]]],[11,R[78],R[219],E,36,[[[R[26]]],[R[6]]]],[11,R[78],E,E,36,[[[R[26]]],[R[6]]]],[11,R[78],R[220],E,37,[[[R[26]]],[R[6]]]],[11,R[78],E,E,37,[[[R[26]]],[R[6]]]],[11,R[78],E,E,38,[[[R[26]]],[R[6]]]],[11,R[78],E,E,38,[[[R[26]]],[R[6]]]],[11,R[78],R[221],E,39,[[[R[26]]],[R[6]]]],[11,R[78],E,E,39,[[[R[26]]],[R[6]]]],[11,R[78],E,E,40,[[[R[26]]],[R[6]]]],[11,R[78],E,E,40,[[[R[26]]],[R[6]]]],[11,R[78],E,E,41,[[[R[26]]],[R[6]]]],[11,R[78],E,E,41,[[[R[26]]],[R[6]]]],[11,R[78],R[188],E,1,[[[R[26]]],[R[6]]]],[11,R[78],E,E,1,[[[R[26]]],[R[6]]]],[11,R[78],R[222],E,42,[[[R[26]]],[R[6]]]],[11,R[78],E,E,42,[[[R[26]]],[R[6]]]],[11,R[78],E,E,45,[[[R[26]]],[R[6]]]],[11,R[78],E,E,45,[[[R[26]]],[R[6]]]],[11,R[78],E,E,43,[[[R[26]]],[R[6]]]],[11,R[78],E,E,43,[[[R[26]]],[R[6]]]],[11,R[78],E,E,44,[[[R[26]]],[R[6]]]],[11,R[78],E,E,44,[[[R[26]]],[R[6]]]],[11,R[78],R[223],E,46,[[[R[26]]],[R[6]]]],[11,R[78],E,E,46,[[[R[26]]],[R[6]]]],[11,R[78],R[188],E,2,[[[R[26]]],[R[6]]]],[11,R[78],E,E,2,[[[R[26]]],[R[6]]]],[11,R[78],R[202],E,47,[[[R[26]]],[R[6]]]],[11,R[78],E,E,47,[[[R[26]]],[R[6]]]],[11,R[78],E,E,48,[[[R[120]]],[R[6]]]],[11,R[78],R[208],E,49,[[[R[207]]],[R[6]]]],[11,"hash",R[188],E,0,[[["self"],["__h"]]]],[11,"hash",R[212],E,8,[[["self"],["__h"]]]],[11,"hash",E,E,9,[[["self"],["__h"]]]],[11,"hash",R[213],E,10,[[["self"],["__h"]]]],[11,"hash",R[215],E,19,[[["self"],["__h"]]]],[11,"hash",E,E,22,[[["self"],["__h"]]]],[11,"hash",E,E,20,[[["self"],["__h"]]]],[11,"hash",R[216],E,24,[[["self"],["__h"]]]],[11,"hash",E,E,25,[[["self"],["__h"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"hash",E,E,30,[[["self"],["__h"]]]],[11,"hash",E,E,27,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",E,E,29,[[["self"],["__h"]]]],[11,"hash",R[221],E,39,[[["self"],["__h"]]]],[11,"hash",E,E,40,[[["self"],["__h"]]]],[11,"hash",E,E,41,[[["self"],["__h"]]]],[11,"hash",R[223],E,46,[[["self"],["__h"]]]],[11,R[139],R[188],E,0,[[["__d"]],[R[6]]]],[11,R[139],R[210],E,3,[[["__d"]],[R[6]]]],[11,R[139],E,E,4,[[["__d"]],[R[6]]]],[11,R[139],R[211],E,5,[[["__d"]],[R[6]]]],[11,R[139],E,E,6,[[["__d"]],[R[6]]]],[11,R[139],E,E,7,[[["__d"]],[R[6]]]],[11,R[139],R[212],E,8,[[["__d"]],[R[6]]]],[11,R[139],E,E,9,[[["__d"]],[R[6]]]],[11,R[139],R[213],E,10,[[["__d"]],[R[6]]]],[11,R[139],R[214],E,17,[[["__d"]],[R[6]]]],[11,R[139],E,E,11,[[["__d"]],[R[6]]]],[11,R[139],E,E,12,[[["__d"]],[R[6]]]],[11,R[139],E,E,13,[[["__d"]],[R[6]]]],[11,R[139],E,E,14,[[["__d"]],[R[6]]]],[11,R[139],E,E,15,[[["__d"]],[R[6]]]],[11,R[139],E,E,18,[[["__d"]],[R[6]]]],[11,R[139],E,E,16,[[["__d"]],[R[6]]]],[11,R[139],R[215],E,19,[[["__d"]],[R[6]]]],[11,R[139],E,E,22,[[["__d"]],[R[6]]]],[11,R[139],E,E,20,[[["__d"]],[R[6]]]],[11,R[139],E,E,21,[[["__d"]],[R[6]]]],[11,R[139],E,E,23,[[["__d"]],[R[6]]]],[11,R[139],R[216],E,24,[[["__d"]],[R[6]]]],[11,R[139],E,E,25,[[["__d"]],[R[6]]]],[11,R[139],E,E,26,[[["__d"]],[R[6]]]],[11,R[139],E,E,30,[[["__d"]],[R[6]]]],[11,R[139],E,E,27,[[["__d"]],[R[6]]]],[11,R[139],E,E,28,[[["__d"]],[R[6]]]],[11,R[139],E,E,29,[[["__d"]],[R[6]]]],[11,R[139],R[217],E,31,[[["__d"]],[R[6]]]],[11,R[139],R[218],E,34,[[["__d"]],[R[6]]]],[11,R[139],E,E,32,[[["__d"]],[R[6]]]],[11,R[139],E,E,33,[[["__d"]],[R[6]]]],[11,R[139],E,E,35,[[["__d"]],[R[6]]]],[11,R[139],R[219],E,36,[[["__d"]],[R[6]]]],[11,R[139],R[220],E,37,[[["__d"]],[R[6]]]],[11,R[139],E,E,38,[[["__d"]],[R[6]]]],[11,R[139],R[221],E,39,[[["__d"]],[R[6]]]],[11,R[139],E,E,40,[[["__d"]],[R[6]]]],[11,R[139],E,E,41,[[["__d"]],[R[6]]]],[11,R[139],R[188],E,1,[[["__d"]],[R[6]]]],[11,R[139],R[222],E,42,[[["__d"]],[R[6]]]],[11,R[139],E,E,45,[[["__d"]],[R[6]]]],[11,R[139],E,E,43,[[["__d"]],[R[6]]]],[11,R[139],E,E,44,[[["__d"]],[R[6]]]],[11,R[139],R[223],E,46,[[["__d"]],[R[6]]]],[11,R[139],R[188],E,2,[[["__d"]],[R[6]]]],[11,R[139],R[202],E,47,[[["__d"]],[R[6]]]],[11,R[138],R[188],E,0,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[210],E,3,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,4,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[211],E,5,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,6,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,7,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[212],E,8,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,9,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[213],E,10,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[214],E,17,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,11,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,12,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,13,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,14,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,15,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,18,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,16,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[215],E,19,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,22,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,20,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,21,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,23,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[216],E,24,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,25,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,26,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,30,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,27,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,28,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,29,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[217],E,31,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[218],E,34,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,32,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,33,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,35,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[219],E,36,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[220],E,37,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,38,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[221],E,39,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,40,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,41,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[188],E,1,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[222],E,42,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,45,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,43,[[["self"],["__s"]],[R[6]]]],[11,R[138],E,E,44,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[223],E,46,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[188],E,2,[[["self"],["__s"]],[R[6]]]],[11,R[138],R[202],E,47,[[["self"],["__s"]],[R[6]]]],[11,R[251],R[208],"equivalent to TryFrom for WasmStack not implemented as a…",49,[[[R[110]]],[[R[244]],[R[6],[R[244],R[111]]],[R[111]]]]]],"p":[[3,R[252]],[3,R[253]],[3,R[254]],[3,R[255]],[3,R[256]],[3,R[257]],[3,R[258]],[3,R[259]],[3,R[260]],[4,R[261]],[3,R[262]],[3,R[263]],[3,R[264]],[3,R[265]],[3,R[266]],[3,R[267]],[3,R[268]],[4,R[269]],[4,R[270]],[3,R[271]],[3,R[272]],[3,R[273]],[4,R[274]],[3,R[275]],[3,R[276]],[3,R[277]],[3,R[278]],[3,R[279]],[3,R[280]],[3,R[281]],[4,"KeyType"],[3,R[282]],[3,R[283]],[3,R[284]],[4,R[285]],[4,R[286]],[3,R[287]],[3,"SendArgs"],[3,R[288]],[3,"SignArgs"],[3,R[289]],[3,R[290]],[3,R[291]],[3,R[292]],[3,R[293]],[4,R[294]],[3,R[295]],[4,R[296]],[3,R[297]],[3,R[298]],[3,"Offset"],[3,"Length"],[3,"Top"],[6,R[299]],[6,R[300]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);