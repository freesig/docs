initSidebarItems({"enum":[["Action","All Actions for the Holochain Instance Store, according to Redux pattern."]],"struct":[["ActionWrapper","Wrapper for actions that provides a unique ID The unique ID is needed for state tracking to ensure that we can differentiate between two Action dispatches containing the same value when doing \"time travel debug\". The standard approach is to drop the ActionWrapper into the key of a state history HashMap and use the convenience unwrap_to! macro to extract the action data in a reducer. All reducer functions must accept an ActionWrapper so all dispatchers take an ActionWrapper."],["DirectMessageData","Everything the network module needs to know in order to send a direct message."],["GetEntryKey","The unique key that represents a Get request, used to associate the eventual response with this Get request"],["GetLinksKey","The unique key that represents a GetLinks request, used to associate the eventual response with this GetLinks request"],["NetworkSettings","Everything the network needs to initialize"]],"type":[["AgentReduceFn","function signature for action handler functions"],["NetworkReduceFn",""],["NucleusReduceFn",""],["ReduceFn",""]]});