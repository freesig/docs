initSidebarItems({"fn":[["mount_conductor_from_config","Conductor constructor that makes sure the Conductor instance object is mounted in above static CONDUCTOR. It replaces any Conductor instance that was mounted before to CONDUCTOR with a new one create from the given configuration."],["notify",""]],"struct":[["CONDUCTOR","This is a global and mutable Conductor singleton. (Ok, not really. I've made Conductor::from_config public again so holochain_nodejs is not forced to use Conductor as a singleton so we don't run into problems with tests affecting each other. The consequence is that Rustc can't help us in enforcing the conductor to be singleton otherwise. The only point this is important anyway is in the interfaces. That code needs this static variable to be set in order to be able to call ConductorAdmin functions.) In order to call from interface threads Conductor admin functions that change the config and hence mutate the Conductor, we need something that owns the Conductor and is accessible from everywhere (esp. those conductor interface method closures in interface.rs)."],["Conductor","Main representation of the conductor. Holds a `HashMap` of Holochain instances referenced by ID. A primary point in this struct is `load_config(&mut self, config: &Configuration) -> Result<(), String>` which takes a `config::Configuration` struct and tries to instantiate all configured instances. While doing so it has to load DNA files referenced in the configuration. In order to not bind this code to the assumption that there is a filesystem and also enable easier testing, a DnaLoader ()which is a closure that returns a Dna object for a given path string) has to be injected on creation."]],"type":[["DnaLoader",""],["KeyLoader",""],["UiDirCopier",""]]});